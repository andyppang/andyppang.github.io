<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GitHub page 备份到 cloudflare page</title>
    <link href="/2025/04/19/GitHub%20page%20%E5%A4%87%E4%BB%BD%E5%88%B0%20cloudflare%20page/"/>
    <url>/2025/04/19/GitHub%20page%20%E5%A4%87%E4%BB%BD%E5%88%B0%20cloudflare%20page/</url>
    
    <content type="html"><![CDATA[<p>cloudflare page 只需要连接 github的仓库就可以了，不需要配置任何密匙，并且可以绑定自己的域名</p><p>zeroandone.pages.dev</p><p>pl.zeroandone.eu.org</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub page</tag>
      
      <tag>cloudflare page</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker开启ipv6支持</title>
    <link href="/2025/04/19/docker%E5%BC%80%E5%90%AFipv6%E6%94%AF%E6%8C%81/"/>
    <url>/2025/04/19/docker%E5%BC%80%E5%90%AFipv6%E6%94%AF%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h1 id="检查宿主机是否开启ipv6转发">1.检查宿主机是否开启Ipv6转发</h1><p>确保启用IPv6转发（编辑 <code>/etc/sysctl.conf</code>）：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">net<span class="hljs-selector-class">.ipv6</span><span class="hljs-selector-class">.conf</span><span class="hljs-selector-class">.all</span>.forwarding=<span class="hljs-number">1</span><br>net<span class="hljs-selector-class">.ipv6</span><span class="hljs-selector-class">.conf</span><span class="hljs-selector-class">.default</span>.forwarding=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>应用配置：<code>sysctl -p</code></p><h1 id="修改docker配置">2.修改docker配置</h1><p>编辑<code>/etc/docker/daemon.json</code>，之前可以先备份原文件，然后添加如下信息：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">```<br><br>然后`systemctl restart docker`，如果出现错误，检查配置文件是否缺少逗号或者是否对齐。<br><br><span class="hljs-title">此时通过`ip a show docker0`查看宿主机是否为docker分配了ipv6地址，例如`inet6 fd00:db8::</span><span class="hljs-number">1</span>/<span class="hljs-number">64</span> scope global`，如果看到这样的地址，即表示开启成功了。<br><br># <span class="hljs-number">3</span>.为容器建立新的ipv6专用网络<br><br></code></pre></td></tr></table></figure><p>docker network create --driver=bridge --subnet=172.26.0.0/16--subnet=fd00:db8:abcd::/64 --ipv6 my-ipv6-network ```</p><p>这一步容易出错，原因是如果之前建立的容器较多，172.26.0.0/16这个地址段很可能已经被占用了，修改一下就ok啦，这样就建立了名字为<code>my-ipv6-network</code>的docker网络。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>adb连接TCL75Q10GPro</title>
    <link href="/2024/09/16/adb%E8%BF%9E%E6%8E%A5TCL75Q10GPro/"/>
    <url>/2024/09/16/adb%E8%BF%9E%E6%8E%A5TCL75Q10GPro/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>苦于无法在电视上设置网络的网关，所以采用迂回的办法：通过adb修改电视的http代理设置。</p><h2 id="电视上打开adb">电视上打开adb</h2><pre><code class=" mermaid">graph LR    A[设置] --&gt; B[关于] --&gt; C[本机信息] --&gt; D[依次按遥控器上下左右键]</code></pre><p>然后就可以看到adb的选项，打开即可</p><h2 id="在电脑上通过adb连接">在电脑上通过adb连接</h2><p>安装adb自行百度，在同一局域网下 <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">adb</span> connect 电视ip:<span class="hljs-number">5555</span><br></code></pre></td></tr></table></figure>电视上会跳出权限对话框，选择一律允许连接即可连接成功</p><p>添加proxy的命令：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#To Add Proxy</span><br>adb <span class="hljs-built_in">shell</span> settings <span class="hljs-built_in">put</span> <span class="hljs-built_in">global</span> http_proxy <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.120</span>:<span class="hljs-number">10809</span><br><br><span class="hljs-comment">#To Remove Proxy</span><br>adb <span class="hljs-built_in">shell</span> settings <span class="hljs-built_in">put</span> <span class="hljs-built_in">global</span> http_proxy :<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>修改为自己dns的命令 <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#设置私有dns模式为hostname模式</span><br>adb <span class="hljs-built_in">shell</span> settings <span class="hljs-built_in">put</span> <span class="hljs-built_in">global</span> private_dns_mode hostname<br><span class="hljs-comment">#设置hostname的dot地址，注意必须是域名，ip地址无效</span><br>adb <span class="hljs-built_in">shell</span> settings <span class="hljs-built_in">put</span> <span class="hljs-built_in">global</span> private_dns_specifier yourid.nextdns.io<br><span class="hljs-comment">#关闭私有dns</span><br>adb <span class="hljs-built_in">shell</span> settings <span class="hljs-built_in">put</span> <span class="hljs-built_in">global</span> private_dns_mode off<br></code></pre></td></tr></table></figure> ## 后记openwrt的ssrplus只能提供socks代理，并不提供http代理，而adb好像只能设置http代理，所以需要将op的socks代理转为http代理。</p><p>利用<code>privoxy</code>实现，具体参考<ahref="https://blog.csdn.net/u011005745/article/details/132383080">使用Privoxy为Openwrt的ssrplus开启http代理服务器_openwrt代理服务器-CSDN博客</a>，如果不能安装privoxy的话，可以先更换一下opkg的源再安装就没问题了。</p><h2 id="系统更新后有惊喜">系统更新后有惊喜</h2><p>9月份系统更新版本v8-t653t11-lf1v320.002164后，国庆节期间偶然发现wifi里面可以手动设置ip地址、dns服务器和<strong>网关</strong>了！！！！</p><p>留坑待填：如何禁止系统更新或者寻找该系统的固件备用（t653t11代表机器芯片型号）</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openwrt</tag>
      
      <tag>adb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动部署Hexo</title>
    <link href="/2024/08/01/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo/"/>
    <url>/2024/08/01/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="创建两个github仓库">创建两个Github仓库</h2><p>在 Github 网站建立两个仓库，名称任意。其中一个仓库用于存放 Blog文件的源码（以下称<strong>仓库A</strong>），另一个用于存放生成以后的静态内容，即<code>public</code> 目录下的内容（以下称 <strong>仓库B</strong>）。</p><p><a href="https://hui-shao.com/hexo-github-action-vervel/">使用 GithubAction + Vercel 为 Hexo 的 Pandoc 渲染器提供支持 | Hui-Shao'sBlog</a></p><h2id="创建个人访问令牌personal-access-token">创建个人访问令牌（PersonalAccess Token）</h2><p>因为我们需要在 <strong>Hexo 项目仓库A</strong> 执行 <strong>GithubActions</strong> 向 <strong>username.github.io仓库B</strong>推送代码，由于 Github 权限限制，我们需要在 GitHub账户中创建一个具有足够权限的<strong>个人访问令牌（Personal AccessToken，简称 PAT）</strong>。这个令牌需要有足够的权限来修改仓库。然后在secrects 里面添加 PERSONAL_TOKEN</p><p><ahref="https://hackergavin.com/2024/01/11/hexo-automate-deploy/">利用GitHub Actions 实现自动化部署 Hexo 到 Github Pages(hackergavin.com)</a></p><h2 id="创建-github-actions-脚本">创建 Github Actions 脚本</h2><ol type="1"><li>在你的 Hexo 项目仓库A根目录下创建一个<strong>.github/workflows</strong> 文件夹（如果尚未存在）。</li><li>在该文件夹内创建一个新的 <strong>YAML</strong> 文件（例如hexo-deploy.yml），用于定义 <strong>GitHub Actions</strong>工作流。</li><li>复制如下配置到 <strong>YAML</strong> 文件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span> <span class="hljs-comment"># 或你使用的默认分支名称</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">blog</span> <span class="hljs-string">source</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">blog</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Set</span> <span class="hljs-string">up</span> <span class="hljs-string">Node.js</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;16&quot;</span> <span class="hljs-comment"># 设置 Node.js 版本</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-node-$&#123;&#123;</span> <span class="hljs-string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br>            <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-node-</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span><br>        <span class="hljs-attr">working-directory:</span> <span class="hljs-string">./blog</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">CLI</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">hexo-cli</span><br>        <span class="hljs-attr">working-directory:</span> <span class="hljs-string">./blog</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">pandoc</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">nikeee/setup-pandoc@v1</span> <span class="hljs-comment"># 可选项，如果是用pandoc渲染的话，需要安装这个</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">static</span> <span class="hljs-string">pages</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br>        <span class="hljs-attr">working-directory:</span> <span class="hljs-string">./blog</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">personal_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.PERSONAL_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">./blog/public</span><br>          <span class="hljs-attr">external_repository:</span> <span class="hljs-string">andyppang/andyppang.github.io</span> <span class="hljs-comment"># 更改为你的 GitHub Pages 仓库</span><br>          <span class="hljs-attr">publish_branch:</span> <span class="hljs-string">master</span> <span class="hljs-comment"># GitHub Pages 分支</span><br><br></code></pre></td></tr></table></figure><h2 id="大功告成">大功告成</h2><ol type="1"><li><p>提交本地的 Hexo 项目代码到对应 Github 仓库即可触发 <strong>GithubActions</strong> 工作流实现自动部署，然后访问你的<strong>username.github.io</strong> ！</p></li><li><p>或者直接在github仓库A的source/_posts文件夹下添加文件，开始写博客，写完就会自动部署到仓库B</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>github actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github actions 测试发送</title>
    <link href="/2024/08/01/Github%20actions%20%E6%B5%8B%E8%AF%95%E5%8F%91%E9%80%81/"/>
    <url>/2024/08/01/Github%20actions%20%E6%B5%8B%E8%AF%95%E5%8F%91%E9%80%81/</url>
    
    <content type="html"><![CDATA[<h1 id="测试文">测试文</h1><h2 id="测试文-1">测试文</h2><h3 id="测试文-2">测试文</h3>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>截图识别数学公式为latex代码</title>
    <link href="/2023/05/29/%E6%88%AA%E5%9B%BE%E8%AF%86%E5%88%AB%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%B8%BAlatex%E4%BB%A3%E7%A0%81/"/>
    <url>/2023/05/29/%E6%88%AA%E5%9B%BE%E8%AF%86%E5%88%AB%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%B8%BAlatex%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="实现的几种途径">实现的几种途径</h2><ul><li><p>商用的最有名的Mathpix</p></li><li><p>免费的：https://simpletex.cn</p></li><li><p>开源的两个项目：</p><p><ahref="https://github.com/lukas-blecher/LaTeX-OCR">lukas-blecher/LaTeX-OCR:pix2tex: Using a ViT to convert images of equations into LaTeX code.(github.com)</a></p><p><a href="https://github.com/breezedeus/Pix2Text">breezedeus/Pix2Text:Pix In, Latex &amp; Text Out. Recognize Chinese, English Texts, and MathFormulas from Images. (github.com)</a></p></li></ul><p>本文主要介绍开源的两个项目的安装使用</p><h2 id="latex-ocrpix2tex">LaTex-OCR：pix2tex</h2><p>该项目的目标是创建一个基于学习的系统，它可以接收一张数学公式的图片，并返回相应的LaTeX代码。</p><ol type="1"><li><p><strong>系统已经安装Python3.7+</strong></p></li><li><p>国内网络环境建议更换pip源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip install -i https:<span class="hljs-regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple pip --trusted-host<br></code></pre></td></tr></table></figure></li><li><p>然后一行代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install pix2tex[gui]<br></code></pre></td></tr></table></figure></li><li><p>在终端输入命令<code>latexocr</code>就会调用应用程序，对公式截图即可自动转换并且自动复制latex代码，其中界面当中的参数<code>Temperature</code>调整是公式识别的精度</p></li></ol><p>安装过程中如果出现各种错误，善用各种搜索引擎和各种AI，感觉可以和chatgpt媲美的Perplexity.ai</p><p>自己安装过程中总是提示找不到PyQt的各种包，也许有用的一个命令</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install PyQt<span class="hljs-number">6</span>-WebEngine==<span class="hljs-number">6</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>还有调用api的用法，请参看项目主页</p><h2 id="pix2text">pix2text</h2><p>从名字来看，这是pix2tex项目的加强版，pix2tex只能识别数学公式，而pix2text希望能识别文字和公式混合的场景，从使用的效果来看，还有很大的进步空间</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip install pix2text -i https:<span class="hljs-regexp">//</span>pypi.doubanio.com/simple<br></code></pre></td></tr></table></figure><p>如果电脑中从未安装过 <code>PyTorch</code>，<code>OpenCV</code>python包，初次安装可能会遇到不少问题，善用各种搜索引擎和AI</p><p>各种使用方式看项目主页即可，我使用的是本机<ahref="https://github.com/breezedeus/Pix2Text#%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C">脚本运行</a></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>latex-ocr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手动搭建chatgpt-mirai-qqbot对接AI和聊天软件</title>
    <link href="/2023/05/25/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BAchatgpt-mirai-qqbot%E5%AF%B9%E6%8E%A5AI%E5%92%8C%E8%81%8A%E5%A4%A9%E8%BD%AF%E4%BB%B6/"/>
    <url>/2023/05/25/%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BAchatgpt-mirai-qqbot%E5%AF%B9%E6%8E%A5AI%E5%92%8C%E8%81%8A%E5%A4%A9%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="说明">说明</h2><p>前面用docker-compose一键搭建过，为了方便调试各种错误，这次手动一步步搭建，也顺便学习一些新东西。</p><h2 id="准备工作">准备工作</h2><ul><li><p>两个qq账号</p></li><li><p>一个微信账号</p></li><li><p>一个tg账号：<ahref="https://www.dengnz.com/2020/11/23/telegram-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E7%94%B3%E8%AF%B7%E5%92%8C%E8%AE%BE%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/">新建bot获取token</a>，<ahref="https://cloud.tencent.com/developer/article/1948136">获取chatid</a></p></li><li><p>一个chatgpt账号<ahref="https://chatgpt-qq.lss233.com/pei-zhi-wen-jian-jiao-cheng/jie-ru-ai-ping-tai/jie-ru-openai-de-chatgpt">获取accesstoken</a></p></li><li><p>一个bing账号<ahref="https://chatgpt-qq.lss233.com/pei-zhi-wen-jian-jiao-cheng/jie-ru-ai-ping-tai/jie-ru-new-bing-sydney">获取cookie</a></p></li><li><p>一个Google bard账户<ahref="https://chatgpt-qq.lss233.com/pei-zhi-wen-jian-jiao-cheng/jie-ru-ai-ping-tai/jie-ru-google-bard">获取cookie</a></p></li><li><p>国内和国外vps各一台（国外vps负责接入AI，国内vps负责挂qq和微信）</p></li><li><p>国外vps安装Python3.11及以上版本（chatgpt-mirai-qqbot需要的要求）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 以下是Debian10或11安装Python3.11的命令</span><br><br>sudo apt update &amp;&amp; sudo apt upgrade<br><br>sudo apt install wget build-essential libncursesw5-dev libssl-dev \<br>     libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev<br>     <br>wget https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz<br><br>tar xzf Python-3.11.3.tgz<br><br>cd Python-3.11.3<br><br>./configure --enable-optimizations<br><br>make altinstall<br><br>python3.11 -V<br><span class="hljs-meta">#</span><span class="bash"> 如果系统有多个版本的python，注意看默认使用的版本是不是3.11</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="项目地址">项目地址</h2><ul><li><ahref="https://github.com/lss233/chatgpt-mirai-qq-bot">lss233/chatgpt-mirai-qq-bot:🚀 一键部署！真正的 AI聊天机器人！支持ChatGPT、文心一言、Bing、Bard、ChatGLM、POE，多账号，人设调教，虚拟女仆、图片渲染、语音发送| 支持 QQ、Telegram、Discord、微信 等平台 (github.com)</a></li><li><a href="https://github.com/Mrs4s/go-cqhttp">Mrs4s/go-cqhttp:cqhttp的golang实现，轻量、原生跨平台. (github.com)</a></li><li><a href="https://github.com/lcjqyml/wechatbot">lcjqyml/wechatbot: Achatbot for wechat. (github.com)</a></li></ul><h2 id="搭建项目本体">搭建项目本体</h2><p>在国外vps上：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/lss233/</span>chatgpt-mirai-qq-bot<br>cd chatgpt-mirai-qq-bot<br>pip3 install -r requirements.txt<br></code></pre></td></tr></table></figure><h2 id="接入各种ai">接入各种AI</h2><p>调整配置文件config.cfg，没有就自己创建，如果不需要接入那么多的ai和聊天软件就注释或删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python">[onebot]<br>qq=小号qq<br>manager_qq=管理员qq<br><span class="hljs-comment"># 此处保持默认设置，无需修改</span><br>reverse_ws_host = <span class="hljs-string">&quot;0.0.0.0&quot;</span><br>reverse_ws_port = <span class="hljs-number">8554</span><br><br>[telegram]<br><span class="hljs-comment"># 这个 token 是找 BotFather 要的</span><br>bot_token = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment"># 如果部署在国内，就填这个设置代理</span><br><span class="hljs-comment"># 不填的话就会读取系统的代理设置</span><br><span class="hljs-comment"># proxy = &quot;http://localhost:1080&quot;</span><br><span class="hljs-comment"># 管理员的 chat id</span><br>manager_chat = <br><br>[openai]<br>[[openai.accounts]]<br>access_token = <span class="hljs-string">&quot;换成自己的&quot;</span><br><br>[bing]<br><span class="hljs-comment"># 开启 Bing 画图功能</span><br>use_drawing = true<br>[[bing.accounts]]<br>cookie_content = <span class="hljs-string">&#x27;换成自己的&#x27;</span><br><br><span class="hljs-comment">#[poe]</span><br><span class="hljs-comment">#[[poe.accounts]]</span><br><span class="hljs-comment"># 登陆 poe.com 网站后，通过开发者工具查看Cookie获取</span><br><span class="hljs-comment">#p_b = &quot;这个秒封，不建议接入&quot;</span><br><br>[bard]<br>[[bard.accounts]]<br>cookie_content = <span class="hljs-string">&#x27;换成自己的&#x27;</span><br><br>[http]<br>host = <span class="hljs-string">&quot;0.0.0.0&quot;</span><br><span class="hljs-comment"># 填写提供服务的端口，此端口用来接入微信</span><br>port = <span class="hljs-number">8234</span><br><span class="hljs-comment"># 是否开启调试</span><br>debug = false<br><br></code></pre></td></tr></table></figure><h2 id="接入聊天软件">接入聊天软件</h2><p>在国内vps上</p><h3id="安装go-cqhttp接入qq最困难的一步先看再动">安装go-cqhttp接入qq（最困难的一步，先看再动）</h3><ol type="1"><li><p><ahref="https://github.com/Mrs4s/go-cqhttp/releases">下载</a>最新版适合自己vps的软件包</p></li><li><p>解压包 <code>tar -xzvf [文件名]</code></p></li><li><p>cd 进入解压目录</p></li><li><p>输入 <code>./go-cqhttp</code>回车运行，选择3反向WebSocket，生成配置文件</p></li><li><p>按下述样例修改配置：最简配置可只关注account和servers两项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> go-cqhttp 默认配置文件</span><br><br>account: # 账号相关<br>  uin:  # QQ账号<br>  password: &#x27;&#x27; # 密码为空时使用扫码登录,如果device.json里面的protocol选择的是2也就是watch在线，就留空扫码登录，需要手机端qq和vps在同一ip才能扫码<br>  encrypt: false  # 是否开启密码加密<br>  status: 17      # 在线状态（任意都行） 请参考 https://docs.go-cqhttp.org/guide/config.html#在线状态<br>  relogin: # 重连设置<br>    delay: 3   # 首次重连延迟, 单位秒<br>    interval: 3   # 重连间隔<br>    max-times: 0  # 最大重连次数, 0为无限制<br><br><span class="hljs-meta">  #</span><span class="bash"> 是否使用服务器下发的新地址进行重连</span><br><span class="hljs-meta">  #</span><span class="bash"> 注意, 此设置可能导致在海外服务器上连接情况更差</span><br>  use-sso-address: true<br><span class="hljs-meta">  #</span><span class="bash"> 是否允许发送临时会话消息</span><br>  allow-temp-session: false<br><br>heartbeat:<br><span class="hljs-meta">  #</span><span class="bash"> 心跳频率, 单位秒</span><br><span class="hljs-meta">  #</span><span class="bash"> -1 为关闭心跳</span><br>  interval: 5<br><br>message:<br><span class="hljs-meta">  #</span><span class="bash"> 上报数据类型</span><br><span class="hljs-meta">  #</span><span class="bash"> 可选: string,array</span><br>  post-format: string<br><span class="hljs-meta">  #</span><span class="bash"> 是否忽略无效的CQ码, 如果为假将原样发送</span><br>  ignore-invalid-cqcode: false<br><span class="hljs-meta">  #</span><span class="bash"> 是否强制分片发送消息</span><br><span class="hljs-meta">  #</span><span class="bash"> 分片发送将会带来更快的速度</span><br><span class="hljs-meta">  #</span><span class="bash"> 但是兼容性会有些问题</span><br>  force-fragment: false<br><span class="hljs-meta">  #</span><span class="bash"> 是否将url分片发送</span><br>  fix-url: false<br><span class="hljs-meta">  #</span><span class="bash"> 下载图片等请求网络代理</span><br>  proxy-rewrite: &#x27;&#x27;<br><span class="hljs-meta">  #</span><span class="bash"> 是否上报自身消息</span><br>  report-self-message: false<br><span class="hljs-meta">  #</span><span class="bash"> 移除服务端的Reply附带的At</span><br>  remove-reply-at: false<br><span class="hljs-meta">  #</span><span class="bash"> 为Reply附加更多信息</span><br>  extra-reply-data: false<br><span class="hljs-meta">  #</span><span class="bash"> 跳过 Mime 扫描, 忽略错误数据</span><br>  skip-mime-scan: false<br><span class="hljs-meta">  #</span><span class="bash"> 是否自动转换 WebP 图片</span><br>  convert-webp-image: false<br><br>output:<br><span class="hljs-meta">  #</span><span class="bash"> 日志等级 trace,debug,info,warn,error</span><br>  log-level: warn<br><span class="hljs-meta">  #</span><span class="bash"> 日志时效 单位天. 超过这个时间之前的日志将会被自动删除. 设置为 0 表示永久保留.</span><br>  log-aging: 15<br><span class="hljs-meta">  #</span><span class="bash"> 是否在每次启动时强制创建全新的文件储存日志. 为 <span class="hljs-literal">false</span> 的情况下将会在上次启动时创建的日志文件续写</span><br>  log-force-new: true<br><span class="hljs-meta">  #</span><span class="bash"> 是否启用日志颜色</span><br>  log-colorful: true<br><span class="hljs-meta">  #</span><span class="bash"> 是否启用 DEBUG</span><br>  debug: false # 开启调试模式<br><br><span class="hljs-meta">#</span><span class="bash"> 默认中间件锚点</span><br>default-middlewares: &amp;default<br><span class="hljs-meta">  #</span><span class="bash"> 访问密钥, 强烈推荐在公网的服务器设置</span><br>  access-token: &#x27;&#x27;<br><span class="hljs-meta">  #</span><span class="bash"> 事件过滤器文件目录</span><br>  filter: &#x27;&#x27;<br><span class="hljs-meta">  #</span><span class="bash"> API限速设置</span><br><span class="hljs-meta">  #</span><span class="bash"> 该设置为全局生效</span><br><span class="hljs-meta">  #</span><span class="bash"> 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配</span><br><span class="hljs-meta">  #</span><span class="bash"> 目前该限速设置为令牌桶算法, 请参考:</span><br><span class="hljs-meta">  #</span><span class="bash"> https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin</span><br>  rate-limit:<br>    enabled: false # 是否启用限速<br>    frequency: 1  # 令牌回复频率, 单位秒<br>    bucket: 1     # 令牌桶大小<br><br>database: # 数据库相关设置<br>  leveldb:<br>    # 是否启用内置leveldb数据库<br>    # 启用将会增加10-20MB的内存占用和一定的磁盘空间<br>    # 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能<br>    enable: true<br>  sqlite3:<br>    # 是否启用内置sqlite3数据库<br>    # 启用将会增加一定的内存占用和一定的磁盘空间<br>    # 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能<br>    enable: false<br>    cachettl: 3600000000000 # 1h<br><br><span class="hljs-meta">#</span><span class="bash"> 连接服务列表</span><br>servers:<br><span class="hljs-meta">  #</span><span class="bash"> 添加方式，同一连接方式可添加多个，具体配置说明请查看文档</span><br><span class="hljs-meta">  #</span><span class="bash">- http: <span class="hljs-comment"># http 通信</span></span><br><span class="hljs-meta">  #</span><span class="bash">- ws:   <span class="hljs-comment"># 正向 Websocket</span></span><br><span class="hljs-meta">  #</span><span class="bash">- ws-reverse: <span class="hljs-comment"># 反向 Websocket</span></span><br><span class="hljs-meta">  #</span><span class="bash">- pprof: <span class="hljs-comment">#性能分析服务器</span></span><br><span class="hljs-meta">  #</span><span class="bash"> 反向WS设置</span><br>  - ws-reverse:<br>      # 反向WS Universal 地址<br>      # 注意 设置了此项地址后下面两项将会被忽略<br>      universal: ws://国外vps的ip:8554/ws<br>      # # 反向WS API 地址<br>      # api: ws://your_websocket_api.server<br>      # # 反向WS Event 地址<br>      # event: ws://your_websocket_event.server<br>      # # 重连间隔 单位毫秒<br>      # reconnect-interval: 3000<br>      # middlewares:<br>      #   &lt;&lt;: *default # 引用默认中间件<br></code></pre></td></tr></table></figure></li><li><p>再次运行 <code>./go-cqhttp</code> 生成随机设备信息<ahref="https://docs.go-cqhttp.org/guide/config.html#%E8%AE%BE%E5%A4%87%E4%BF%A1%E6%81%AF">device.json</a></p></li><li><p>根据需要修改device.json中的protocol为2</p></li><li><p>再次运行 <code>./go-cqhttp</code>，如果你没有配置qq密码就会让你扫码登录，这就要求你的手机qq登录时用的是国外vps的地址，两者必须在同一ip下才能扫码登录成功。<strong>解决这个问题，可以是在本地电脑端下载对应版本的go-cqhttp，按照上述配置成功扫码登录以后，将本地的config.yml和device.json以及session.token上传到vps，然后vps就可以直接登录qq了，目前来看这样操作比较稳当。</strong></p></li><li><p><ahref="https://docs.go-cqhttp.org/guide/config.html#%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF">项目的配置说明</a>，如果遇到问题多看项目issue或提问</p></li><li><p>登录成功以后，有概率碰到qq号被冻结的情况，申诉可解封</p></li></ol><h3 id="接入微信">接入微信</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -e <span class="hljs-attribute">CHATBOT_PROXY</span>=<span class="hljs-string">&quot;http://国外vps的ip:8234&quot;</span> lcjqyml/wechatbot:latest<br></code></pre></td></tr></table></figure><p>端口是安装chatgpt-mirai-qqbot时设置的 <code>config.cfg</code>里面的http项的端口</p><p>启动后扫码登陆即可：</p><ul><li><strong>扫码的微信号需要进过实名认证，否则会异常。</strong></li><li>尽量避免国外登陆或者异地登陆，防止封号。</li><li>若二维码不清晰，可将二维码上方的链接copy至浏览器打开扫码，或者将二维码复制粘贴到记事本，或者更换终端连接器都可能解决（本人开始使用的是finalshell二维码整个变形了）</li></ul><h2 id="启动主程序">启动主程序</h2><p>国外vps</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd chatgpt-mirai-qq-bot<br>python3 bot.py<br></code></pre></td></tr></table></figure><p>注意看报错信息，再去检查各项设置，如果顺利享受各种聊天软件与各种AI的对话吧。</p><h2 id="常用聊天指令">常用聊天指令</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 切换AI</span><br>切换AI chatgpt-web<br>切换AI <span class="hljs-keyword">bing-c</span><br><span class="hljs-keyword">切换AI </span><span class="hljs-keyword">bard</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>切换聊天内容显示方式<br>文本模式<br>图片模式<br>图文混合模式<br></code></pre></td></tr></table></figure><h2 id="后记">后记</h2><ol type="1"><li><p>使用 <code>screen</code> 命令让<code>python3 bot.py</code> 和<code>./go-cqhttp</code>在关闭终端的情况下继续运行：(这玩意就是session的套娃)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 安装命令</span><br>apt install screen<br><br><span class="hljs-meta">#</span><span class="bash"> 新建screen窗口名称为bot，并自动进入</span><br>screen -S bot<br><br><span class="hljs-meta">#</span><span class="bash"> 运行bot</span><br>python3 bot.py<br><br><span class="hljs-meta">#</span><span class="bash"> 退出bot窗口，程序就在窗口中运行了</span><br>Ctrl + A , D<br><br><span class="hljs-meta">#</span><span class="bash"> 显示目前所有的窗口</span><br>screen -ls<br><br><span class="hljs-meta">#</span><span class="bash"> 恢复某个窗口，检查程序运行情况</span><br>screen -r 窗口名称<br><br><span class="hljs-meta">#</span><span class="bash"> 开另一个窗口运行go-cqhttp</span><br>screen -S qq<br></code></pre></td></tr></table></figure></li><li><p>检查<code>go-cqhttp</code>的运行状态，如果失败退出就自动再运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">do</span><br><span class="hljs-comment"># 检查 go-cqhttp 进程是否正在运行</span><br><span class="hljs-keyword">if</span> ps aux | grep -v grep | grep -q <span class="hljs-string">&quot;go-cqhttp&quot;</span>; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;go-cqhttp 进程正在运行,继续监视&quot;</span><br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;go-cqhttp 进程未运行，启动进程&quot;</span><br>  <span class="hljs-comment"># 运行 go-cqhttp 命令，根据实际情况调整命令路径和参数</span><br>  /root/go-cqhttp/go-cqhttp<br>  sleep 300<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>将上述内容保存为<code>autorun.sh</code>，并且<code>chmod +x autorun.sh</code>，存放在go-cqhttp文件夹下，用 <code>bash autorun.sh</code> 代替<code>./go-cqhttp</code>运行，注意如果qq登录失败又反复运行的话，是不是大概率会冻结账号，还在观察中。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gpt, go-cqhttp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ChatGpt接入QQ</title>
    <link href="/2023/05/21/ChatGpt%E6%8E%A5%E5%85%A5QQ/"/>
    <url>/2023/05/21/ChatGpt%E6%8E%A5%E5%85%A5QQ/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工具">准备工具</h2><p>一台vps，一个chatgpt账号，chatgpt的access token，2个QQ账号</p><h2 id="项目地址">项目地址</h2><p><ahref="https://github.com/lss233/chatgpt-mirai-qq-bot">lss233/chatgpt-mirai-qq-bot:🚀 一键部署！真正的 AI聊天机器人！支持ChatGPT、文心一言、Bing、Bard、ChatGLM、POE，多账号，人设调教，虚拟女仆、图片渲染、语音发送| 支持 QQ、Telegram、Discord、微信 等平台 (github.com)</a></p><h2 id="实操">实操</h2><ol type="1"><li><p>在linux的vps上进入 <code>/opt</code> 目录运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(wget -O- https://gist.githubusercontent.com/lss233/2fdd75be3f0724739368d0dcd9d1367d/raw/62a790da4a391af096074b3355c2c2b7ecab3c28/chatgpt-mirai-installer-gocqhttp.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>会自动下载docker, docker-compose, 和建立三个容器</p></li><li><p>输入QQ号（通常是小号）作为机器人，输入密码，管理员QQ，还有chatgpt的accesstoken</p></li><li><p>程序运行结束会显示如下内容，找个地方复制粘贴一下，后续会常用到</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs awk">程序已被安装在 ./chatgpt-qq 下，<br><br>以下是一些维护的注意事项：<br><br>你需要先 cd ./chatgpt-qq 才能进入到程序的安装目录。<br><br>你可以输入docker-compose logs -f --tail=<span class="hljs-number">100</span> 来观察运行日志。<br><br>修改配置文件后，使用 docker-compose restart 重启程序。<br><br>使用 docker-compose pull &amp;&amp; docker-compose up -d 命令来更新程序<br><br>如果你记不住的话，可以把上面这段文字保存到一个文件里面，需要的时候再看。<br><br>如果您遇到问题可以在这里寻找答案：<br><br>https:<span class="hljs-regexp">//</span>chatgpt-qq.lss233.com/<br><br>如果您觉得此脚本对你有帮助的话，欢迎您在爱发电支持作者。<br><br>https:<span class="hljs-regexp">//</span>afdian.net<span class="hljs-regexp">/a/</span>lss233<br><br>再见。<br></code></pre></td></tr></table></figure></li><li><p>按照上述步骤</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> <span class="hljs-string">./chatgpt-qq</span><br>docker-compose logs -f <span class="hljs-params">--tail=100</span><br></code></pre></td></tr></table></figure><p>查看容器运行记录，因为我们的QQ登录是在非常用地址，其中显示登录QQ需要复制出来那个长串的地址，然后在浏览器访问，进行登录验证，无奈我这里总是要循环验证，无解。</p></li><li><p>解决上述问题：</p><p>进入<code>gocqhttp</code> 文件夹，修改 <code>device.json</code> ，将<code>protocol</code> 修改为 <code>3</code> ，也就是MacOS，参看<ahref="https://docs.go-cqhttp.org/guide/config.html#设备信息">配置 |go-cqhttp 帮助中心</a></p><p>然后 <code>docker-compose restart</code>，重复步骤4的操作，我这里就显示QQ登录成功了，如果还不行就用自己的vps的ip在手机或电脑上登录一下QQ，使该ip成为你的常用登录地。如果登录成功，恭喜你过了最难的一关，也具备了基本的与gpt对话的功能。</p></li><li><p>可选操作：接入其它的AI平台和聊天软件，只需要修改<code>chatgpt-qq</code> 下的 <code>config.cfg</code>在里面添加相应的配置即可</p><p><ahref="https://chatgpt-qq.lss233.com/pei-zhi-wen-jian-jiao-cheng/wan-zheng-pei-zhi-wen-jian-yang-li">完整配置文件样例- ChatGPT for QQ 使用文档 (lss233.com)</a></p><p>接入tg需要解决两个问题：</p><ul><li><p>建立机器人参看<ahref="https://blog.csdn.net/whatday/article/details/113747294">telegram创建机器人 bot简介_telegram创建机器人_whatday的博客-CSDN博客</a></p></li><li><p>获取 <code>chat id</code>参看https://cloud.tencent.com/developer/article/1948136</p></li></ul></li><li><p>机器人的管理指令：</p><p><ahref="https://github.com/lss233/chatgpt-mirai-qq-bot/wiki/常用命令列表">常用命令列表· lss233/chatgpt-mirai-qq-bot Wiki (github.com)</a></p></li></ol><h2 id="后记">后记</h2><ul><li>接入poe会封poe的账号！！！我的账号也寄了[<ahref="https://github.com/lss233/chatgpt-mirai-qq-bot/issues/705">BUG]Poe 登录提示 Something went wrong... · Issue #705 ·lss233/chatgpt-mirai-qq-bot (github.com)</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>chatgpt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NginxProxyManager安装与使用</title>
    <link href="/2023/05/18/NginxProxyManager%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/05/18/NginxProxyManager%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="安装">安装</h2><ol type="1"><li><p>安装 Docker 和 Docker-Compose</p></li><li><p>在/opt/npm文件夹下创建一个类似于下面的 docker-compose.yml文件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">version</span>: <span class="hljs-string">&#x27;3.8&#x27;</span><br>service<span class="hljs-variable">s:</span><br>  app:<br>    image: <span class="hljs-string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span><br>    restar<span class="hljs-variable">t:</span> unless-stopped<br>    port<span class="hljs-variable">s:</span><br>      - <span class="hljs-string">&#x27;80:80&#x27;</span><br>      - <span class="hljs-string">&#x27;81:81&#x27;</span><br>      - <span class="hljs-string">&#x27;443:443&#x27;</span><br>    volume<span class="hljs-variable">s:</span><br>      - ./dat<span class="hljs-variable">a:</span>/data<br>      - ./letsencryp<span class="hljs-variable">t:</span>/etc/letsencrypt<br></code></pre></td></tr></table></figure></li><li><p>运行容器</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure></li><li><p>登录到管理界面</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//y</span>ourip:<span class="hljs-number">81</span><br></code></pre></td></tr></table></figure><p>默认管理员用户：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Email:</span>    admin@example.com<br><span class="hljs-symbol">Password:</span> changeme<br></code></pre></td></tr></table></figure><p>使用此默认用户登录后，系统会立即要求您修改您的详细信息并更改密码。</p></li><li><p>升级</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose pull</span><br><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="使用">使用</h2><p>添加反代网站add proxy host：</p><ol type="1"><li><p>Details：</p><ul><li>DomainNames：一般要在dns服务商那里先用*解析一个通用的二级域名到本机ip，这里添加你喜欢的二级域名就好</li><li>Scheme：选择https</li><li>Forward Hostname：要反代的ip，如果是docker容器一般填写<code>172.17.0.1</code></li><li>Forward Port：反代的端口</li></ul></li><li><p>Custom locations：与Details应该是并列关系</p><ul><li>Location：填写要反代的网站的文件夹位置，有些网站是建立在二级文件夹下就需要在这里定义</li><li>Scheme：选择https</li><li>Forward Hostname：要反代的ip，如果是docker容器一般填写<code>172.17.0.1</code></li><li>Forward Port：反代的端口</li></ul></li><li><p>SSL Certificate：</p><p>根据需要是否开启SSL和强制ForceSSL，输入邮箱，同意条款就可以自动签发证书了，爽！</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker,nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Macos系统Python多版本管理和Pip管理</title>
    <link href="/2023/05/11/Macos%E7%B3%BB%E7%BB%9FPython%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%92%8CPip%E7%AE%A1%E7%90%86/"/>
    <url>/2023/05/11/Macos%E7%B3%BB%E7%BB%9FPython%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%92%8CPip%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="系统概况">系统概况</h2><ol type="1"><li><p>macos蒙特雷，系统自带Python3.9.6</p></li><li><p>通过安装包安装了Python3.10</p></li><li><p><code>brew install autojump</code>时作为依赖包安装了Python3.11</p></li><li><p>查看所有安装的Python</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls /usr/local/bin | grep python3<br><span class="hljs-meta">#</span><span class="bash"> 会列出所有自己安装的版本，但是不包括系统自带的，系统自带的是/usr/bin/python3</span><br><br>/usr/bin/python3 --version<br><span class="hljs-meta">#</span><span class="bash"> 显示系统自带的Python版本</span><br><br>python3 --version<br><span class="hljs-meta">#</span><span class="bash"> 显示现在系统默认使用的Python版本</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="处理">处理</h2><ol type="1"><li><p>卸载多余的3.10版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo rm -rf /Library/Frameworks/Python.framework/Versions/X.Y.Z<br>sudo rm -rf &quot;/Applications/Python X.Y.Z&quot;<br>sudo rm /usr/local/bin/pydoc3.X<br>sudo rm /usr/local/bin/python3.X<br>sudo rm /usr/local/bin/python3.Xm<br><span class="hljs-meta">#</span><span class="bash"> 其中 `X.Y.Z` 是要卸载的 Python 版本号。例如，如果要卸载 Python 3.8.10，则应将 `X.Y.Z` 替换为 `3.8.10`。请注意，这些命令需要管理员权限才能执行（使用 `sudo` 命令）。</span><br><br><span class="hljs-meta">#</span><span class="bash">（可选）您还可以使用以下命令，删除与卸载的 Python 版本相关的任何残留文件或目录</span><br>sudo rm -rf ~/Library/Python/X.Y<br>sudo rm -rf /Library/Python/X.Y<br><span class="hljs-meta">#</span><span class="bash"> 其中 `X.Y` 是要卸载的 Python 版本号。</span><br></code></pre></td></tr></table></figure></li><li><p>想卸载3.11版本，但是作为<code>autojump</code>的依赖，不知道怎么弄，暂时放弃</p></li><li><p>此时再来<code>python3 --version</code>查看现在系统用的版本，我这里变成了3.11</p></li><li><p>关联命令 <code>python3</code> 为指定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano ~/.zshrc<br><span class="hljs-meta">#</span><span class="bash"> 根据自己使用的终端程序更改，蒙特雷默认使用的是zsh</span><br><br>alias python3=&#x27;/usr/bin/python3&#x27;<br><span class="hljs-meta">#</span><span class="bash"> 指定为系统自带的3.9.6版本</span><br></code></pre></td></tr></table></figure><p>记得 <code>source ~/.zshrc</code> 使更改生效</p></li><li><p>为了安装 <code>pix2text</code> ，其依赖包 <code>torch</code>版本要求为1.8.0~2.0，使用pip安装时总是找到2.0.1的版本，因此需要使用老版本的Pip，刚好退回到python3.9.6的版本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">nano <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>pip<br><span class="hljs-comment"># 会看到如下的代码</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/usr/<span class="hljs-built_in">local</span>/bin/python3</span><br><span class="hljs-meta">#</span><span class="bash"> -*- coding: utf-8 -*-</span><br>import re<br>import sys<br>from pip._internal.cli.main import main<br>if __name__ == &#x27;__main__&#x27;:<br>    sys.argv[0] = re.sub(r&#x27;(-script\.pyw|\.exe)?$&#x27;, &#x27;&#x27;, sys.argv[0])<br>    sys.exit(main())<br></code></pre></td></tr></table></figure><p>将第一行的 <code>#!/usr/local/bin/python3</code>修改为你想要的Python版本的路径就好了，例如修改为<code>#!/usr/bin/python3</code>这样Pip默认关联的就是系统自带版本的Python也就是3.9.6了。</p><h2 id="后记">后记</h2><p>折腾了一圈，目的其实就是为了安装 <code>torch</code>的1.8版本，貌似直接修改Pip的默认Python就可以了吧，不过顺带清理了一下系统多余的Python版本，也对各个版本的Python安装的位置也有了大概的了解。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pythoh, pip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Memo的搭建和使用</title>
    <link href="/2023/05/05/Memo%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/05/05/Memo%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>好的，以下是您需要的Markdown格式博文：</p><h1 id="memos-docker搭建过程记录">Memos Docker搭建过程记录</h1><p>在这篇博文中，我将记录我如何使用Docker搭建Memo应用程序，并使用Git自动备份Memo数据。我还将介绍如何使用crontab定期运行备份脚本。</p><h2 id="docker搭建memos应用程序">Docker搭建Memos应用程序</h2><p>Memo是一个简单的笔记应用程序，可以帮助您轻松记录您的想法和笔记。我选择使用Docker容器来运行Memo，因为这样可以避免与本地环境的冲突，并使部署更加简单。</p><h3 id="步骤">步骤</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d --name memos -p <span class="hljs-number">5230</span>:<span class="hljs-number">5230</span> -v <span class="hljs-regexp">/opt/m</span>emos<span class="hljs-regexp">/:/</span>var<span class="hljs-regexp">/opt/m</span>emos ghcr.io<span class="hljs-regexp">/usememos/m</span>emos:latest<br></code></pre></td></tr></table></figure><p>现在，您可以通过访问 <code>http://localhost:5230</code>来访问Memo应用程序。</p><h3 id="说明">说明</h3><ul><li>将/opt/memos替换成你想要映射的文件夹</li><li>注册登录以后，将存储方式从数据库改为本地存储，这样方便增量备份</li></ul><h2 id="使用git自动备份memos数据">使用Git自动备份Memos数据</h2><p>为了确保Memos数据不会丢失，并且方便从服务器之间进行迁移，我使用Git对数据进行自动备份。我将备份脚本编写为Shell脚本，并使用Git命令将备份提交到GitHub。</p><h3 id="步骤-1">步骤</h3><ol type="1"><li>在 <code>memos</code> 目录中创建一个名为 <code>backup.sh</code>的文件，并添加以下内容：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-built_in">cd</span> /opt/memos<br><br>git add .<br>git commit -m <span class="hljs-string">&quot;Backup <span class="hljs-subst">$(date)</span>&quot;</span><br>git push<br></code></pre></td></tr></table></figure><p>这个脚本将切换到Memos数据目录，并使用Git命令将备份提交到GitHub。</p><ol start="2" type="1"><li>将脚本标记为可执行：</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>chmod +x backup.sh<br></code></pre></td></tr></table></figure><ol start="3" type="1"><li>将该文件夹关联到远程github仓库，要将现有的Memos数据文件夹关联到远程的GitHub仓库，您可以按照以下步骤进行操作：</li></ol><ul><li><p>在GitHub上创建一个新的仓库，用于存储Memos数据备份。</p></li><li><p>进入您的Memos数据文件夹，并初始化一个新的Git仓库：</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> /opt/memos<br><span class="hljs-variable">$</span> git init<br></code></pre></td></tr></table></figure><ul><li>添加备份文件夹和提交备份文件夹到本地Git仓库：</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git add .<br><span class="hljs-variable">$ </span>git commit -m <span class="hljs-string">&quot;Initial backup&quot;</span><br></code></pre></td></tr></table></figure><ul><li>的Git仓库关联到远程的GitHub仓库：</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ git remote <span class="hljs-built_in">add</span> origin git@github.<span class="hljs-keyword">com</span>:<span class="hljs-symbol">&lt;username&gt;</span>/<span class="hljs-symbol">&lt;repository&gt;</span>.git<br></code></pre></td></tr></table></figure><p>请将 <code>&lt;username&gt;</code> 和 <code>&lt;repository&gt;</code>替换为您在GitHub上创建的仓库的用户名和仓库名称。</p><ul><li>地的备份文件夹推送到远程的GitHub仓库：</li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">$ git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> master<br></code></pre></td></tr></table></figure><p>现在，您的Memos据备份文件夹已经成功关联到远程的GitHub仓库，您可以定期运行备份脚本，将最新的备份文件推送到GitHub仓库中。</p><ol start="4" type="1"><li>运行一次备份脚本，以确保一切正常：</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>./backup.sh<br></code></pre></td></tr></table></figure><p>现在，备份应该已经提交到GitHub。</p><h2 id="使用crontab定期运行备份脚本">使用crontab定期运行备份脚本</h2><p>为了确保Memo数据得到及时备份，我使用crontab定期运行备份脚本。我设置crontab每隔2小时运行一次备份脚本。</p><h3 id="步骤-2">步骤</h3><ol type="1"><li>运行以下命令以编辑crontab：</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>crontab -e<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>在打开的编辑器中添加以下行：</li></ol><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>*/<span class="hljs-number">2</span> * * * /opt/memos/backup.sh<br></code></pre></td></tr></table></figure><p>这将在每2个小时的第0分钟运行备份脚本。</p><ol start="3" type="1"><li>保存并关闭编辑器。</li></ol><p>现在，您的Memos数据应该每隔2小时自动备份到GitHub。</p><h2 id="通过raycast发memo">通过Raycast发Memo</h2><p>Raycast是一款Mac上的快速启动应用程序，可以让您通过简单的快捷键访问常用的功能和应用程序。要使用Raycast来发Memo笔记，您可以按照以下步骤进行操作：</p><ol type="1"><li><p>下载并安装Raycast应用程序。</p></li><li><p>在Raycast中搜索并安装“Memo”插件。</p></li><li><p>打开Memo应用程序，并创建一个新的笔记。在笔记中输入您要保存的文本内容。</p></li><li><p>打开Raycast应用程序，并使用快捷键 <code>Cmd + Shift + P</code>来打开命令面板。</p></li><li><p>在命令面板中搜索并选择“Memo: Save New Note”选项。</p></li><li><p>在弹出的窗口中输入您的笔记标题和内容，并按下 <code>Enter</code>键。</p></li><li><p>您的Memo笔记已经成功保存！您可以在Memo应用程序中查看它。</p></li></ol><p>除了保存新的Memo笔记外，Memo插件还支持搜索和查看现有的Memo笔记。通过Raycast和Memo插件，您可以更加高效地记录和查看笔记，提高您的工作效率。</p><h2 id="windowsandroidiosmac客户端">Windows,android,ios,mac客户端</h2><p>https://memos.moe/</p><h2 id="结论">结论</h2><p>在本文中，我介绍了如何使用Docker搭建Memos应用程序，并使用Git自动备份Memos数据。我还介绍了如何使用crontab定期运行备份脚本。现在，您可以放心地记录您的想法和笔记，因为您的数据已经得到了完美的保护！</p><p>P.S. 本文主体是chatgpt写就，在其基础上做了微改</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Memos,docker,git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装plex</title>
    <link href="/2023/04/25/docker%E5%AE%89%E8%A3%85plex/"/>
    <url>/2023/04/25/docker%E5%AE%89%E8%A3%85plex/</url>
    
    <content type="html"><![CDATA[<h2 id="选择适配系统的版本">选择适配系统的版本</h2><p>您需要考虑您的操作系统，因为Docker镜像是针对特定操作系统构建的。您可以在DockerHub上找到适用于您操作系统的Plex镜像。</p><p>例如我要在linux服务器上安装，则应该选择LinuxServer.io的Docker镜像。</p><h2 id="利用docker-compose安装">利用docker compose安装</h2><p>在/opt/plex文件夹下建立docker-compose.yml文件，写入如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;2.1&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">plex:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">lscr.io/linuxserver/plex:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">plex</span><br>    <span class="hljs-attr">network_mode:</span> <span class="hljs-string">host</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PUID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PGID=1000</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">VERSION=docker</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PLEX_CLAIM=换成自己的claim</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/plex:/config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/aria2/aria2-downloads:/tv</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/aria2/aria2-downloads:/movies</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><p>其中claim id在https://plex.com/claim获取，volumes的磁盘映射根据自己的需求更改</p><p>然后<code>docker-compose up -d</code> 就可以玩耍了</p><h2 id="一些常见问题">一些常见问题</h2><ul><li>第一次进入登录账号以后，一般会引导进行设置、添加资料库</li><li>建议开启远程连接，这样当利用多个vps或者nas建立了多个plex服务器时，可以统一在plex的官网进行连接，在左侧会同时显示多个服务器的电影资源</li><li>建议配合aria2和aria2ng共同使用</li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker,plex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>n1小钢炮搬家记</title>
    <link href="/2022/10/04/n1%E5%B0%8F%E9%92%A2%E7%82%AE%E6%90%AC%E5%AE%B6%E8%AE%B0/"/>
    <url>/2022/10/04/n1%E5%B0%8F%E9%92%A2%E7%82%AE%E6%90%AC%E5%AE%B6%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="一搬迁之前的准备工作">一、搬迁之前的准备工作</h2><ul><li>事先了解搬迁地的网关地址和子网掩码</li><li>进入小钢炮后台 <code>System-Network</code>，选择<code>use Static IP</code>，填入ip地址、网关地址，然后保存</li><li>如果搬迁地没有登录路由或交换机后台的权限，上一步不要选择<code>use DHCP</code>，不然就捞不到小钢炮的ip了</li></ul><h2id="二搬迁后遇到的各种麻烦及解决办法">二、搬迁后遇到的各种麻烦及解决办法</h2><ul><li><p>搬迁地的网段为172.17.0.0/16，和docker0网段冲突</p><p>直接表现就是已建好的容器不能访问了，因此修改docker0网段为172.100.0.0/16</p><p>修改文件 <code>/etc/docker/daemon.json</code> 为以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;storage-driver&quot;</span>: <span class="hljs-string">&quot;overlay2&quot;</span>,<br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://hub-mirror.c.163.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://registry.aliyuncs.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>],<br>  <span class="hljs-attr">&quot;default-address-pools&quot;</span>:[&#123;<span class="hljs-attr">&quot;base&quot;</span>:<span class="hljs-string">&quot;172.100.0.0/16&quot;</span>,<span class="hljs-attr">&quot;size&quot;</span>:<span class="hljs-number">24</span>&#125;]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>docker版本的openwrt更换新版本以后，ssrplus总是无法启动或者谷歌连接测试不通</p><p>经过百般搜索，看到这样一句话：</p><p><code>选 仅常用端口（不走P2P流量到代理） 就无法启动。</code></p><p>改为全部端口就可以启动了</p></li><li><p>openwrt里面的passwall显示谷歌连接测试失败</p><p>解决办法：在高级设置里面，找到<code>TCP 转发端口</code>，将常用改为全部，再来测试就正常了</p></li><li><p>关于docker版本的openwrt安装版本</p><p>由于n1的架构是aarch64，所以在dockerhub中搜索arm64架构的openwrt版本才可以安装</p><p>先后尝试了</p><p><code>unifreq/openwrt-aarch64</code> 最高尝试到<ahref="https://hub.docker.com/layers/unifreq/openwrt-aarch64/r20.10.20/images/sha256-b6370f04bb231867957ee9101e91e5978d4b22dccfca265b16c36f450a4fddc9?context=explore">r20.10.20</a>版本可以正常使用</p><p><code>buddyfly/openwrt-aarch64</code></p><p><code>sulinggg/openwrt</code>版本多，界面美化好，n1可使用registry.cn-shanghai.aliyuncs.com/suling/openwrt:armv8</p></li><li><p>小钢炮自带的transmission提示错误，无法启动</p><p>解决办法：进入 <code>Apps-Transmission-Extra Settings</code> 找到<code>rpc whitelist</code> 添加新的本地网段</p></li><li><p>关于n1无法ping通openwrt容器</p><p>由于openwrt容器采用的是网卡混杂模式macvlan，宿主机与容器之间的网络连接是隔绝的，但是多个混杂模式之间的网络是可以相互访问的，只要在宿主机上再建立一个macvlan，然后修改路由表，使数据经由<strong>宿主机下的macvlan</strong>传输到<strong>容器内的macvlan</strong>即可。</p><ul><li><p>环境：</p><p>宿主机eth0：172.17.18.18/16</p><p>openwrt容器：172.17.18.22/16</p></li><li><p>解决：以下操作均在 <strong>宿主机</strong>中，不是在Docker容器中</p><p>新增一个叫mynet的macvlan接口</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso">ip <span class="hljs-keyword">link</span> add mynet <span class="hljs-keyword">link</span> eth0 <span class="hljs-keyword">type</span> macvlan mode bridge<br></code></pre></td></tr></table></figure><p>为该接口分配ip</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">ip</span> <span class="hljs-keyword">addr</span> <span class="hljs-keyword">add</span> <span class="hljs-number">172</span>.<span class="hljs-number">17</span>.<span class="hljs-number">18</span>.<span class="hljs-number">222</span> dev mynet<br></code></pre></td></tr></table></figure><p>启用名称为mynet的macvlan</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">ip link <span class="hljs-keyword">set</span> mynet <span class="hljs-comment">up</span><br></code></pre></td></tr></table></figure><p>修改路由表，使宿主机172.17.18.18/16到Openwrt容器172.17.18.22/16的通信全部由mynet中转</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ip<span class="hljs-built_in"> route </span><span class="hljs-builtin-name">add</span> 172.17.18.22 dev mynet<br></code></pre></td></tr></table></figure><p>该问题解决参考了https://mopo-blog.ddnsfree.com/2021/02/23/n1-eth0-macvlan/</p></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>n1,docker,openwrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>哪吒探针监控vps状态</title>
    <link href="/2022/09/21/%E5%93%AA%E5%90%92%E6%8E%A2%E9%92%88%E7%9B%91%E6%8E%A7vps%E7%8A%B6%E6%80%81/"/>
    <url>/2022/09/21/%E5%93%AA%E5%90%92%E6%8E%A2%E9%92%88%E7%9B%91%E6%8E%A7vps%E7%8A%B6%E6%80%81/</url>
    
    <content type="html"><![CDATA[<h1 id="项目地址">项目地址</h1><p>https://github.com/naiba/nezha</p><h1 id="创建一个oauth-apps">创建一个OAuth Apps</h1><ul><li>先打开：https://github.com/settings/developers，然后点击New OAuthApp按钮</li><li>Homepage URL：http://域名:8088<br /></li><li>Authorization callback URL：http://域名:8008/oauth2/callback</li><li>可能需要用github的手机app进行激活</li><li>记录OAuth Apps的Client ID和Client secrets</li></ul><h1 id="放行防火墙如果需要">放行防火墙（如果需要）</h1><p>开放8008和5555两个端口</p><h1 id="安装命令">安装命令</h1><p>国外vps一键脚本命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/naiba/</span>nezha<span class="hljs-regexp">/master/</span>script<span class="hljs-regexp">/install.sh  -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./</span>nezha.sh<br></code></pre></td></tr></table></figure><p>国内vps一键脚本命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -L https:<span class="hljs-regexp">//</span>jihulab.com<span class="hljs-regexp">/nezha/</span>nezha<span class="hljs-regexp">/-/</span>raw<span class="hljs-regexp">/master/</span>script<span class="hljs-regexp">/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo CN=true ./</span>nezha.sh<br></code></pre></td></tr></table></figure><h1 id="访问地址">访问地址：</h1><p><code>http://域名:8008</code></p><h1 id="后台管理">后台管理</h1><p>增加服务器后，需要在每个被监控的服务器安装Agent客户端，如果是国内vps还是会因为网络问题，不能正常下载到客户端，可以借助于上面国内vps的一键脚本命令后面加上参数，进行安装。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用warp脚本使任意vps变双栈</title>
    <link href="/2022/09/20/%E5%88%A9%E7%94%A8warp%E8%84%9A%E6%9C%AC%E4%BD%BF%E4%BB%BB%E6%84%8Fvps%E5%8F%98%E5%8F%8C%E6%A0%88/"/>
    <url>/2022/09/20/%E5%88%A9%E7%94%A8warp%E8%84%9A%E6%9C%AC%E4%BD%BF%E4%BB%BB%E6%84%8Fvps%E5%8F%98%E5%8F%8C%E6%A0%88/</url>
    
    <content type="html"><![CDATA[<h1 id="cloudflare-warp功能">cloudflare warp功能</h1><p>直接搬运p3terx大佬博客的文字：</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly8xLjEuMS4xLw">CloudflareWARP</a> 是 Cloud­flare 提供的一项基于 Wire­Guard的网络流量安全及加速服务，能够让你通过连接到 Cloud­flare的边缘节点实现隐私保护及链路优化。之前有很多小伙伴拿来当做某科学的上网工具来使用，应该很熟悉了。不过由于Wire­Guard 数据传输使用的 UDP 协议，中国大陆的网络运营商会对其进行 QoS，加上很多节点的 IP被封锁，现在可以说几乎处于不可用的状态了。而对于自由网络的地区来说则没有这些限制，加上有国外开发者制作的工具可以生成通用的Wire­Guard 配置文件，这使得我们可以在安装了某科学的上网工具的海外 VPS上部署它并获得如下作用：</p><ul><li>WARP 网络出入口均为双栈 (IPv4/IPv6)，因此单栈 VPS 云服务器可以连接到WARP 网络来获取额外的网络连通性支持：<ul><li>IPv6 Only VPS 可获得 IPv4 网络的访问能力，不再局限于 NAT64/DNS64的束缚，能自定义任意 DNS解析服务器，这对使用某科学的上网工具有奇效。</li><li>IPv4 Only VPS 可获得 IPv6 网络的访问能力，比如可作为 IPv6 Only VPS的 SSH 跳板。此外 WARP 的 IPv6 网络的质量比 <ahref="https://p3terx.com/archives/use-he-tunnel-broker-to-add-public-network-ipv6-support-to-ipv4-vps-for-free.html">HEIPv6 Tunnel Broker</a> 甚至 VPS 自带的都要好，很少绕路。</li></ul></li><li>WARP 对外访问网络的出口 IP 被很多网站视为真实用户，即所谓的原生 IP或私人家庭住宅 IP，可以解除某些网站基于 IP 的封锁限制：<ul><li>解锁 Netflix 非自制剧</li><li>解决 Google 搜索流量异常频繁跳出人机身份验证的问题</li><li>解决无法打开 Google Scholar (谷歌学术) 403 访问限制的问题</li><li>解决 Google 的 IP 定位漂移到中国(送中)，无法使用 YouTube Premium的问题</li></ul></li></ul><h1 id="关于wireguard安装问题">关于wireguard安装问题</h1><p>要点：</p><ul><li><p>该教程适用于De­bian 10+</p></li><li><p>先执行 <code>uname -r</code> 命令查看内核版本。如果是 5.6及以上内核则已经集成了 Wire­Guard ，就不需要安装了。</p><p>当然看到这篇教程的小伙伴肯定大多数都不是这个情况，因为目前 De­bian 10自带的内核版本是 4.19。所以有如下几个安装方法可供选择：</p><ol type="1"><li>安装版本高于 5.6 的内核</li><li>安装 wireguard 内核模块</li><li>安装 wireguard-go</li></ol><p>理论网络性能：<strong>内核集成</strong> ≥ <strong>内核模块</strong>＞ <strong>wireguard-go</strong></p></li><li><p>OpenVZ / LXC 等非完整虚拟化 VPS主机，由于是共享宿主机内核，故无法对内核进行修改，就只能安装<strong>wireguard-go</strong>。</p></li></ul><p>详细参考：https://p3terx.com/archives/debian-linux-vps-server-wireguard-installation-tutorial.html</p><h1 id="一键脚本">一键脚本</h1><ul><li><p>适用于除了香港、多伦多以外的vps：https://github.com/fscarmen/warp</p></li><li><p><span class="citation" data-cites="CoiaPrant">@CoiaPrant</span>的 warp-go 一键脚本。使用 CloudFlare-WARP 的各类接口，集成wireguard-go，可以完全替代 WGCF。 救活了香港、多伦多等，让没有官方 WARP的 VPS 也可以获取 WARP IP。</p><p>下载脚本：<code>wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh</code></p></li></ul><h1 id="关于warp-go.sh选项选择问题">关于warp-go.sh选项选择问题</h1><p>经过实测，ipv4的vps选择全局ipv6，如果是选择全局双栈，ssh马上失去连接，只能到网页端重启vps</p><p>好像有修改配置的方法，可以实现全局双栈，后续再研究</p><h1 id="作euserv的跳板">作euserv的跳板</h1><ul><li><p>使用x-ui的dokodemo-door，转发到euserv的ipv6，从而实现ssh连接</p></li><li><p>使用x-ui的dokodemo-door，转发到euserv的ipv6，从而实现shadowsocks连接，vmess协议转发貌似未成功</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>warp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装flare个人导航页</title>
    <link href="/2022/09/16/docker%E5%AE%89%E8%A3%85flare%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E9%A1%B5/"/>
    <url>/2022/09/16/docker%E5%AE%89%E8%A3%85flare%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="利用docker-compose安装">利用docker-compose安装</h2><p>新建文件夹flare，进入新建文件docker-compose.yml，写入以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.6&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">flare:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">soulteary/flare:0.3.1</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-comment"># 默认无需添加任何参数，如有特殊需求</span><br>    <span class="hljs-comment"># 可阅读文档 https://github.com/soulteary/docker-flare/blob/main/docs/advanced-startup.md</span><br>    <span class="hljs-comment"># command: flare</span><br>    <span class="hljs-comment"># 启用账号登陆模式,--visibility=private表示登录才能看到首页</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">flare</span> <span class="hljs-string">--nologin=0</span> <span class="hljs-string">--visibility=private</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-comment"># 如需开启用户登陆模式，需要先设置 `nologin` 启动参数为 `0`</span><br>      <span class="hljs-comment"># 如开启 `nologin`，未设置 FLARE_USER，则默认用户为 `flare`</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">FLARE_USER=username</span><br>      <span class="hljs-comment"># 指定你自己的账号密码，如未设置 `FLARE_USER`，则会默认生成密码并展示在应用启动日志中</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">FLARE_PASS=passwd</span><br>      <span class="hljs-comment"># 是否开启“使用向导”，访问 `/guide`</span><br>      <span class="hljs-comment"># - FLARE_GUIDE=1</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">5005</span><span class="hljs-string">:5005</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./app:/app</span><br></code></pre></td></tr></table></figure><p>然后 <code>docker-compose up -d</code> 启动即可</p><h2 id="编辑书签和应用页面">编辑书签和应用页面</h2><p>通过 <code>/editor</code> 访问编辑页面，在app文件夹下可以通过备份<code>apps.yml</code> 和 <code>bookmarks.yml</code>即可将flare搬迁至其他地方，比如自己的vps上</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker,flare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mac虚拟机安装OpenWrt</title>
    <link href="/2022/09/05/mac%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85OpenWrt/"/>
    <url>/2022/09/05/mac%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85OpenWrt/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vmware-fusion">安装vmware fusion</h2><p>可以免费申请个人非商业用途许可证，可以参考https://zhuanlan.zhihu.com/p/315035843</p><h2 id="下载openwrt固件">下载OpenWrt固件</h2><p>这里我选择下载esir的固件，googledrive地址为：https://drive.google.com/drive/folders/1dqNUrMf9n7i3y1aSh68U5Yf44WQ3KCuh</p><p>可以选择精品小包或者佛跳墙版本，注意选择引导模式uefi或者传统bios模式</p><h2 id="格式转换">格式转换</h2><p>由于下载的 文件后缀名是.img，如果是.img.gz，可以手动重命名为.img，我们需要转换为.vmdk，这里需要用到qemu工具，<code>brew install qemu</code>，安装好以后，利用命令<code>qemu-img convert -f raw 源文件.img -O vmdk 目标文件.vmdk</code>就可以转换为vmdk格式了</p><h2 id="安装openwrt">安装OpenWrt</h2><p>新建虚拟机，硬盘设置为选择刚转换的vmdk文件，网络选择为桥接网络，以便将此OpenWrt作为macos的旁路由</p><h2 id="启动修改openwrt设置">启动修改OpenWrt设置</h2><ul><li><p>首次登录系统，还没有设置root密码，利用<code>password</code>命令设置root密码</p></li><li><p>修改ip地址：由于我的mac主机ip地址为172.17.18.154，网关为172.17.0.1，子网掩码为255.255.0.0，利用命令<code>vi /etc/config/network</code>，修改openwrt的ip为172.17.18.66，netmask设置为255.255.0.0</p></li><li><p>重启网络服务使修改生效：<code>/etc/init.d/network restart</code></p></li><li><p>（也可以下一步之后再验证）验证设置是否生效：<code>ifconfig</code>查看ip地址，还可以<code>ping 172.17.18.154</code>，<code>ping baidu.com</code></p></li></ul><h2 id="登录后台并修改设置">登录后台并修改设置</h2><p>浏览器登入172.17.18.66，用户名root，密码刚设的登录，找到网络--接口，修改网关为172.17.0.1，以及子网掩码为255.255.0.0，验证设置是否生效：<code>ifconfig</code>查看ip地址，还可以<code>ping 172.17.18.154</code>，<code>ping baidu.com</code>都通过了就表示设置成功了</p><h2 id="mac富强">mac富强</h2><p>修改mac的ip地址为手动：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">ip: <span class="hljs-number">172.17.18.154</span><br>网关：<span class="hljs-number">172.17.18.66</span><br>DNS：<span class="hljs-number">114.114.114.114</span><br></code></pre></td></tr></table></figure><p>愉快的玩耍吧，旁路由秒杀所有V2rayX之类的</p><p>哦，对了，设置OpenWrt开机自动启动并且是无界面模式<code>vmrun start /Users/pl/Virtual\ Machines.localized/openwrt.vmwarevm/openwrt.vmx nogui</code></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>全国卷密集出现构造函数比较大小</title>
    <link href="/2022/06/09/%E5%85%A8%E5%9B%BD%E5%8D%B7%E5%AF%86%E9%9B%86%E5%87%BA%E7%8E%B0%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/"/>
    <url>/2022/06/09/%E5%85%A8%E5%9B%BD%E5%8D%B7%E5%AF%86%E9%9B%86%E5%87%BA%E7%8E%B0%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="新高考全国1卷">2022新高考全国1卷</h2><div class="note note-primary">            <p>7.设<span class="math inline">\(a=0.1e^{0.1},b=\dfrac{1}{9},c=-\ln0.9\)</span>，则</p><p><span class="math inline">\(A.a&lt;b&lt;c\qquad\)</span> <spanclass="math inline">\(B.c&lt;b&lt;a\qquad\)</span> <spanclass="math inline">\(C.c&lt;a&lt;b\qquad\)</span> <spanclass="math inline">\(D.a&lt;c&lt;b\)</span></p>          </div><div class="note note-success">            <p>从所给数据来看，可以将三个数处理为对<spanclass="math inline">\(0.1\)</span>的运算：<spanclass="math inline">\(a=0.1e^{0.1},b=\dfrac{0.1}{1-0.1},c=\ln\dfrac{1}{1-0.1}\)</span></p><p>因此可以构造<span class="math inline">\(f(x)=xe^x\)</span>，<spanclass="math inline">\(g(x)=\dfrac{x}{1-x}\)</span>，<spanclass="math inline">\(h(x)=\ln\dfrac{1}{1-x}\)</span></p><p>由<span class="math inline">\(\ln x\le x-1\)</span>得，<spanclass="math inline">\(\ln\dfrac{1}{1-x}\le\dfrac{1}{1-x}-1=\dfrac{x}{1-x}\)</span>，于是<spanclass="math inline">\(b&lt;c\)</span></p><p>由<span class="math inline">\(e^x\ge x+1\)</span>得，<spanclass="math inline">\(e^{-x}\ge 1-x\)</span>，即<spanclass="math inline">\(e^x\le\dfrac{1}{1-x}(x&lt;1)\)</span>，即<spanclass="math inline">\(xe^x\le\dfrac{x}{1-x}\)</span>，于是<spanclass="math inline">\(a&lt;b\)</span></p><p>对于<span class="math inline">\(a,c\)</span>的比较，构造<spanclass="math inline">\(\varphi(x)=xe^x+\ln(1-x)\)</span>，则<spanclass="math inline">\(\varphi&#39;(x)=(x+1)e^x+\dfrac{1}{x-1}=\dfrac{(x^2-1)e^x+1}{x-1}\)</span></p><p>记<span class="math inline">\(m(x)=(x^2-1)e^x+1\)</span>，则<spanclass="math inline">\(m&#39;(x)=(x^2+2x-1)e^x\)</span>，<spanclass="math inline">\(x\in(0,0.1)\)</span>时，<spanclass="math inline">\(m&#39;(x)&lt;0\)</span>，于是<spanclass="math inline">\(m(x)\)</span>在<spanclass="math inline">\((0,0.1)\)</span>单减，则<spanclass="math inline">\(m(x)&lt;m(0)=0\)</span>，于是<spanclass="math inline">\(\varphi&#39;(x)&gt;0\)</span>，即<spanclass="math inline">\(\varphi(x)\)</span>在<spanclass="math inline">\((0,0.1)\)</span>单增，则<spanclass="math inline">\(\varphi(x)&gt;\varphi(0)=0\)</span>，于是<spanclass="math inline">\(a&gt;c\)</span></p>          </div><h2 id="新课标2卷12题">2022新课标2卷12题：</h2><div class="note note-primary">            <p>12.已知<span class="math inline">\(a=\dfrac{31}{32}\)</span>，<spanclass="math inline">\(b=\cos\dfrac{1}{4}\)</span>，<spanclass="math inline">\(c=4\sin\dfrac{1}{4}\)</span>，则</p><p><span class="math inline">\(A.c&gt;b&gt;a\qquad\)</span> <spanclass="math inline">\(B.b&gt;a&gt;c\qquad\)</span> <spanclass="math inline">\(C.a&gt;b&gt;c\qquad\)</span> <spanclass="math inline">\(D.a&gt;c&gt;b\)</span></p>          </div><div class="note note-success">            <p>解析：</p><p><spanclass="math inline">\(b-c=\cos\dfrac{1}{4}-4\sin\dfrac{1}{4}=4(\dfrac{1}{4}\cos\dfrac{1}{4}-\sin\dfrac{1}{4})\)</span>，构造<spanclass="math inline">\(f(x)=x\cos x-\sin x\)</span>，则<spanclass="math inline">\(f&#39;(x)=-x\sin x\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,\dfrac{1}{4})\)</span>单减，于是<spanclass="math inline">\(f(x)&lt;f(0)=0\)</span>，即<spanclass="math inline">\(b&lt;c\)</span></p><p>又<spanclass="math inline">\(a=1-\dfrac{1}{2}\cdot(\dfrac{1}{4})^2\)</span>，构造<spanclass="math inline">\(g(x)=1-\dfrac{1}{2}x^2-\cos x\)</span>，则<spanclass="math inline">\(g&#39;(x)=-x+\sin x\)</span>，<spanclass="math inline">\(g&#39;&#39;(x)=-1+\cos x\le0\)</span>，于是在<spanclass="math inline">\((0,+\infty)\)</span>上<spanclass="math inline">\(g&#39;(x)\)</span>单减，则<spanclass="math inline">\(g&#39;(x)&lt;g&#39;(0)=0\)</span>，于是<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((0,+\infty)\)</span>单减，则<spanclass="math inline">\(g(x)&lt;g(0)=0\)</span>，即<spanclass="math inline">\(a&lt;b\)</span></p>          </div><h2 id="新课标1卷12题">2021新课标1卷12题</h2><div class="note note-primary">            <p>12.设<span class="math inline">\(a=2\ln1.01\)</span>，<spanclass="math inline">\(b=\ln1.02\)</span>，<spanclass="math inline">\(c=\sqrt{1.04}-1\)</span>，则（ ）</p><p><span class="math inline">\(A.a&lt;b&lt;c\qquad\)</span> <spanclass="math inline">\(B.b&lt;c&lt;a\qquad\)</span> <spanclass="math inline">\(C.b&lt;a&lt;c\qquad\)</span> <spanclass="math inline">\(D.c&lt;a&lt;b\)</span></p>          </div><div class="note note-success">            <p>解：<span class="math inline">\(a=\ln1.0201&gt;b\)</span>，比较<spanclass="math inline">\(b\)</span>和<spanclass="math inline">\(c\)</span>，注意到<spanclass="math inline">\(1.04=1.02\times2-1\)</span>，构造<spanclass="math inline">\(f(x)=\ln x-\sqrt{2x-1}+1\)</span></p><p><spanclass="math inline">\(f&#39;(x)=\dfrac{\sqrt{2x-1}-x}{x\sqrt{2x-1}}\le0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\([1,+\infty)\)</span>单减，于是<spanclass="math inline">\(f(1.02)&lt;f(1)=0\)</span>，即<spanclass="math inline">\(b&lt;c\)</span></p><p>比较<span class="math inline">\(a\)</span>和<spanclass="math inline">\(c\)</span>，构造<spanclass="math inline">\(g(x)=2\ln x-\sqrt{4x-3}+1\)</span>，<spanclass="math inline">\(g&#39;(x)=\dfrac{2(\sqrt{4x-3}-x)}{x\sqrt{4x-3}}\)</span></p><p>令<span class="math inline">\(g&#39;(x)&gt;0\)</span>得<spanclass="math inline">\(x\in(1,3)\)</span>，于是<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((1,3)\)</span>单增，则<spanclass="math inline">\(g(1.01)&gt;g(1)=0\)</span>，即<spanclass="math inline">\(a&gt;c\)</span></p>          </div>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>导数</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>docker安装joomla</title>
    <link href="/2022/06/05/docker%E5%AE%89%E8%A3%85joomla/"/>
    <url>/2022/06/05/docker%E5%AE%89%E8%A3%85joomla/</url>
    
    <content type="html"><![CDATA[<h1 id="手动安装">手动安装</h1><h2 id="创建数据库和joomla共用网络">创建数据库和joomla共用网络</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker network create mariadb-network</span><br><span class="hljs-attribute">docker inspect mariadb-network</span><br></code></pre></td></tr></table></figure><h2 id="创建映射目录">创建映射目录</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/opt/</span>joomla<br>mkdir <span class="hljs-regexp">/opt/m</span>ariadb<br></code></pre></td></tr></table></figure><h2 id="创建mariadb数据库">创建mariadb数据库</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">docker run -d --name mariadb --network mariadb-network -v <span class="hljs-regexp">/opt/m</span>ariadb:<span class="hljs-regexp">/var/</span>lib/mysql --env MARIADB_ROOT_PASSWORD=yourpassword mariadb:latest<br>docker <span class="hljs-keyword">inspect</span> mariadb | <span class="hljs-keyword">grep</span> -i <span class="hljs-string">&#x27;ipaddress&#x27;</span><br>docker logs mariadb<br></code></pre></td></tr></table></figure><h2 id="创建joomla">创建joomla</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -d --name joomla -p 8080:80 -v /opt/joomla:/var/www/html --network mariadb-network -e <span class="hljs-attribute">JOOMLA_DB_HOST</span>=mariadb -e <span class="hljs-attribute">JOOMLA_DB_USER</span>=root -e <span class="hljs-attribute">JOOMLA_DB_PASSWORD</span>=yourmariadbpassword joomla<br>docker logs joomla<br></code></pre></td></tr></table></figure><h1id="docker-compose数据库一体化安装">docker-compose数据库一体化安装</h1><h2 id="创建docker-compose.yml">创建docker-compose.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.1&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">joomla:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">joomla</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">joomla</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">links:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">joomladb:mysql</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:80</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">JOOMLA_DB_HOST:</span> <span class="hljs-string">joomladb</span><br>      <span class="hljs-attr">JOOMLA_DB_PASSWORD:</span> <span class="hljs-string">your_password(same</span> <span class="hljs-string">as</span> <span class="hljs-string">below)</span><br><br>  <span class="hljs-attr">joomladb:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.6</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">your_password(same</span> <span class="hljs-string">as</span> <span class="hljs-string">above)</span><br></code></pre></td></tr></table></figure><h1 id="启动容器">启动容器</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><h1 id="查看容器启动日志">查看容器启动日志</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker logs joomla</span><br><span class="hljs-attribute">docker logs mysql</span><br></code></pre></td></tr></table></figure><h2 id="查看容器ip">查看容器ip</h2><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">docker inspect -f &#x27;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">range</span> .NetworkSettings.Networks&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">.IPAddress</span>&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">end</span>&#125;&#125;</span><span class="xml">&#x27; <span class="hljs-tag">&lt;<span class="hljs-name">container_name</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>或者查看全面信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">docker inspect <span class="hljs-tag">&lt;<span class="hljs-name">container_name</span>&gt;</span><br></code></pre></td></tr></table></figure><p>查看mysql的ip地址下一步备用</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">docker inspect -f &#x27;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">range</span> .NetworkSettings.Networks&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">.IPAddress</span>&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">end</span>&#125;&#125;</span><span class="xml">&#x27; mysql</span><br></code></pre></td></tr></table></figure><h1 id="安装joomla">安装joomla</h1><p>访问<code>http://ip:8080</code>进入安装界面，其中关键的步骤是设置数据库的地址为上一步获取的ip地址，用户名为<code>root</code>，密码为<code>docker-compose</code>里面设置好的密码，其它网站设置根据自己情况填写即可。</p>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cdn.jsdelivr.net被墙</title>
    <link href="/2022/06/01/cdn-jsdelivr-net%E8%A2%AB%E5%A2%99/"/>
    <url>/2022/06/01/cdn-jsdelivr-net%E8%A2%AB%E5%A2%99/</url>
    
    <content type="html"><![CDATA[<p>5月16日，cdn.jsdelivr.net被墙，至此加速github成为历史；</p><p>临时解决方案：将cdn.jsdelivr.net更改为fastly.jsdelivr.net，不知道会不会留活口给jsdelivr</p><p>同时受到影响的还有静态资源mathjax的解析服务，目前替换为了https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.1</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cdn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021T8联考数学22导数题</title>
    <link href="/2022/05/13/2021T8%E8%81%94%E8%80%83%E6%95%B0%E5%AD%A622%E5%AF%BC%E6%95%B0%E9%A2%98/"/>
    <url>/2022/05/13/2021T8%E8%81%94%E8%80%83%E6%95%B0%E5%AD%A622%E5%AF%BC%E6%95%B0%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>已知函数<span class="math inline">\(f(x)=a\ln x-\sinx+x\)</span>，其中<span class="math inline">\(a\)</span>为非零常数.</p><p>（1）若函数<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,+\infty)\)</span>上单调递增，求<spanclass="math inline">\(a\)</span>的取值范围；</p><p>（2）设<spanclass="math inline">\(\theta\in(\pi,\dfrac{3}{2}\pi)\)</span>，且<spanclass="math inline">\(\cos\theta=1+\theta\sin\theta\)</span>，证明：当<spanclass="math inline">\(\theta^2\sin\theta&lt;a&lt;0\)</span>时，函数<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,2\pi)\)</span>上恰有两个极值点.</p>          </div><div class="note note-success">            <p><font color=deepskyblue>解析：</font>（2）<spanclass="math inline">\(f&#39;(x)=\dfrac{a}{x}-\cos x+1=\dfrac{a-x\cosx+x}{x}\)</span></p><p>设<span class="math inline">\(g(x)=x\cos{x}-x\)</span>，注意到<spanclass="math inline">\(g(0)=g(2\pi)=0\)</span>，并且<spanclass="math inline">\(g(\theta)=\theta\cos\theta-\theta=\theta^2\sin\theta\)</span>，该值恰好是条件<span class="math inline">\(\theta^2\sin\theta&lt;a&lt;0\)</span>的端点值，为了使得<spanclass="math inline">\(g(x)=a\)</span>有两个解，因此我们推测<spanclass="math inline">\(g(x)\)</span>的图像应该如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/andyppang/mdpic/pic/20220513235040.png" style="zoom:67%;" /></p><p>于是需要说明<span class="math inline">\(g(x)\)</span>在<spanclass="math inline">\((0,\theta)\)</span>单减，<spanclass="math inline">\((\theta,2\pi)\)</span>单增，为此研究<spanclass="math inline">\(g&#39;(x)=\cos x-x\sin x-1\)</span>，注意到<spanclass="math inline">\(g&#39;(0)=g&#39;(2\pi)=0\)</span>，<spanclass="math inline">\(g&#39;(\theta)=\cos\theta-\theta\sin\theta-1=0\)</span>，因此我们推测<spanclass="math inline">\(g&#39;(x)\)</span>的图象应该如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/andyppang/mdpic/pic/20220513235246.png" style="zoom:67%;" /></p><p>于是需要说明<spanclass="math inline">\(x\in(0,\theta)\)</span>时，<spanclass="math inline">\(g&#39;(x)&lt;0\)</span>，<spanclass="math inline">\(x\in(\theta,2\pi)\)</span>时，<spanclass="math inline">\(g&#39;(x)&gt;0\)</span>.但是我们只能方便证明<spanclass="math inline">\(x\in(0,\pi)\)</span>时，<spanclass="math inline">\(g&#39;(x)=\cos x-1-x\sinx&lt;0\)</span>，为了证明其它区间<spanclass="math inline">\(g&#39;(x)\)</span>的符号，需要结合<spanclass="math inline">\(g&#39;(x)\)</span>的单调性，也就是要说明<spanclass="math inline">\(g&#39;(x)\)</span>在<spanclass="math inline">\((0,x_1)\)</span>单减，<spanclass="math inline">\((x_1,x_2)\)</span>单增，<spanclass="math inline">\((x_2,2\pi)\)</span>单减，为此研究<spanclass="math inline">\(g&#39;&#39;(x)=-2\sin x-x\cosx\)</span>，注意到<spanclass="math inline">\(g&#39;&#39;(0)=0,g&#39;&#39;(\dfrac{3\pi}{2})=2,g&#39;&#39;(2\pi)=-2\pi\)</span>，因此我们推测<spanclass="math inline">\(g&#39;&#39;(x)\)</span>的图象应该如图所示：</p><p><imgsrc="https://cdn.jsdelivr.net/gh/andyppang/mdpic/pic/20220513235328.png" /></p><p>当<spanclass="math inline">\(x\in(\pi,\dfrac{3\pi}{2})\)</span>时，<spanclass="math inline">\(g&#39;&#39;(x)=-2\sin x-x\cosx&gt;0\)</span>，于是<spanclass="math inline">\(g&#39;(x)\)</span>在<spanclass="math inline">\((\pi,\dfrac{3\pi}{2})\)</span>单增，由于<spanclass="math inline">\(g&#39;(\theta)=0\)</span>，那么<spanclass="math inline">\(x\in(\pi,\theta)\)</span>时，<spanclass="math inline">\(g&#39;(\theta)&lt;0\)</span>，<spanclass="math inline">\(x\in(\theta,\dfrac{3\pi}{2})\)</span>时，<spanclass="math inline">\(g&#39;(\theta)&gt;0\)</span>，至此<spanclass="math inline">\(x\in(0,\theta)\)</span>时，<spanclass="math inline">\(g&#39;(x)&lt;0\)</span>说明完毕，接下来只需要证明<spanclass="math inline">\(x\in(\dfrac{3\pi}{2},2\pi)\)</span>时，<spanclass="math inline">\(g&#39;(x)&gt;0\)</span>即可，只需要说明<spanclass="math inline">\(g&#39;(x)\)</span>在<spanclass="math inline">\((\dfrac{3\pi}{2},x_2)\)</span>单增，亦即<spanclass="math inline">\(g&#39;&#39;(x)&gt;0\)</span>， <spanclass="math inline">\(g&#39;(x)\)</span>在<spanclass="math inline">\((x_2,2\pi)\)</span>单减，亦即<spanclass="math inline">\(g&#39;&#39;(x)&lt;0\)</span>，于是需要借助<spanclass="math inline">\(g&#39;&#39;(x)\)</span>的单调性，再次求导<spanclass="math inline">\(g&#39;&#39;&#39;(x)=-3\cos x+x\sinx\)</span>，惊喜发现<spanclass="math inline">\(x\in(\dfrac{3\pi}{2},2\pi)\)</span>时，<spanclass="math inline">\(g&#39;&#39;&#39;(x)&lt;0\)</span>，因此<spanclass="math inline">\(g&#39;&#39;(x)\)</span>在<spanclass="math inline">\(x\in(\dfrac{3\pi}{2},2\pi)\)</span>单减，由于<spanclass="math inline">\(g&#39;&#39;(\dfrac{3\pi}{2})=2,g&#39;&#39;(2\pi)=-2\pi\)</span>，于是<spanclass="math inline">\(\existsx_2\in(\dfrac{3\pi}{2},2\pi)\)</span>使得<spanclass="math inline">\(g&#39;&#39;(x_2)=0\)</span>，至此思路全部打通。</p><p>最终正常顺序简述为：</p><p><imgsrc="https://cdn.jsdelivr.net/gh/andyppang/mdpic/pic/20220513235609.png" /></p><p>本题以单调性为主线（红色部分），采取分段证明的策略，每次求导都能容易看到在部分区间上导数的符号（绿色部分），然后结合特殊点处的函数值（黄色部分），判断各导函数是否存在零点，从而决定上级导函数的单调性。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>导数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导数</tag>
      
      <tag>零点问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>因式分解背后的主元思想</title>
    <link href="/2022/03/14/%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E8%83%8C%E5%90%8E%E7%9A%84%E4%B8%BB%E5%85%83%E6%80%9D%E6%83%B3/"/>
    <url>/2022/03/14/%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E8%83%8C%E5%90%8E%E7%9A%84%E4%B8%BB%E5%85%83%E6%80%9D%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<p>题目：若<span class="math inline">\(f(x)=\dfrac{1}{2}x^2+b\lnx+ax\)</span>在<spanclass="math inline">\((1,2)\)</span>内有两个极值点，则<spanclass="math inline">\(b(3a+b+9)\)</span>的取值范围是___</p><p><font color=deepskyblue>解析：</font> <spanclass="math inline">\(f&#39;(x)=\dfrac{x^2+ax+b}{x}\)</span>，则<spanclass="math inline">\(x^2+ax+b=0\)</span>在<spanclass="math inline">\((1,2)\)</span>有两个不相等的实数根，设为<spanclass="math inline">\(x_1,x_2\)</span>，于是 <spanclass="math display">\[\begin{cases}x_1+x_2=-a\\x_1x_2=b\end{cases}\]</span> 则<spanclass="math inline">\(b(3a+b+9)=x_1x_2(-3x_1-3x_2+x_1x_2+9)\)</span></p><p>由于注意到<span class="math inline">\(x_1,x_2\)</span>是可以在<spanclass="math inline">\((1,2)\)</span>内任意互不影响的任意发生变化的，也就是说二者是相互独立的变量，因此对于上式就是一个<strong>独立双变量的范围问题</strong>，那么就可以采用<strong>主元法</strong>进行求解，不妨<strong>选定<spanclass="math inline">\(x_1\)</span>为主元对上式进行整理</strong>： <spanclass="math display">\[\begin{aligned}&amp;\quad x_1x_2(-3x_1-3x_2+x_1x_2+9)\\&amp;=(x_2^2-3x_2)x_1^2-(3x_2^2-9x_2)x_1\\&amp;=x_2(x_2-3)x_1^2-3x_2(x_2-3)x_1\\&amp;=x_2(x_2-3)(x_1^2-3x_1)\\&amp;=(x_2^2-3x_2)(x_1^2-3x_1)\end{aligned}\]</span> 没想到整理出来了一个<spanclass="math inline">\(x_1,x_2\)</span>不再缠绵的一个式子，那就只需要求出各自的范围就好了</p><p>由于<span class="math inline">\(x_1\in(1,2)\)</span>，则<spanclass="math inline">\(x_1^2-3x_1\in[-\dfrac{9}{4},-2)\)</span>，同理<spanclass="math inline">\(x_2^2-3x_2\in[-\dfrac{9}{4},-2)\)</span>，但是由于<spanclass="math inline">\(x_1\ne x_2\)</span></p><p>则<spanclass="math inline">\((x_2^2-3x_2)(x_1^2-3x_1)\in(4,\dfrac{81}{16})\)</span></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>主元法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>相关系数</title>
    <link href="/2022/03/03/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    <url>/2022/03/03/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p><strong>相关系数的引入理解</strong></p><p>对于成对数据的相关性强弱问题，可以从定性的角度观察散点图直观的感知，当然定量进行研究就需要引入一个新的量——相关系数</p><p>对于数据</p><p><span class="math display">\[(x_1,y_1),(x_2,y_2),...,(x_n,y_n)\]</span></p><ul><li>进行“中心化”处理：先将其平移到以<spanclass="math inline">\((\overline{x},\overline{y})\)</span>为中心的坐标系下，得到一组新的数据</li></ul><p><span class="math display">\[(x_1-\overline{x},y_1-\overline{y}),(x_2-\overline{x},y_2-\overline{y}),...,(x_n-\overline{x},y_n-\overline{y})\]</span></p><ul><li><p>中心化处理对散点图的影响：正相关的散点图平移后，大部分点分布在一、三象限；负相关的散点图平移后，大部分点分布在二、四象限。</p></li><li><p>中心化处理对回归直线的影响：由于回归直线一定经过<spanclass="math inline">\((\overline{x},\overline{y})\)</span>，则平移后的回归直线一定经过原点<spanclass="math inline">\((0,0)\)</span>，假设所有的点都在回归直线上，即相关性最强（函数关系），因此有</p></li></ul><p><span class="math display">\[y_i-\overline{y}=k(x_i-\overline{x})\]</span></p><p>也就是说对于以下两个<spanclass="math inline">\(n\)</span>维向量共线</p><p><span class="math display">\[\overrightarrow{X}=(x_1-\overline{x},x_2-\overline{x},...,x_n-\overline{x})\\\overrightarrow{Y}=(y_1-\overline{y},y_2-\overline{y},...,y_n-\overline{y})\]</span></p><p>倘若有些点不在回归直线上，则会造成以上两个向量的不共线，使得两个向量之间产生夹角<spanclass="math inline">\(\theta\)</span>，因此我们可以用夹角<spanclass="math inline">\(\theta\)</span>大小来衡量相关程度的强弱：显然若<spanclass="math inline">\(\theta=0^{\circ}\)</span>，则正相关性最强；若<spanclass="math inline">\(\theta=180^{\circ}\)</span>，则负相关性最强</p><p><span class="math display">\[r=\cos\theta=\dfrac{\sum\limits_{i=1}^n(x_i-\overline{x})(y_i-\overline{y})}{\sqrt{\sum\limits_{i=1}^n(x_i-\overline{x})^2}\cdot\sqrt{\sum\limits_{i=1}^n(y_i-\overline{y})^2}}\]</span></p><p><strong>相关系数的取值范围及意义：</strong></p><p><span class="math inline">\(r\in[-1,1]\)</span></p><p><span class="math inline">\(r=0\)</span>表示没有相关关系</p><p><span class="math inline">\(|r|=1\)</span>表示函数关系</p><p><span class="math inline">\(|r|\)</span>越大，则相关性越强</p><p><strong>相关系数与回归直线斜率<spanclass="math inline">\(\widehat{b}\)</span>的关系：</strong></p><p><span class="math display">\[\widehat{b}=\dfrac{\overrightarrow{X}\cdot\overrightarrow{Y}}{|\overrightarrow{X}|^2}=\dfrac{|\overrightarrow{X}||\overrightarrow{Y}|\cos\theta}{|\overrightarrow{X}|^2}=r\cdot \dfrac{\sigma_y}{\sigma_x}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>回归分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试Windows下写博客</title>
    <link href="/2022/03/01/testwindows/"/>
    <url>/2022/03/01/testwindows/</url>
    
    <content type="html"><![CDATA[<p>这是windows7环境下，安装了git + nodejs + pandoc + hexo，然后写下的测试篇。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>远程桌面控制软件Rustdesk</title>
    <link href="/2021/07/09/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%8E%A7%E5%88%B6%E8%BD%AF%E4%BB%B6Rustdesk/"/>
    <url>/2021/07/09/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%8E%A7%E5%88%B6%E8%BD%AF%E4%BB%B6Rustdesk/</url>
    
    <content type="html"><![CDATA[<h2 id="下载地址">下载地址</h2><p>在控制端和主机端都下载好</p><p>1.如果是windows桌面版需要先下载dll动态库</p><p><ahref="https://github.com/c-smile/sciter-sdk/raw/dc65744b66389cd5a0ff6bdb7c63a8b7b05a708b/bin.win/x64/sciter.dll">点击下载</a></p><p>2.下载软件本体</p><p><ahref="https://github.com/rustdesk/rustdesk/releases">点击下载</a></p><h2 id="使用教程">使用教程</h2><p>1.将下载到的sciter.dll放入 <code>c:\windows\system32</code>文件夹下</p><p>2.打开主程序，找到id和密码就可以连接了，密码可以修改为自己的</p><p>3.如果是手机端控制直接<ahref="https://github.com/rustdesk/rustdesk/releases/download/1.1.6/rustdesk-1.1.6.apk">下载apk</a>即可</p><h2 id="横向比较">横向比较</h2><p>目前在用的是 <code>zerotier</code>，如果是就在本市家里和公司连接的话，还是非常快的，基本没有卡顿感，也就是说rustdesk的连接速度稍逊一筹，其公用主机的地址目前有3个：首尔，新加坡，达拉斯，支持自定义自己的服务器。但是作为备胎，替换掉原来的备胎<code>Todesk</code> 。</p><h2 id="github项目地址">Github项目地址</h2><p><a href="https://github.com/rustdesk/rustdesk">github项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Rustdesk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021全国乙卷第12，20，21题解</title>
    <link href="/2021/06/26/2021%E5%85%A8%E5%9B%BD%E4%B9%99%E5%8D%B7%E7%AC%AC12%EF%BC%8C20%EF%BC%8C21%E9%A2%98%E8%A7%A3/"/>
    <url>/2021/06/26/2021%E5%85%A8%E5%9B%BD%E4%B9%99%E5%8D%B7%E7%AC%AC12%EF%BC%8C20%EF%BC%8C21%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="全国乙卷">2021全国乙卷</h2><p>12.设<span class="math inline">\(a=2\ln1.01\)</span>，<spanclass="math inline">\(b=\ln1.02\)</span>，<spanclass="math inline">\(c=\sqrt{1.04}-1\)</span>，则（ ）</p><p><span class="math inline">\(A.a&lt;b&lt;c\qquad\)</span> <spanclass="math inline">\(B.b&lt;c&lt;a\qquad\)</span> <spanclass="math inline">\(C.b&lt;a&lt;c\qquad\)</span> <spanclass="math inline">\(D.c&lt;a&lt;b\)</span></p><p>解：<span class="math inline">\(a=\ln1.0201&gt;b\)</span>，比较<spanclass="math inline">\(b\)</span>和<spanclass="math inline">\(c\)</span>，注意到<spanclass="math inline">\(1.04=1.02\times2-1\)</span>，构造<spanclass="math inline">\(f(x)=\ln x-\sqrt{2x-1}+1\)</span></p><p><spanclass="math inline">\(f&#39;(x)=\dfrac{\sqrt{2x-1}-x}{x\sqrt{2x-1}}\le0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\([1,+\infty)\)</span>单减，于是<spanclass="math inline">\(f(1.02)&lt;f(1)=0\)</span>，即<spanclass="math inline">\(b&lt;c\)</span></p><p>比较<span class="math inline">\(a\)</span>和<spanclass="math inline">\(c\)</span>，构造<spanclass="math inline">\(g(x)=2\ln x-\sqrt{4x-3}+1\)</span>，<spanclass="math inline">\(g&#39;(x)=\dfrac{2(\sqrt{4x-3}-x)}{x\sqrt{4x-3}}\)</span></p><p>令<span class="math inline">\(g&#39;(x)&gt;0\)</span>得<spanclass="math inline">\(x\in(1,3)\)</span>，于是<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((1,3)\)</span>单增，则<spanclass="math inline">\(g(1.01)&gt;g(1)=0\)</span>，即<spanclass="math inline">\(a&gt;c\)</span></p><p>20.设函数<spanclass="math inline">\(f(x)=\ln(a-x)\)</span>，已知<spanclass="math inline">\(x=0\)</span>是函数<spanclass="math inline">\(y=xf(x)\)</span>的极值点.</p><p>（1）求<span class="math inline">\(a\)</span>；</p><p>（2）设函数<spanclass="math inline">\(g(x)=\dfrac{x+f(x)}{xf(x)}\)</span>，证明<spanclass="math inline">\(g(x)&lt;1\)</span></p><p>解：（1）<span class="math inline">\(a=1\)</span></p><p>（2）<span class="math inline">\(g(x)\)</span>的定义域是<spanclass="math inline">\((-\infty,0)\cup (0,1)\)</span>，即证<spanclass="math inline">\(\dfrac{x+\ln(1-x)}{x\ln(1-x)}&lt;1\)</span>，注意到<spanclass="math inline">\(x\ln(1-x)&lt;0\)</span></p><p>即证<spanclass="math inline">\(x+(1-x)\ln(1-x)&gt;0\)</span>，即证<spanclass="math inline">\(h(x)=\dfrac{x}{1-x}+\ln(1-x)&gt;0\)</span></p><p><spanclass="math inline">\(h&#39;(x)=\dfrac{x}{(1-x)^2}\)</span>，则<spanclass="math inline">\(h(x)\)</span>在<spanclass="math inline">\((-\infty,0)\)</span>单减，<spanclass="math inline">\((0,1)\)</span>单增，而<spanclass="math inline">\(h(0)=0\)</span></p><p>则当<spanclass="math inline">\(x\in(-\infty,0)\cup(0,1)\)</span>时，<spanclass="math inline">\(h(x)&gt;0\)</span>，得证</p><p>21.已知抛物线<spanclass="math inline">\(C:x^2=2py(p&gt;0)\)</span>的焦点为<spanclass="math inline">\(F\)</span>，且<spanclass="math inline">\(F\)</span>与圆<spanclass="math inline">\(M:x^2+(y+4)^2=1\)</span>上点的距离的最小值为4</p><p>（1）求<span class="math inline">\(p\)</span>；</p><p>（2）若点<span class="math inline">\(P\)</span>在<spanclass="math inline">\(M\)</span>上，<spanclass="math inline">\(PA,PB\)</span>是<spanclass="math inline">\(C\)</span>的两条切线，<spanclass="math inline">\(A,B\)</span>是切点，求<spanclass="math inline">\(\triangle PAB\)</span>面积的最大值.</p><p>解：（1）<span class="math inline">\(p=2\)</span></p><p><img src="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-06-25_15-12-47.png" style="zoom:67%;" /></p><p>（2）设<spanclass="math inline">\(A(x_1,\dfrac{1}{4}x_1^2),B(x_2,\dfrac{1}{4}x_2^2)\)</span>，过<spanclass="math inline">\(A\)</span>的切线<spanclass="math inline">\(l_1:y=\dfrac{1}{2}x_1x-\dfrac{1}{4}x_1^2\)</span></p><p>同理过<span class="math inline">\(B\)</span>的切线<spanclass="math inline">\(l_2:y=\dfrac{1}{2}x_2x-\dfrac{1}{4}x_2^2\)</span>，联立求得<spanclass="math inline">\(P(\dfrac{x_1+x_2}{2},\dfrac{1}{4}x_1x_2)\)</span></p><p>又过<span class="math inline">\(A\)</span>B的直线方程为<spanclass="math inline">\(y=\dfrac{\frac{1}{4}x_2^2-\frac{1}{4}x_1^2}{x_2-x_1}(x-x_1)+\dfrac{1}{4}x_1^2\)</span>，即<spanclass="math inline">\(y=\dfrac{1}{4}(x_1+x_2)x-\dfrac{1}{4}x_1x_2\)</span></p><p>则<span class="math inline">\(AB\)</span>中点为<spanclass="math inline">\(M(\dfrac{x_1+x_2}{2},\dfrac{x_1^2+x_2^2}{8})\)</span>，连接<spanclass="math inline">\(PM\)</span>，则</p><p><span class="math inline">\(S_{\trianglePAB}=\dfrac{1}{2}|PM|\cdot|x_2-x_1|=\dfrac{(x_2-x_1)^3}{16}\)</span></p><p>记<spanclass="math inline">\(P(\dfrac{x_1+x_2}{2},\dfrac{1}{4}x_1x_2)=(x_0,y_0)\)</span>，则<spanclass="math inline">\((x_2-x_1)^2=(x_1+x_2)^2-4x_1x_2=4x_0^2-16y_0\)</span></p><p>由于<span class="math inline">\(x_0^2+(y_0+4)^2=1\)</span>，则<spanclass="math inline">\(4x_0^2-16y_0=-4y_0^2-48y_0-60\)</span></p><p>于是<span class="math inline">\(S_{\trianglePAB}=\dfrac{(x_2-x_1)^3}{16}=\dfrac{(-4y_0^2-48y_0-60)^\frac{3}{2}}{16},y_0\in[-5,-3]\)</span></p><p>则当<span class="math inline">\(y_0=-5\)</span>时，<spanclass="math inline">\(S_{\triangle PAB}\)</span>的最大值为<spanclass="math inline">\(20\sqrt5\)</span></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>高考题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高考题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021新高考2卷部分试题解析</title>
    <link href="/2021/06/22/2021%E6%96%B0%E9%AB%98%E8%80%832%E5%8D%B7%E9%83%A8%E5%88%86%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <url>/2021/06/22/2021%E6%96%B0%E9%AB%98%E8%80%832%E5%8D%B7%E9%83%A8%E5%88%86%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="新高考全国2卷">2021新高考全国2卷</h2><p>11.已知直线<spanclass="math inline">\(l:ax+by-r^2=0\)</span>与圆<spanclass="math inline">\(C:x^2+y^2=r^2\)</span>，点<spanclass="math inline">\(A(a,b)\)</span>，则下列说法正确的是（ ）</p><p><span class="math inline">\(A.\)</span>若点<spanclass="math inline">\(A\)</span>在圆<spanclass="math inline">\(C\)</span>上，则直线<spanclass="math inline">\(l\)</span>与圆<spanclass="math inline">\(C\)</span>相切</p><p><span class="math inline">\(B.\)</span>若点<spanclass="math inline">\(A\)</span>在圆<spanclass="math inline">\(C\)</span>内，则直线<spanclass="math inline">\(l\)</span>与圆<spanclass="math inline">\(C\)</span>相离</p><p><span class="math inline">\(C.\)</span>若点<spanclass="math inline">\(A\)</span>在圆<spanclass="math inline">\(C\)</span>外，则直线<spanclass="math inline">\(l\)</span>与圆<spanclass="math inline">\(C\)</span>相离</p><p><span class="math inline">\(D.\)</span>若点<spanclass="math inline">\(A\)</span>在直线<spanclass="math inline">\(l\)</span>上，则直线<spanclass="math inline">\(l\)</span>与圆<spanclass="math inline">\(C\)</span>相切</p><p>解：<span class="math inline">\(ABD\)</span></p><p>12.设正整数<spanclass="math inline">\(n=a_0\cdot2^0+a_1\cdot2+\cdots+a_{k-1}\cdot2^{k-1}+a_k\cdot2^k\)</span>，其中<spanclass="math inline">\(a_i\in\{0,1\}\)</span>，记<spanclass="math inline">\(\omega(n)=a_0+a_1+\cdots+a_k\)</span>，则（ ）</p><p><span class="math inline">\(A.\omega(2n)=\omega(n)\qquad\)</span><spanclass="math inline">\(B.\omega(2n+3)=\omega(n)+1\qquad\)</span></p><p><spanclass="math inline">\(C.\omega(8n+5)=\omega(4n+3)\qquad\)</span> <spanclass="math inline">\(D.\omega(2^n-1)=n\)</span></p><p>解：方法一：取二进制的特殊值，利用运算验证，略</p><p>方法二：<spanclass="math inline">\(n=a_0\cdot2^0+a_1\cdot2+\cdots+a_{k-1}\cdot2^{k-1}+a_k\cdot2^k=(a_ka_{k-1}...a_{0})_2\)</span></p><p>对于<span class="math inline">\(A\)</span>，<spanclass="math inline">\(2n=0\cdot2^0+a_0\cdot2+a_1\cdot2^2+\cdots+a_{k-1}\cdot2^k+a_k\cdot2^{k+1}=(a_ka_{k-1}a_00)_2\)</span>，则<spanclass="math inline">\(A\)</span>正确</p><p>对于<span class="math inline">\(B\)</span>，<spanclass="math inline">\(2n+3=1\cdot2^0+(a_0+1)\cdot2+a_1\cdot2^2+\cdots+a_{k-1}\cdot2^k+a_k\cdot2^{k+1}\)</span>，若<spanclass="math inline">\(a_0=0\)</span>，则<spanclass="math inline">\(\omega(2n+3)=\omega(n)+2\)</span>，<spanclass="math inline">\(B\)</span>错</p><p>对于<span class="math inline">\(C\)</span>，<spanclass="math inline">\(8n+5=1\cdot2^0+0\cdot2^1+1\cdot2^2+a_0\cdot2^3+a_1\cdot2^4+\cdots+a_{k-1}\cdot2^{k+2}+a_k\cdot2^{k+3}=(a_ka_{k-1}...a_0101)_2\)</span></p><p><spanclass="math inline">\(4n+3=1\cdot2^0+1\cdot2^1+a_0\cdot2^2+a_1\cdot2^3+\cdots+a_{k-1}\cdot2^{k+1}+a_k\cdot2^{k+2}=(a_ka_{k-1}...a_011)_2\)</span>，则<spanclass="math inline">\(C\)</span>正确</p><p>对于<span class="math inline">\(D\)</span>，<spanclass="math inline">\(2^n-1=2^0+2^1+2^2+\cdots+2^{n-1}=(11...1)_2\)</span>，则<spanclass="math inline">\(D\)</span>正确</p><p>直接从二进制运算的角度理解：</p><p>从<spanclass="math inline">\(n=a_0\cdot2^0+a_1\cdot2+\cdots+a_{k-1}\cdot2^{k-1}+a_k\cdot2^k=(a_ka_{k-1}...a_{0})_2\)</span></p><p><spanclass="math inline">\(2n=0\cdot2^0+a_0\cdot2+a_1\cdot2^2+\cdots+a_{k-1}\cdot2^k+a_k\cdot2^{k+1}=(a_ka_{k-1}a_00)_2\)</span></p><p><spanclass="math inline">\(4n=0\cdot2^0+0\cdot2^1+a_0\cdot2^2+a_1\cdot2^3+\cdots+a_{k-1}\cdot2^{k+1}+a_k\cdot2^{k+2}=(a_ka_{k-1}a_000)_2\)</span></p><p>可以看出对于二进制数，每次乘以2以后，就在后面加了个0，因此<spanclass="math inline">\(\omega(n)=\omega(2n)=\cdots=\omega(2^kn),k\in\mathbb{N}\)</span></p><p>对于<span class="math inline">\(C\)</span>，<spanclass="math inline">\(8n+5=(...000)_2+(101)_2=(...101)_2\)</span>，则<spanclass="math inline">\(\omega(8n+5)=\omega(8n)+2=\omega(n)+2\)</span></p><p><spanclass="math inline">\(4n+3=(...00)_2+(11)_2=(...11)_2\)</span>，则<spanclass="math inline">\(\omega(4n+3)=\omega(4n)+2=\omega(n)+2\)</span></p><p>对于<span class="math inline">\(D\)</span>，<spanclass="math inline">\(2^n-1=(1后面n个0)_2-(1)_2=(n个1)_2\)</span>，则<spanclass="math inline">\(\omega(2^n-1)=n\)</span></p><p>对于<span class="math inline">\(B\)</span>，若<spanclass="math inline">\(n=2t\)</span>，则<spanclass="math inline">\(2n+3=4t+3=(...00)_2+(11)_2=(...11)_2\)</span>，</p><p>因此<spanclass="math inline">\(\omega(2n+3)=\omega(2n)+2=\omega(n)+2\)</span></p><p>若<span class="math inline">\(n=2t-1\)</span>，则<spanclass="math inline">\(2n+3=4t+1=(...00)_2+(1)_2=(...01)_2\)</span>，</p><p>因此<spanclass="math inline">\(\omega(2n+3)=\omega(4t)+1=\omega(t)+1\)</span>，若<spanclass="math inline">\(\omega(t)+1=\omega(n)+1=\omega(2t-1)+1\)</span>，则<spanclass="math inline">\(t=1\)</span>时<spanclass="math inline">\(B\)</span>才正确</p><p>15.已知向量<spanclass="math inline">\(\overrightarrow{a}+\overrightarrow{b}+\overrightarrow{c}=0\)</span>，<spanclass="math inline">\(|\overrightarrow{a}|=1,|\overrightarrow{b}|=|\overrightarrow{c}|=2\)</span>，<spanclass="math inline">\(\overrightarrow{a}\cdot\overrightarrow{b}+\overrightarrow{b}\cdot\overrightarrow{c}+\overrightarrow{c}\cdot\overrightarrow{a}=\)</span>_____</p><p>解：平方即可，<span class="math inline">\(-\dfrac{9}{2}\)</span></p><p>16.已知函数<span class="math inline">\(f(x)=|e^x-1|\)</span>，<spanclass="math inline">\(x_1&lt;0,x_2&gt;0\)</span>，函数<spanclass="math inline">\(f(x)\)</span>的图像在点<spanclass="math inline">\(A(x_1,f(x_1))\)</span>和点<spanclass="math inline">\(B(x_2,f(x_2))\)</span>的两条切线互相垂直，且分别交<spanclass="math inline">\(y\)</span>轴于<spanclass="math inline">\(M,N\)</span>两点，则<spanclass="math inline">\(\dfrac{|AM|}{|BN|}\)</span>的取值范围是______</p><p>解：利用垂直可以得<spanclass="math inline">\(x_1+x_2=0\)</span>，常规计算或者利用几何关系得<spanclass="math inline">\(\dfrac{|AM|}{|BN|}=\sqrt{e^{x_1}}\in(0,1)\)</span></p><p>20.已知椭圆<span class="math inline">\(C\)</span>的方程为<spanclass="math inline">\(\dfrac{x^2}{a^2}+\dfrac{y^2}{b^2}=1(a&gt;b&gt;0)\)</span>，右焦点为<spanclass="math inline">\(F(\sqrt2,0)\)</span>，且离心率为<spanclass="math inline">\(\dfrac{\sqrt6}{3}\)</span></p><p>（1）求椭圆<span class="math inline">\(C\)</span>的方程；</p><p>（2）设<span class="math inline">\(M,N\)</span>是椭圆<spanclass="math inline">\(C\)</span>上的两点，直线<spanclass="math inline">\(MN\)</span>与曲线<spanclass="math inline">\(x^2+y^2=b^2(x&gt;0)\)</span>相切，证明：<spanclass="math inline">\(M,N,F\)</span>三点共线的充要条件是<spanclass="math inline">\(|MN|=\sqrt3\)</span></p><p>解：（1）<spanclass="math inline">\(C:\dfrac{x^2}{3}+y^2=1\)</span></p><p>（2）设直线<span class="math inline">\(MN:y=kx+m\)</span>与<spanclass="math inline">\(x^2+y^2=1(x&gt;0)\)</span>相切，则<spanclass="math inline">\(1+k^2=m^2\)</span> ①</p><p>将直线与椭圆联立得<spanclass="math inline">\((1+3k^2)x^2+6kmx+3m^2-3=0\)</span>，由弦长公式得<spanclass="math inline">\(|MN|=\sqrt{1+k^2}\cdot\dfrac{2\sqrt3\cdot\sqrt{3k^2-m^2+1}}{1+3k^2}\)</span>②</p><p>充分性：若<spanclass="math inline">\(|MN|=\sqrt3\)</span>，联立①②可得，<spanclass="math inline">\(\begin{cases}k=1\\ m=-\sqrt2\end{cases}\)</span>或<span class="math inline">\(\begin{cases}k=-1\\m=\sqrt2 \end{cases}\)</span>，显然<spanclass="math inline">\(MN\)</span>过点<spanclass="math inline">\(F\)</span></p><p>必要性：若<span class="math inline">\(MN\)</span>过<spanclass="math inline">\(F\)</span>，则<spanclass="math inline">\(m=-\sqrt2k\)</span>，代入①可得<spanclass="math inline">\(k=\pm1\)</span>，再代入②可求得<spanclass="math inline">\(|MN|=\sqrt3\)</span></p><p>则<span class="math inline">\(M,N,F\)</span>三点共线的充要条件是<spanclass="math inline">\(|MN|=\sqrt3\)</span></p><p>21.一种微生物群体可以经过自身繁殖不断生存下来，设一个这种微生物为第0代，经过一次繁殖后为第1代，再经过一次繁殖后为第2代.......，该微生物每代繁殖的个数是相互独立的，且有相同的分布列，设<spanclass="math inline">\(X\)</span>表示1个微生物个体繁殖下一代的个数，<spanclass="math inline">\(P(X=i)=p_i(i=0,1,2,3)\)</span></p><p>（1）已知<spanclass="math inline">\(p_0=0.4,p_1=0.3,p_2=0.2,p_3=0.1\)</span>，求<spanclass="math inline">\(E(X)\)</span></p><p>（2）设<spanclass="math inline">\(p\)</span>表示该种微生物经过多代繁殖后临近灭绝的概率，<spanclass="math inline">\(p\)</span>是关于<spanclass="math inline">\(x\)</span>的方程：<spanclass="math inline">\(p_0+p_1x+p_2x^2+p_3x^3=x\)</span>的一个最小正实根，求证：当<spanclass="math inline">\(E(X)\le1\)</span>时，<spanclass="math inline">\(p=1\)</span>，当<spanclass="math inline">\(E(X)&gt;1\)</span>时，<spanclass="math inline">\(p&lt;1\)</span></p><p>（3）根据你的理解说明（2）问结论的实际含义</p><p>解：（1）<spanclass="math inline">\(E(x)=0\times0.4+1\times0.3+2\times0.2+3\times0.1=1\)</span></p><p>（2）令<spanclass="math inline">\(f(x)=p_3x^3+p_2x^2+(p_1-1)x+p_0\)</span>，注意<spanclass="math inline">\(f(1)=p_3+p_2+p_1+p_0-1=0\)</span></p><p><spanclass="math inline">\(f&#39;(x)=3p_3x^2+2p_2x+p_1-1\)</span>，<spanclass="math inline">\(f&#39;(1)=3p_3+2p_2+p_1-1=E(x)-1\)</span></p><p>当<span class="math inline">\(E(X)\le1\)</span>时，即<spanclass="math inline">\(f&#39;(1)\le0\)</span>，又<spanclass="math inline">\(f&#39;(0)=p_1-1\le0\)</span>，则由二次函数的性质可知当<spanclass="math inline">\(x\in(0,1)\)</span>时，<spanclass="math inline">\(f&#39;(x)&lt;0\)</span>，即<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>单减，又<spanclass="math inline">\(f(1)=0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>无零点，即<spanclass="math inline">\(p=1\)</span>是<spanclass="math inline">\(f(x)\)</span>的最小零点</p><p>当<span class="math inline">\(E(X)&gt;1\)</span>时，即<spanclass="math inline">\(f&#39;(1)&gt;0\)</span>，又<spanclass="math inline">\(f&#39;(0)\le0\)</span>，结合二次函数的性质知<spanclass="math inline">\(\exists  x_0\in(0,1)\)</span>使得<spanclass="math inline">\(f&#39;(x_0)=0\)</span>，故<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,x_0)\)</span>单减，<spanclass="math inline">\((x_0,1)\)</span>单增，则<spanclass="math inline">\(f(0)=p_0&gt;0,f(x_0)&lt;f(1)=0\)</span>，于是<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>内存在零点<spanclass="math inline">\(p\)</span>，即<spanclass="math inline">\(p&lt;1\)</span></p><p>（3）当微生物下代繁殖的期望小于等于1时，该种微生物经过多代繁殖后，必定会临近灭绝</p><p>当微生物下代繁殖的期望大于1时，该种微生物经过多代繁殖后，有可能会临近灭绝</p><p>22.已知函数<spanclass="math inline">\(f(x)=(x-1)e^x-ax^2+b\)</span></p><p>（1）讨论<span class="math inline">\(f(x)\)</span>的单调性；</p><p>（2）从下面两个条件中选一个，证明：<spanclass="math inline">\(f(x)\)</span>有一个零点</p><p>①<spanclass="math inline">\(\dfrac{1}{2}&lt;a\le\dfrac{e^2}{2},b&gt;2a\)</span>；②<span class="math inline">\(0&lt;a&lt;\dfrac{1}{2},b\le2a\)</span></p><p>解：（1）<spanclass="math inline">\(f&#39;(x)=xe^x-2ax=x(e^x-2a)\)</span></p><p>若<span class="math inline">\(a\le0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,0)\)</span>单减，<spanclass="math inline">\((0,+\infty)\)</span>单增</p><p>若<spanclass="math inline">\(0&lt;a&lt;\dfrac{1}{2}\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,\ln2a)\)</span>单增，<spanclass="math inline">\((\ln2a,0)\)</span>单减，<spanclass="math inline">\((0,+\infty)\)</span>单增</p><p>若<span class="math inline">\(a=\dfrac{1}{2}\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,+\infty)\)</span>单增</p><p>若<span class="math inline">\(a&gt;\dfrac{1}{2}\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,0)\)</span>单增，<spanclass="math inline">\((0,\ln2a)\)</span>单减，<spanclass="math inline">\((\ln2a,+\infty)\)</span>单增</p><p>（2）若选①，由（1）知<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,0)\)</span>单增，<spanclass="math inline">\((0,\ln2a)\)</span>单减，<spanclass="math inline">\((\ln2a,+\infty)\)</span>单增</p><p><spanclass="math inline">\(f(-\sqrt{\dfrac{b}{a}})&lt;0\)</span>，<spanclass="math inline">\(f(0)=b-1&gt;2a-1&gt;0\)</span>，</p><p><spanclass="math inline">\(f(\ln2a)=2a(\ln2a-1)-a\ln^22a+b&gt;2a(\ln2a-1)-a\ln^22a+2a=a\ln2a(2-\ln2a)\ge0\)</span></p><p>故<span class="math inline">\(f(\ln2a)&gt;0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,0)\)</span>内有唯一零点</p><p>若选②，则<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,\ln2a)\)</span>单增，<spanclass="math inline">\((\ln2a,0)\)</span>单减，<spanclass="math inline">\((0,+\infty)\)</span>单增</p><p><span class="math inline">\(f(\ln2a)=2a(\ln2a-1)-a\ln^22a+b\le2a(\ln2a-1)-a\ln^22a+2a=a\ln2a(2-\ln2a)&lt;0\)</span></p><p>易证<span class="math inline">\(x&gt;1\)</span>时，<spanclass="math inline">\(e^x&gt;x+1\)</span>，则当<spanclass="math inline">\(x&gt;1\)</span>时，有</p><p><spanclass="math inline">\(f(x)=(x-1)e^x-ax^2+b&gt;(x-1)(x+1)-ax^2+b=(1-a)x^2+b-1\ge(1-a)x^2-|b|-1\)</span></p><p>则<spanclass="math inline">\(f(\sqrt{\dfrac{|b|+1}{1-a}})&gt;0\)</span>，于是<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,+\infty)\)</span>存在唯一零点</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>高考题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高考题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021新高考1卷部分试题解析</title>
    <link href="/2021/06/21/2021%E6%96%B0%E9%AB%98%E8%80%831%E5%8D%B7%E9%83%A8%E5%88%86%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <url>/2021/06/21/2021%E6%96%B0%E9%AB%98%E8%80%831%E5%8D%B7%E9%83%A8%E5%88%86%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="新高考全国1卷">2021新高考全国1卷</h2><p>8.有6个相同的球，分别标有数字1，2，3，4，5，6，从中有放回的随机取两次，每次取1个球.甲表示事件“第一次取出的球的数字是1”，乙表示事件“第二次取出的球的数字是2”，丙表示事件“两次取出的球的数字之和是8”，丁表示事件“两次取出的球的数字之和是7”，则（）</p><p><span class="math inline">\(A.\)</span>甲与丙相互独立 <spanclass="math inline">\(B.\)</span>甲与丁相互独立 <spanclass="math inline">\(C.\)</span>乙与丙相互独立 <spanclass="math inline">\(D.\)</span>丙与丁相互独立</p><p>解：甲与丙是互斥事件，故不相互独立；<spanclass="math inline">\(P\)</span>(丁|甲)=<spanclass="math inline">\(P\)</span>(丁)=<spanclass="math inline">\(\dfrac{1}{6}\)</span>，故甲与丁相互独立</p><p><span class="math inline">\(P\)</span>(丙)=<spanclass="math inline">\(\dfrac{5}{36}\)</span>，<spanclass="math inline">\(P\)</span>(丙|乙)=<spanclass="math inline">\(\dfrac{1}{6}\)</span>，故乙与丙不相互独立；丙与丁是互斥事件，故丙与丁不相互独立</p><p>12.在正三棱柱<spanclass="math inline">\(ABC-A_1B_1C_1\)</span>中，<spanclass="math inline">\(AB=AA_1=1\)</span>，点<spanclass="math inline">\(P\)</span>满足<spanclass="math inline">\(\overrightarrow{BP}=\lambda\overrightarrow{BC}+\mu\overrightarrow{BB_1}\)</span>，其中<spanclass="math inline">\(\lambda\in[0,1],\mu\in[0,1]\)</span>，则（ ）</p><p><span class="math inline">\(A.\)</span>当<spanclass="math inline">\(\lambda=1\)</span>时，<spanclass="math inline">\(\triangle AB_1P\)</span>的周长为定值</p><p><span class="math inline">\(B.\)</span>当<spanclass="math inline">\(\mu=1\)</span>时，三棱锥<spanclass="math inline">\(P-A_1BC\)</span>的体积为定值</p><p><span class="math inline">\(C.\)</span>当<spanclass="math inline">\(\lambda=\dfrac{1}{2}\)</span>时，有且仅有一个点<spanclass="math inline">\(P\)</span>，使得<spanclass="math inline">\(A_1P\bot BP\)</span></p><p><span class="math inline">\(D.\)</span>当<spanclass="math inline">\(\mu=\dfrac{1}{2}\)</span>时，有且仅有一个点<spanclass="math inline">\(P\)</span>，使得$A_1B<spanclass="math inline">\(平面\)</span>AB_1P$</p><p><img src="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-06-20_20-44-49.jpg" style="zoom:70%;" /></p><p>解：对于<span class="math inline">\(A\)</span>，点<spanclass="math inline">\(P\)</span>在线段<spanclass="math inline">\(CC_1\)</span>上，当<spanclass="math inline">\(P\)</span>位于<spanclass="math inline">\(CC_1\)</span>的中点时，<spanclass="math inline">\(AP+B_1P\)</span>最短，故<spanclass="math inline">\(\triangle AB_1P\)</span>的周长不是定值，<spanclass="math inline">\(A\)</span>错</p><p>对于<span class="math inline">\(B\)</span>，点<spanclass="math inline">\(P\)</span>在线段<spanclass="math inline">\(B_1C_1\)</span>上，由于<spanclass="math inline">\(B_1C_1//\)</span>平面<spanclass="math inline">\(A_1BC\)</span>，则<spanclass="math inline">\(B_1C_1\)</span>上任意一点到平面的距离都相等，故<spanclass="math inline">\(B\)</span>对</p><p>对于<span class="math inline">\(C\)</span>，点<spanclass="math inline">\(P\)</span>在线段<spanclass="math inline">\(P_1P_2\)</span>上，当<spanclass="math inline">\(P\)</span>在<spanclass="math inline">\(P_1\)</span>或<spanclass="math inline">\(P_2\)</span>上时，都有<spanclass="math inline">\(A_1P\bot BP\)</span>，<spanclass="math inline">\(C\)</span>错，多选题故<spanclass="math inline">\(D\)</span>正确</p><p>对于<span class="math inline">\(D\)</span>，需满足<spanclass="math inline">\(A_1B\bot PO\)</span>，由于<spanclass="math inline">\(O\)</span>为<spanclass="math inline">\(A_1B\)</span>的中点，即需有<spanclass="math inline">\(PB=PA_1\)</span>，则<spanclass="math inline">\(P\)</span>在线段<spanclass="math inline">\(A_1B\)</span>的中垂面上，而中垂面与<spanclass="math inline">\(P\)</span>所在的线段交点唯一，即<spanclass="math inline">\(CC_1\)</span>的中点</p><p>16.某校学生在研究民间剪纸艺术时，发现剪纸时经常会沿纸的某条对称轴把纸对折，规格为20dm<span class="math inline">\(\times\)</span>12dm的长方形纸，对折1次共可以得到10dm <spanclass="math inline">\(\times\)</span> 12dm，20dm <spanclass="math inline">\(\times\)</span>6dm两种规格的图形，它们的面积之和为 <spanclass="math inline">\(S_1=240dm^2\)</span>，对折2次共可以得到5dm <spanclass="math inline">\(\times\)</span> 12dm，10dm <spanclass="math inline">\(\times\)</span> 6dm，20dm <spanclass="math inline">\(\times\)</span>3dm三种规格的图形，它们的面积之和<spanclass="math inline">\(S_2=180dm^2\)</span>，以此类推，则对折4次共可以得到不同规格图形的种数为_________；如果对折<span class="math inline">\(n\)</span>次，那么<spanclass="math inline">\(\sum _{k=1}^n S_k=\)</span> ____________<spanclass="math inline">\(dm^2\)</span></p><p>解：考察数列错位相减法求和略，5，<spanclass="math inline">\(720-240\cdot\dfrac{n+3}{2^n}\)</span></p><p>19.记<span class="math inline">\(\triangle ABC\)</span>的内角<spanclass="math inline">\(A,B,C\)</span>的对边分别为<spanclass="math inline">\(a,b,c\)</span>.已知<spanclass="math inline">\(b^2=ac\)</span>，点<spanclass="math inline">\(D\)</span>在边<spanclass="math inline">\(AC\)</span>上，<spanclass="math inline">\(BD\sin\angle ABC=a\sin C\)</span>.</p><p>（1）证明：<span class="math inline">\(BD=b\)</span>；</p><p>（2）若<span class="math inline">\(AD=2DC\)</span>，求<spanclass="math inline">\(\cos\angle ABC\)</span>.</p><p>解：（2）由<span class="math inline">\(\cos\angle ADB+\cos\angleCDB=0\)</span>，即<spanclass="math inline">\(\dfrac{\dfrac{4}{9}b^2+b^2-c^2}{2\times\dfrac{2}{3}b^2}+\dfrac{b^2+\dfrac{1}{9}b^2-a^2}{2\times\dfrac{1}{3}b^2}=0\)</span>，</p><p>化简得<span class="math inline">\(3c^2-11ac+6a^2=0\)</span>，即<spanclass="math inline">\(c=3a\)</span>或<spanclass="math inline">\(c=\dfrac{2}{3}a\)</span></p><p>若<span class="math inline">\(c=3a\)</span>，则<spanclass="math inline">\(b=\sqrt3a\)</span>，此时<spanclass="math inline">\(a+b&lt;c\)</span>，不能构成三角i形，舍</p><p>故<span class="math inline">\(c=\dfrac{2}{3}a\)</span>，此时<spanclass="math inline">\(\cos \angleABC=\dfrac{a^2+c^2-ac}{2ac}=\dfrac{7}{12}\)</span></p><p>21.在平面直角坐标系<spanclass="math inline">\(xOy\)</span>中，已知点<spanclass="math inline">\(F_1(-\sqrt{17},0),F_2(\sqrt{17},0)\)</span>，点<spanclass="math inline">\(M\)</span>满足<spanclass="math inline">\(|MF_1|-|MF_2|=2\)</span>.记<spanclass="math inline">\(M\)</span>的轨迹为<spanclass="math inline">\(C\)</span>.</p><p>（1）求<span class="math inline">\(C\)</span>的方程</p><p>（2）设点<span class="math inline">\(T\)</span>在直线<spanclass="math inline">\(x=\dfrac{1}{2}\)</span>上，过<spanclass="math inline">\(T\)</span>的两条直线分别交<spanclass="math inline">\(C\)</span>于<spanclass="math inline">\(A,B\)</span>两点和<spanclass="math inline">\(P,Q\)</span>两点，且<spanclass="math inline">\(|TA|\cdot|TB|=|TP|\cdot|TQ|\)</span>，求直线<spanclass="math inline">\(AB\)</span>的斜率与直线<spanclass="math inline">\(PQ\)</span>的斜率之和.</p><p>解：（1）<spanclass="math inline">\(C:x^2-\dfrac{y^2}{16}=1(x\ge1)\)</span></p><p>（2）方法一：设<spanclass="math inline">\(T(\dfrac{1}{2},n)\)</span>，<spanclass="math inline">\(AB:y=k_1x+m_1\)</span>，<spanclass="math inline">\(PQ:y=k_2x+m_2\)</span>，将<spanclass="math inline">\(AB\)</span>与<spanclass="math inline">\(C\)</span>联立得</p><p><spanclass="math inline">\((16-k_1^2)x^2-2k_1m_1x-m_1^2-16=0\)</span>，设方程的两根为<spanclass="math inline">\(x_1,x_2\)</span></p><p>则<spanclass="math inline">\((16-k_1^2)x^2-2k_1m_1x-m_1^2-16=(16-k_1^2)(x-x_1)(x-x_2)\)</span>，令<spanclass="math inline">\(x=\dfrac{1}{2}\)</span>得</p><p><spanclass="math inline">\((\dfrac{1}{2}-x_1)(\dfrac{1}{2}-x_2)=\dfrac{\dfrac{1}{4}(16-k_1^2)-k_1m-m_1^2-16}{16-k_1^2}=\dfrac{-12-(\dfrac{1}{2}k_1+m_1)^2}{16-k_1^2}=\dfrac{n^2+12}{k_1^2-16}\)</span></p><p>于是<spanclass="math inline">\(|TA|\cdot|TB|=(1+k_1^2)\dfrac{n^2+12}{k_1^2-16}\)</span>，同理<spanclass="math inline">\(|TP|\cdot|TQ|=(1+k_2^2)\dfrac{n^2+12}{k_2^2-16}\)</span></p><p>故<spanclass="math inline">\(\dfrac{1+k_1^2}{k_1^2-16}=\dfrac{1+k_2^2}{k_2^2-16}\)</span>，即<spanclass="math inline">\(1+\dfrac{17}{k_1^2-16}=1+\dfrac{17}{k_2^2-16}\)</span>，</p><p>故<span class="math inline">\(k_1^2=k_2^2\)</span>，由于<spanclass="math inline">\(k_1\ne k_2\)</span>，则<spanclass="math inline">\(k_1=-k_2\)</span>，即<spanclass="math inline">\(k_1+k_2=0\)</span></p><p>方法二：设<spanclass="math inline">\(T(\dfrac{1}{2},n)\)</span>，直线<spanclass="math inline">\(AB\)</span>的参数方程为<spanclass="math inline">\(\begin{cases} x=\dfrac{1}{2}+t\cos\alpha\ \\y=n+t\sin\alpha \end{cases},t\)</span>为参数，与<spanclass="math inline">\(C\)</span>联立得</p><p><spanclass="math inline">\((16\cos^2\alpha-\sin^2\alpha)t^2+(16\cos\alpha-2n\sin\alpha)t-12-n^2=0\)</span></p><p>于是<spanclass="math inline">\(|TA|\cdot|TB|=t_1t_2=\dfrac{-n^2-12}{16\cos^2\alpha-\sin^2\alpha}=\dfrac{-n^2-12}{17\cos^2\alpha-1}\)</span></p><p>设直线<span class="math inline">\(PQ\)</span>的参数方程为<spanclass="math inline">\(\begin{cases} x=\dfrac{1}{2}+t\cos\beta\ \\y=n+t\sin\beta \end{cases},t\)</span>为参数</p><p>同理<spanclass="math inline">\(|TP|\cdot|TQ|=\dfrac{-n^2-12}{16\cos^2\beta-\sin^2\beta}=\dfrac{-n^2-12}{17\cos^2\beta-1}\)</span></p><p>于是<spanclass="math inline">\(\cos^2\alpha=\cos^2\beta\)</span>，由于<spanclass="math inline">\(\alpha\ne\beta\)</span>，则<spanclass="math inline">\(\alpha+\beta=\pi\)</span>，即<spanclass="math inline">\(AB\)</span>与<spanclass="math inline">\(PQ\)</span>的斜率之和为0</p><p>老教材《坐标系与参数方程》选修教材的例题（原例题是椭圆），出现在新高考挺尬的</p><p>22.已知函数<span class="math inline">\(f(x)=x(1-\ln x)\)</span></p><p>（1）讨论<span class="math inline">\(f(x)\)</span>的单调性；</p><p>（2）设<spanclass="math inline">\(a,b\)</span>为两个不相等的正数，且<spanclass="math inline">\(b\ln a-a\ln b=a-b\)</span>，证明：<spanclass="math inline">\(2&lt;\dfrac{1}{a}+\dfrac{1}{b}&lt;e\)</span></p><p>解：（1）<span class="math inline">\(f&#39;(x)=-\lnx\)</span>，则<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>单增，<spanclass="math inline">\((1,+\infty)\)</span>单减</p><p>（2）<span class="math inline">\(b\ln a-a\ln b=a-b\)</span>即<spanclass="math inline">\(\dfrac{1}{a}(1-\ln\dfrac{1}{a})=\dfrac{1}{b}(1-\ln\dfrac{1}{b})\)</span>，令<spanclass="math inline">\(x_1=\dfrac{1}{a},x_2=\dfrac{1}{b}\)</span></p><p>即<span class="math inline">\(f(x_1)=f(x_2)\)</span>，<spanclass="math inline">\(x_1\ne x_2\)</span>，证明：<spanclass="math inline">\(2&lt;x_1+x_2&lt;e\)</span></p><p>左侧证明为标准的极值点偏移问题，略，下证明右边</p><p>方法一：仿照极值点偏移的求解，统一变量构造函数</p><p>易知<spanclass="math inline">\(0&lt;x_1&lt;1&lt;x_2&lt;e\)</span>，只需证<spanclass="math inline">\(x_2&lt;e-x_1\)</span>，只需证<spanclass="math inline">\(f(x_2)&gt;f(e-x_1)\)</span>，即证<spanclass="math inline">\(f(x_1)&gt;f(e-x_1)\)</span></p><p>令<span class="math inline">\(g(x)=f(x)-f(e-x)=x(1-\lnx)-(e-x)(1-\ln(e-x))=2x-x\ln x+(e-x)\ln(e-x)-e,x\in(0,1)\)</span></p><p>则<spanclass="math inline">\(g&#39;(x)=-\ln(ex-x^2)\)</span>，记<spanclass="math inline">\(x_0\)</span>为<spanclass="math inline">\(ex-x^2=1\)</span>的小于1的根，则<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((0,x_0)\)</span>单增，<spanclass="math inline">\((x_0,\dfrac{e}{2})\)</span>单减</p><p>又<span class="math inline">\(x\rightarrow 0\)</span>时，<spanclass="math inline">\(g(x)\rightarrow 0\)</span>，结合<spanclass="math inline">\(g(x)&gt;g(\dfrac{e}{2})=0\)</span>知，<spanclass="math inline">\(g(x)&gt;0,x\in(0,1)\)</span>成立</p><p>如果想避免上述极限的写法，考虑对<spanclass="math inline">\(g(x)\)</span>的解析式进行变形，令<spanclass="math inline">\(h(x)=2-\lnx+\dfrac{e-x}{x}\ln(e-x)-\dfrac{e}{x}\)</span></p><p><spanclass="math inline">\(h&#39;(x)=-\dfrac{1}{x^2}[e\ln(e-x)+2x-e]\)</span>，令<spanclass="math inline">\(\varphi(x)=e\ln(e-x)+2x-e\)</span>，注意<spanclass="math inline">\(\varphi(0)=0\)</span></p><p><spanclass="math inline">\(\varphi&#39;(x)=\dfrac{2x-e}{x-e}\)</span>，当<spanclass="math inline">\(x\in(0,\dfrac{e}{2})\)</span>时，<spanclass="math inline">\(\varphi&#39;(x)&gt;0\)</span>，则<spanclass="math inline">\(\varphi(x)&gt;0\)</span>，即<spanclass="math inline">\(h&#39;(x)&lt;0\)</span>，故<spanclass="math inline">\(h(x)\)</span>在<spanclass="math inline">\((0,\dfrac{e}{2})\)</span>单减，则<spanclass="math inline">\(h(x)&gt;h(\dfrac{e}{2})=0\)</span></p><p>方法二：比值换元，统一变量</p><p>令<span class="math inline">\(x_2=tx_1\)</span>，即有<spanclass="math inline">\(\begin{cases}x_1(1-\ln x_1)=x_2(1-\ln x_2)\\x_2=tx_1 \end{cases}\)</span>，解得<span class="math inline">\(\lnx_1=1-\dfrac{t\ln t}{t-1}\)</span></p><p><span class="math inline">\(x_1+x_2&lt;e\)</span>，即证<spanclass="math inline">\((1+t)x_1&lt;e\)</span>，即证<spanclass="math inline">\(\ln(1+t)+\ln x_1&lt;1\)</span>，即证<spanclass="math inline">\(\ln(1+t)-\dfrac{t\lnt}{t-1}&lt;0\)</span>，即证<spanclass="math inline">\(\dfrac{\ln(t+1)}{t}&lt;\dfrac{\lnt}{t-1}\)</span>，</p><p>令<span class="math inline">\(g(t)=\dfrac{\lnt}{t-1}(t&gt;1)\)</span>，则<spanclass="math inline">\(g&#39;(t)=\dfrac{t-1-t\lnt}{t(t-1)}&lt;0\)</span>，于是<spanclass="math inline">\(g(t)\)</span>在<spanclass="math inline">\((1,+\infty)\)</span>单减，则<spanclass="math inline">\(g(t+1)&lt;g(t)\)</span>，得证</p><p>方法三：切线放缩</p><p><span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\(x=e\)</span>处的切线方程为<spanclass="math inline">\(y=-x+e\)</span>，</p><p>令<span class="math inline">\(g(x)=x(1-\ln x)+x-e=2x-x\lnx-e\)</span>，<span class="math inline">\(g&#39;(x)=1-\lnx\)</span>，于是<span class="math inline">\(g(x)\)</span>在<spanclass="math inline">\((0,e)\)</span>单增，<spanclass="math inline">\((e,+\infty)\)</span>单减，即<spanclass="math inline">\(g(x)\le g(e)=0\)</span></p><p>设<span class="math inline">\(x_1(1-\ln x_1)=x_2(1-\lnx_2)=-x_2&#39;+e\)</span>，由于<span class="math inline">\(x_2(1-\lnx_2)&lt;-x_2+e\)</span>，则<spanclass="math inline">\(x_2&lt;x_2&#39;\)</span></p><p>于是<spanclass="math inline">\(x_1+x_2&lt;x_1+x_2&#39;=x_1+[e-x_1(1-\lnx_1)]=e+x_1\ln x_1&lt;e\)</span>成立</p><p>方法四：割线放缩</p><p><span class="math inline">\(f(x)\)</span>经过<spanclass="math inline">\((0,0)\)</span>和<spanclass="math inline">\((1,1)\)</span>两点的割线方程为<spanclass="math inline">\(y=x\)</span></p><p>显然当<span class="math inline">\(x\in(0,1)\)</span>时，<spanclass="math inline">\(x(1-\ln x)&gt;x\)</span></p><p>设<span class="math inline">\(x_1(1-\ln x_1)=x_1&#39;=x_2(1-\lnx_2)\)</span>，由于<span class="math inline">\(x_1(1-\lnx_1)&gt;x_1\)</span>，则<spanclass="math inline">\(x_1&#39;&gt;x_1\)</span></p><p>于是<span class="math inline">\(x_1+x_2&lt;x_1&#39;+x_2=x_2(1-\lnx_2)+x_2=2x_2-x_2\ln x_2\)</span></p><p>令<span class="math inline">\(g(x)=2x-x\lnx,x\in(1,e)\)</span>，则<span class="math inline">\(g&#39;(x)=1-\lnx\)</span>，于是<span class="math inline">\(g(x)\)</span>在<spanclass="math inline">\((1,e)\)</span>单增</p><p>则<span class="math inline">\(g(x)&lt;g(e)=e\)</span>，即<spanclass="math inline">\(2x_2-x_2\ln x_2&lt;e\)</span>，得证</p><p>将法二和法三综合起来，切割线一起放缩：<spanclass="math inline">\(x_1+x_2&lt;x_1&#39;+x_2&#39;=e\)</span></p><p>事实上相当于用对称轴为<spanclass="math inline">\(x=\dfrac{e}{2}\)</span>的函数<spanclass="math inline">\(y=\dfrac{e}{2}-|x-\dfrac{e}{2}|\)</span>拟合了<spanclass="math inline">\(f(x)\)</span>，体现化曲为直的思想</p><p>娱乐一下：当然也可以考虑用对称轴为<spanclass="math inline">\(x=\dfrac{e}{2}\)</span>的二次函数拟合，利用待定系数得<spanclass="math inline">\(y=\dfrac{1}{1-e}(x-\dfrac{e}{2})^2+\dfrac{e^2}{4(e-1)}\)</span></p><p>方法五：野猪wj</p><p><span class="math inline">\(b\ln a-a\ln b=a-b\)</span>即<spanclass="math inline">\(\dfrac{1}{a}(1+\ln a)=\dfrac{1}{b}（1+\lnb)\)</span>，即<span class="math inline">\(\dfrac{1}{a}\lnea=\dfrac{1}{b}\ln eb\)</span>，即<spanclass="math inline">\(\dfrac{1}{ea}\ln \dfrac{1}{ea}=\dfrac{1}{eb}\ln\dfrac{1}{eb}\)</span></p><p>令<spanclass="math inline">\(\dfrac{1}{ea}=x_1,\dfrac{1}{eb}=x_2\)</span>，<spanclass="math inline">\(g(x)=x\ln x\)</span>，即<spanclass="math inline">\(g(x_1)=g(x_2)\)</span>，证明：<spanclass="math inline">\(\dfrac{2}{e}&lt;x_1+x_2&lt;1\)</span></p><p>这样同构的式子变化，使得函数解析式变得更加漂亮，下面证明类似略</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>高考题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高考题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Debian延迟1m30s启动的解决</title>
    <link href="/2021/06/03/Debian%E5%BB%B6%E8%BF%9F1m30s%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <url>/2021/06/03/Debian%E5%BB%B6%E8%BF%9F1m30s%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="问题现象">问题现象</h2><p>1.启动时显示 <span class="label label-danger">Assuming drive cache: write through</span> ，卡顿30秒以后，显示 <span class="label label-danger">Gave up waiting for suspend/resume device</span></p><p>2.然后又接着显示 <span class="label label-danger">A start job is running for /dev/disk/by-uuid...xxxx(1min 30s)</span> ，等待1min30s以后，才能进入系统</p><h2 id="问题原因">问题原因</h2><p>意思大概是说启动uuid是xxx的设备时，启动失败，通过<span class="label label-info">vim /etc/fstab</span>查看启动设备文件，发现uuid的设备是swap分区，不知怎么搞的，安装系统时安装的swap分区丢失，所以导致这样的错误发生<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># swap was on /dev/sda6 during installation</span><br><span class="hljs-attribute">UUID</span>=f<span class="hljs-number">68038</span>cb-b<span class="hljs-number">305</span>-<span class="hljs-number">451</span>a-<span class="hljs-number">8</span>c<span class="hljs-number">84</span>-<span class="hljs-number">4</span>dc<span class="hljs-number">6</span>bdb<span class="hljs-number">2</span>b<span class="hljs-number">3</span>b<span class="hljs-number">4</span> none    swap    sw      <span class="hljs-number">0</span>    <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></p><h2 id="问题解决">问题解决</h2><p>针对现象2，只需要将对应的启动设备注释掉 <figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># swap was on /dev/sda6 during installation</span><br><span class="hljs-meta"># UUID=f68038cb-b305-451a-8c84-4dc6bdb2b3b4 none    swap    sw      0    0</span><br></code></pre></td></tr></table></figure></p><p>重启发现现象1依旧</p><p>解决办法就是修改启动内核参数</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vala">vim /etc/<span class="hljs-keyword">default</span>/grub<br><span class="hljs-meta"># 找到</span><br>GRUB_CMDLINE_LINUX=<span class="hljs-string">&quot;quiet&quot;</span><br><span class="hljs-meta"># 修改成</span><br>GRUB_CMDLINE_LINUX=<span class="hljs-string">&quot;quiet noresume&quot;</span><br><span class="hljs-meta"># 然后</span><br>update-grub<br></code></pre></td></tr></table></figure><p>重启问题解决</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>debian</tag>
      
      <tag>swap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>试用Gist桌面客户端兼编辑器Lepton</title>
    <link href="/2021/06/03/%E8%AF%95%E7%94%A8Gist%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%85%BC%E7%BC%96%E8%BE%91%E5%99%A8Lepton/"/>
    <url>/2021/06/03/%E8%AF%95%E7%94%A8Gist%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%85%BC%E7%BC%96%E8%BE%91%E5%99%A8Lepton/</url>
    
    <content type="html"><![CDATA[<h2 id="lepton简介">Lepton简介</h2><p>Lepton is a lean code snippet manager based on GitHub Gist.</p><ul><li>Unlimited public/private snippets</li><li>Unlimited tags</li><li>Language groups</li><li>Markdown/JupyterNotebook support</li><li>GitHub Enterprise support</li><li>Immersive mode</li><li>Customizable</li><li>Light/Dark theme</li><li>macOS/Win/Linux</li><li>Dashboard</li><li>Search</li><li>Proxy</li><li>Free</li></ul><h2 id="仓库及windows-64位下载地址">仓库及windows 64位下载地址</h2><p><a href="https://github.com/hackjutsu/Lepton">Github仓库地址</a></p><p><ahref="https://github.com/hackjutsu/Lepton/releases/download/v1.9.2/Lepton-1.9.2-win.7z">windows64位下载地址</a></p><h2 id="自定配置">自定配置</h2><p>首先 <code>Ctrl + ,</code> 打开 <code>about</code>选项卡，在里面找到配置文件的路径，比如一般都是<code>C:\Users\xx\.leptonrc</code>，如果没有该文件，自己建一个，里面写入配置内容，配置内容示例如下，可根据需要自己调整</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;theme&quot;</span>: <span class="hljs-string">&quot;dark&quot;</span>,<br>    <span class="hljs-attr">&quot;autoUpdate&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">&quot;snippet&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;expanded&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">&quot;newSnippetPrivate&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">&quot;sorting&quot;</span>: <span class="hljs-string">&quot;updated_at&quot;</span>, <br>        <span class="hljs-attr">&quot;sortingReverse&quot;</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;editor&quot;</span> : &#123;<br>        <span class="hljs-attr">&quot;tabSize&quot;</span>: <span class="hljs-number">4</span>,<br>        <span class="hljs-attr">&quot;validateFilename&quot;</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;userPanel&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;hideProfilePhoto&quot;</span>: <span class="hljs-literal">false</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;logger&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;level&quot;</span>: <span class="hljs-string">&quot;debug&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;proxy&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;enable&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">&quot;address&quot;</span>: <span class="hljs-string">&quot;socks://localhost:1081&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;notifications&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;success&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">&quot;failure&quot;</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;shortcuts&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;keyShortcutForSearch&quot;</span>: <span class="hljs-string">&quot;CMD+F&quot;</span>,<br>        <span class="hljs-attr">&quot;keyNewGist&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+N&quot;</span>,<br>        <span class="hljs-attr">&quot;keyEditGist&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+E&quot;</span>,<br>        <span class="hljs-attr">&quot;keySubmitGist&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+S&quot;</span>,<br>        <span class="hljs-attr">&quot;keyImmersiveMode&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+I&quot;</span>,<br>        <span class="hljs-attr">&quot;keyAboutPage&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+,&quot;</span>,<br>        <span class="hljs-attr">&quot;keyDashboard&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+D&quot;</span>,<br>        <span class="hljs-attr">&quot;keyEditorExit&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+Escape&quot;</span>,<br>        <span class="hljs-attr">&quot;keySyncGists&quot;</span>: <span class="hljs-string">&quot;CommandOrControl+R&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;enterprise&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;enable&quot;</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">&quot;host&quot;</span>: <span class="hljs-string">&quot;github_enterprise_host&quot;</span>,<br>        <span class="hljs-attr">&quot;token&quot;</span>: <span class="hljs-string">&quot;token_with_gist_enabled&quot;</span>,<br>        <span class="hljs-attr">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;optional_avatar_url&quot;</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>"theme": "dark"</code> 主题选择了黑暗模式，也可以改为<code>"light"</code></p><p><code>"newSnippetPrivate": true</code> 表示默认新建gist为私有</p><p><code>"proxy"</code> 为开启状态</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gist</tag>
      
      <tag>lepton</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教学〔2020〕1号《教育部关于在部分高校开展基础学科招生改革试点工作的意见》</title>
    <link href="/2021/06/03/%E6%95%99%E5%AD%A6%E3%80%942020%E3%80%951%E5%8F%B7%E3%80%8A%E6%95%99%E8%82%B2%E9%83%A8%E5%85%B3%E4%BA%8E%E5%9C%A8%E9%83%A8%E5%88%86%E9%AB%98%E6%A0%A1%E5%BC%80%E5%B1%95%E5%9F%BA%E7%A1%80%E5%AD%A6%E7%A7%91%E6%8B%9B%E7%94%9F%E6%94%B9%E9%9D%A9%E8%AF%95%E7%82%B9%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%84%8F%E8%A7%81%E3%80%8B/"/>
    <url>/2021/06/03/%E6%95%99%E5%AD%A6%E3%80%942020%E3%80%951%E5%8F%B7%E3%80%8A%E6%95%99%E8%82%B2%E9%83%A8%E5%85%B3%E4%BA%8E%E5%9C%A8%E9%83%A8%E5%88%86%E9%AB%98%E6%A0%A1%E5%BC%80%E5%B1%95%E5%9F%BA%E7%A1%80%E5%AD%A6%E7%A7%91%E6%8B%9B%E7%94%9F%E6%94%B9%E9%9D%A9%E8%AF%95%E7%82%B9%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%84%8F%E8%A7%81%E3%80%8B/</url>
    
    <content type="html"><![CDATA[<h1id="教育部关于在部分高校开展基础学科招生改革试点工作的意见">教育部关于在部分高校开展基础学科招生改革试点工作的意见</h1><p>各省、自治区、直辖市高等学校招生委员会、教育厅(教委)，有关部门(单位)教育司(局)，部属有关高等学校：</p><p>为深入贯彻党的十九大和十九届二中、三中、四中全会精神，落实全国教育大会精神，服务国家重大战略需求，加强拔尖创新人才选拔培养，我部决定自2020年起，在部分高校开展基础学科招生改革试点（也称强基计划）。现就有关工作提出如下意见。</p><h2 id="一指导思想和原则">一、指导思想和原则</h2><p>以习近平新时代中国特色社会主义思想为指导，健全立德树人落实机制，探索多维度考核评价模式，着力实现学生成长、国家选才、社会公平的有机统一。服务国家战略，招收一批有志向、有兴趣、有天赋的青年学生进行专门培养，为国家重大战略领域输送后备人才。坚持育人为本，探索在招生中对学生进行全面、综合评价，转变简单以考试成绩评价学生的做法，引导中学更加重视学生成长过程，更加重视培养学生综合素质。加强统筹协调，与加快“双一流”建设、基础学科拔尖学生培养、加强科技创新等改革相衔接，形成改革合力。促进公平公正，着力完善制度规则，切实保障考试招生机会公平、程序公开、结果公正。</p><h2 id="二试点定位">二、试点定位</h2><p>强基计划主要选拔培养有志于服务国家重大战略需求且综合素质优秀或基础学科拔尖的学生。聚焦高端芯片与软件、智能科技、新材料、先进制造和国家安全等关键领域以及国家人才紧缺的人文社会科学领域，由有关高校结合自身办学特色，合理安排招生专业。要突出基础学科的支撑引领作用，重点在数学、物理、化学、生物及历史、哲学、古文字学等相关专业招生。建立学科专业的动态调整机制，根据新形势要求和招生情况，适时调整强基计划招生专业。</p><h2 id="三招生学校和规模">三、招生学校和规模</h2><p>起步阶段，在部分“一流大学”建设高校（见附件1）范围内遴选高校开展试点。相关高校可向我部申请并提交相关专业的招生和人才培养一体化方案。我部组织专家综合考虑高校的办学定位、人才培养质量、科研项目及平台建设情况、招生和人才培养方案等因素，按照“一校一策”的原则，研究确定强基计划招生高校、专业和规模。2020年起，不再组织开展高校自主招生工作。</p><p>高校要与各地教育部门充分沟通协商，统筹考虑国家政策与导向、招生定位和培养要求、各地高考综合改革进程以及中学素质教育推进情况等因素，合理确定在各省（区、市）的强基计划招生名额，并在各省（区、市）的分省计划中安排。</p><h2 id="四招生办法">四、招生办法</h2><p>在保证公平公正的前提下，探索建立多维度考核评价考生的招生模式。高校根据有关拔尖创新人才培养需要，制定强基计划的招生和培养方案。符合高校报考条件的考生可在高考前申请参加强基计划招生。高校依据考生的高考成绩，按在各省（区、市）强基计划招生名额的一定倍数确定参加高校考核的考生名单。考生参加统一高考和高校考核后，高校将考生高考成绩、高校综合考核结果及综合素质评价情况等按比例合成考生综合成绩（其中高考成绩所占比例不得低于85%），根据考生填报志愿，按综合成绩由高到低顺序录取。有关高校要认真研究制定高中学生综合素质评价使用办法，并在招生简章中提前向社会公布。</p><p>对于极少数在相关学科领域具有突出才能和表现的考生，有关高校可制定破格入围高校考核的条件和破格录取的办法、标准，并提前向社会公布。考生参加统一高考后，由高校组织相关学科领域专家对考生进行严格考核，达到录取标准的，经高校招生工作领导小组审定，报生源所在地省级高校招生委员会核准后予以破格录取。破格录取考生的高考成绩原则上不得低于各省（区、市）本科一批录取最低控制分数线（合并录取批次省份应单独划定相应分数线）。</p><h2 id="五培养模式">五、培养模式</h2><p>招生高校要对通过强基计划录取的学生制定单独人才培养方案和激励机制，增强学生的荣誉感和使命感。实施基础学科拔尖学生培养计划的高校，要加强对人才培养的统筹。对通过强基计划录取学生可单独编班，配备一流的师资，提供一流的学习条件，创造一流的学术环境与氛围，实行导师制、小班化等培养模式。畅通成长发展通道，对学业优秀的学生，高校可在免试推荐研究生、直博、公派留学、奖学金等方面予以优先安排。探索建立本—硕—博衔接的培养模式，本科阶段培养要夯实基础学科能力素养，硕博阶段既可在本学科深造，也可探索学科交叉培养。推进科教协同育人，鼓励国家实验室、国家重点实验室、前沿科学中心、集成攻关大平台和协同创新中心等吸纳这些学生参与项目研究，探索建立结合重大科研任务进行人才培养的机制。强化质量保障机制，建立科学化、多阶段的动态进出机制，对进入强基计划的学生进行综合考查、科学分流。建立在校生、毕业生跟踪调查机制和人才成长数据库，根据质量监测和反馈信息不断完善培养方案和培养模式，持续改进招生和培养工作。高校要加强对学生的就业教育和指导，积极为关键领域输送高素质后备人才。教育部将加强对强基计划的政策支持。</p><h2 id="六严格规范管理">六、严格规范管理</h2><p>高校强基计划招生工作全程接受本校纪委监督，并建立申诉途径和举报机制。严格组织高校考核，按照国家教育考试有关要求组织实施。笔试、面试安排在国家教育考试标准化考点进行，试题按机密级事项管理。面试采取专家、考生“双随机”抽签的方式，过程全程录音录像。完善信息公开公示，落实教育部、省级、校级三级信息公开制度，合理设置公开范围，规范公开内容，主动接受监督。严肃查处违规行为，对于违规违纪行为，按照《国家教育考试违规处理办法》《普通高等学校招生违规行为处理暂行办法》严肃处理。对于因疏于管理，造成考场秩序混乱、大规模舞弊、招生严重违规的高校，取消其强基计划招生资格，对相关责任人依法依规严肃处理并追责问责。</p><h2 id="七加强组织领导">七、加强组织领导</h2><p>实施强基计划是服务国家重大战略、选拔培养拔尖创新人才、深化高校考试招生制度改革的重要举措。各省（区、市）教育行政部门和有关高校要充分认识做好强基计划实施工作的重要意义，严格落实主体责任。有关省级高校招生委员会负责监督相关高校在本地开展强基计划录取工作。有关高校是本校强基计划实施工作的责任主体，高校主要负责同志要对本校有关考试招生和培养工作负总责。要统筹兼顾本校实际情况，深入研究，根据文件要求认真制定招生和培养方案，确保相关工作科学规范、公平公正、平稳有序。要加强宣传引导，深入细致地做好强基计划的宣传解读工作，积极开展面向考生和家长的政策咨询，及时回应社会关切，营造良好改革氛围。教育部将强基计划招生及人才培养工作纳入巡视和督导的工作范围，建立动态准入退出机制。</p><h2 id="附件1强基计划试点高校名单">附件1:强基计划试点高校名单</h2><p>北京大学、中国人民大学、清华大学、北京航空航天大学、北京理工大学、中国农业大学、北京师范大学、中央民族大学、南开大学、天津大学、大连理工大学、吉林大学、哈尔滨工业大学、复旦大学、同济大学、上海交通大学、华东师范大学、南京大学、东南大学、浙江大学、中国科学技术大学、厦门大学、山东大学、中国海洋大学、武汉大学、华中科技大学、中南大学、中山大学、华南理工大学、四川大学、重庆大学、电子科技大学、西安交通大学、西北工业大学、兰州大学、国防科技大学</p><h2id="附件2强基计划招生程序及管理要求">附件2：强基计划招生程序及管理要求</h2><h3 id="一制定招生简章">一、制定招生简章</h3><p>有关高校应根据本校的办学定位、学科特色等，制定强基计划招生简章，内容包括领导机构、招生专业及计划、报考条件及方式、入围高校考核的办法、考核程序及办法、学生综合素质评价使用办法、综合成绩折算办法及录取规则、监督机制、咨询及申诉渠道等。招生简章报经教育部核准备案后，于3月底前向社会公布。</p><h3 id="二考生申请报名">二、考生申请报名</h3><p>符合生源所在地当年高考报名条件以及强基计划招生学校报考条件的考生，由本人提出申请，于4月份按高校招生简章要求进行网上报名。省级招生考试机构要对本地报名考生的高考报名资格进行严格审核。</p><h3 id="三考生参加统一高考">三、考生参加统一高考</h3><p>报名考生均须参加全国统一高考。各省级招生考试机构原则上于6月25日前根据高校招生简章确定的规则，向有关高校提供报名考生高考成绩（不含高考加分）。</p><h3id="四确定入围高校考核名单并公示">四、确定入围高校考核名单并公示</h3><p>对于以高考成绩入围高校考核的，有关高校在各省（区、市）本科一批录取最低控制分数线（合并录取批次省份应单独划定相应分数线，下同）上，按照在生源所在省份强基计划招生名额的一定倍数，以考生高考成绩从高到低确定参加高校考核名单。</p><p>对于符合高校破格入围条件的考生，考生高考成绩应达到高校招生简章确定的要求，且原则上不得低于各省（区、市）本科一批录取最低控制分数线。</p><p>有关高校原则上应于6月26日前确定入围高校考核的考生名单并公示入围标准。</p><h3 id="五组织高校考核">五、组织高校考核</h3><p>有关高校于7月4日前完成对入围考生组织高校考核（含笔试、面试）和体育测试，其中体育测试结果作为录取的重要参考。</p><p>高校考核是国家教育考试的组成部分，由招生高校负责组织实施。有关高校要严格执行教育部关于特殊类型考试招生工作相关规定，合理确定高校考核的内容和形式。积极探索通过笔试、面试、实践操作等方式，考查学生分析问题、解决问题的能力和创新思维，增强选才的科学性。要充分运用学生综合素质档案，全面、深入地考察学生的能力和素养。要加强命题安全管理和质量管理，加强面试专家等相关人员名单的安全保密，认真执行回避制度。高校考核的笔试、面试应安排在国家教育考试标准化考点进行，面试采取专家、考生“双随机”抽签的方式，全程录音录像。</p><p>考生综合素质档案由省级教育行政部门或中学根据入围高校考核的考生名单于6月27日前提供。已建立省级统一信息平台的省份，由省级教育行政部门统一将考生电子化的综合素质档案提供招生高校。未建立省级统一信息平台的省份，由考生就读中学提供经中学校长签字确认的综合素质档案。综合素质档案须提前在考生就读中学详尽公示。</p><h3 id="六确定录取名单并公示">六、确定录取名单并公示</h3><p>有关高校将考生高考成绩、高校综合考核结果及综合素质评价情况等按比例合成考生综合成绩（其中高考成绩所占比例不得低于85%），并根据考生填报志愿，按综合成绩由高到低确定录取名单，提交生源所在省级招办办理录取手续。各省级招办应在提前批次录取开始前完成录取备案。破格录取的考生，按照高校招生简章公布办法进行录取。被录取考生不再参加后续高考志愿录取。有关高校须于7月5日前确定录取考生名单并公示录取标准。</p><h3id="七严格遵守强基计划招生十严禁">七、严格遵守强基计划招生“十严禁”</h3><p>高校不得发布未经教育部备案的强基计划招生简章或进行虚假招生宣传；</p><p>不得以任何形式组织与强基计划招生挂钩的冬令营、夏令营及考核工作，或委托个人或中介组织开展报名、考核等有关工作；</p><p>高校招生工作人员、专家评委不得参与社会机构组织的各类培训、辅导活动；</p><p>不得以“新生高额奖学金”“入校后重新选择专业”等方式进行恶性生源竞争或向考生违规承诺录取；</p><p>未经批准不得突破强基计划的招生计划录取；</p><p>不得在发放新生录取通知书或新生入学报到环节更改考生录取专业；</p><p>通过强基计划录取的学生入校后原则上不得转到相关学科之外的专业就读。</p><p>省级高校招生委员会和省级教育行政部门不得擅自扩大强基计划招生高校范围或出台与国家招生政策相抵触的招生办法。</p><p>省级招生考试机构不得为不符合要求的考生或违反规定程序办理录取手续。</p><p>有关中学等不得出具与事实不符的考生推荐材料、证明材料等或在考生综合素质档案中虚构事实或故意隐瞒事实。</p><h2 id="原文件">原文件</h2><p><imgsrc="https://gitee.com/andypl/imagehost/raw/master/img/1.jpeg" /> <imgsrc="https://gitee.com/andypl/imagehost/raw/master/img/2jpeg.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/3.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/4.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/5.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/6.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/7.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/8.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/9.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/10.jpeg" /><img src="https://gitee.com/andypl/imagehost/raw/master/img/11.jpeg" /><imgsrc="https://gitee.com/andypl/imagehost/raw/master/img/12.jpeg" /></p>]]></content>
    
    
    <categories>
      
      <category>其它</category>
      
    </categories>
    
    
    <tags>
      
      <tag>强基计划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装JupyterNotebook</title>
    <link href="/2021/06/02/docker%E5%AE%89%E8%A3%85JupyterNotebook/"/>
    <url>/2021/06/02/docker%E5%AE%89%E8%A3%85JupyterNotebook/</url>
    
    <content type="html"><![CDATA[<h2 id="在docker中安装">在docker中安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 映射容器内jupyter的工作目录</span><br>mkdir <span class="hljs-regexp">/home/</span>jupyter<br><span class="hljs-comment"># 给jupyter写入文件夹的权限</span><br>chmod <span class="hljs-number">777</span> <span class="hljs-regexp">/home/</span>jupyter<br><span class="hljs-comment"># 映射端口和文件夹，安装科学计算高大全版本，有6个G吧</span><br>docker run -d -v <span class="hljs-regexp">/home/</span>jupyter:<span class="hljs-regexp">/home/</span>jovyan<span class="hljs-regexp">/work --name=jupyter -p 13579:8888 jupyter/</span>datascience-notebook<br><span class="hljs-comment"># 或者安装基本版本</span><br>docker run -d -v <span class="hljs-regexp">/home/</span>jupyter:<span class="hljs-regexp">/home/</span>jovyan<span class="hljs-regexp">/work --name=jupyter -p 13579:8888 jupyter/</span>base-notebook<br></code></pre></td></tr></table></figure><p>访问浏览器地址：127.0.0.1:13579（同时支持远程访问），会进入jupyter页面，首次需要输入token。</p><p>获取token的方法是 <code>docker logs jupyter</code>,然后会看到token字样。</p><p>从jupyter5开始，可以通过命令设置密码，首先<code>docker exec -it jupyter /bin/bash</code>连接jupyter的终端，然后<code>jupyter notebook password</code>，输入两次密码后，今后就默认启用密码登录jupyter了，不然每次都要输入token，重启容器生效</p><h2 id="安装主题及设置文字样式大小">安装主题及设置文字样式大小</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># install jupyterthemes</span><br>pip <span class="hljs-keyword">install </span><span class="hljs-keyword">jupyterthemes</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>upgrade to latest version<br>pip <span class="hljs-keyword">install </span>--upgrade <span class="hljs-keyword">jupyterthemes</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>查看可用主题<br><span class="hljs-keyword">jt </span>-l<br><br><span class="hljs-comment"># 查看jt帮助</span><br><span class="hljs-keyword">jt </span>--help<br><br><span class="hljs-comment"># 个性化设置示例</span><br><span class="hljs-keyword">jt </span>-t onedork -f roboto -fs <span class="hljs-number">14</span> -nfs <span class="hljs-number">14</span> -tfs <span class="hljs-number">14</span> -ofs <span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><p>重启容器生效</p><h2 id="安装插件">安装插件</h2><p>首先连接jupyter终端<code>docker exec -it jupyter /bin/bash</code></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 安装</span><br>pip <span class="hljs-keyword">install </span><span class="hljs-keyword">jupyter_contrib_nbextensions</span><br><span class="hljs-keyword"> </span><br><span class="hljs-comment"># 配置</span><br><span class="hljs-keyword">jupyter </span>contrib nbextension <span class="hljs-keyword">install </span>--user --skip-running-check<br></code></pre></td></tr></table></figure><p>设置好开启的插件以后，重启容器生效，推荐开启 <code>Gist-it</code> 和<code>Hinterland</code> 插件</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>jupyter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Selenium通过屏幕坐标定位</title>
    <link href="/2021/05/26/Selenium%E9%80%9A%E8%BF%87%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E5%AE%9A%E4%BD%8D/"/>
    <url>/2021/05/26/Selenium%E9%80%9A%E8%BF%87%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E5%AE%9A%E4%BD%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="示例代码">示例代码</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver <span class="hljs-keyword">import</span> ActionChains<br><span class="hljs-keyword">from</span> <span class="hljs-type">time</span> <span class="hljs-keyword">import</span> sleep<br>dr = webdriver.Edge()<br><br>dr.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>dr.maximize_window()<br><br>def click_locxy(dr, x, y):<br>    ActionChains(dr).move_by_offset(x, y).click().<span class="hljs-keyword">perform</span>()<br>    ActionChains(dr).move_by_offset(-x, -y).<span class="hljs-keyword">perform</span>()<br><br>sleep(<span class="hljs-number">5</span>)<br>click_locxy(dr, <span class="hljs-number">640</span>, <span class="hljs-number">400</span>)<br>sleep(<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>selenium</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Selenium Python 教程</title>
    <link href="/2021/05/25/Selenium-Python-%E6%95%99%E7%A8%8B/"/>
    <url>/2021/05/25/Selenium-Python-%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><p>1.安装 <code>selenium</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> selenium<br></code></pre></td></tr></table></figure><p>2.下载浏览器驱动</p><p>Firefox浏览器驱动：geckodriver</p><p>Chrome浏览器驱动：chromedriver , taobao备用地址</p><p>IE浏览器驱动：IEDriverServer</p><p>Edge浏览器驱动：MicrosoftWebDriver</p><p>Opera浏览器驱动：operadriver</p><p>PhantomJS浏览器驱动：phantomjs</p><p><strong>需要把浏览器驱动放入系统路径中，或者直接告知selenuim的驱动路径</strong></p><p>3.简单示例：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nix">from selenium <span class="hljs-built_in">import</span> webdriver<br><br><br><span class="hljs-attr">driver</span> = webdriver.Firefox()   <span class="hljs-comment"># Firefox浏览器</span><br><span class="hljs-comment"># driver = webdriver.Firefox(&quot;驱动路径&quot;)</span><br><br><span class="hljs-attr">driver</span> = webdriver.Chrome()    <span class="hljs-comment"># Chrome浏览器</span><br><br><span class="hljs-attr">driver</span> = webdriver.Ie()        <span class="hljs-comment"># Internet Explorer浏览器</span><br><br><span class="hljs-attr">driver</span> = webdriver.Edge()      <span class="hljs-comment"># Edge浏览器</span><br><br><span class="hljs-attr">driver</span> = webdriver.Opera()     <span class="hljs-comment"># Opera浏览器</span><br><br><span class="hljs-attr">driver</span> = webdriver.PhantomJS()   <span class="hljs-comment"># PhantomJS</span><br><br><span class="hljs-comment"># 打开网页</span><br>driver.get(url) <span class="hljs-comment"># 打开url网页 比如 driver.get(&quot;http://www.baidu.com&quot;)</span><br></code></pre></td></tr></table></figure><h2 id="元素定位">元素定位</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">find_element_by_id</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_name</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_class_name</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_tag_name</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_link_text</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_partial_link_text</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_xpath</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">find_element_by_css_selector</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><p>** 浏览器中选择元素后，右键Copy可以选择获取到selector和xpath **</p><h2 id="控制浏览器操作">控制浏览器操作</h2><ul><li>控制浏览器窗口大小</li></ul><p><code>driver.set_window_size(768,1024)</code></p><ul><li>浏览器前进后退</li></ul><p><code>driver.back()</code></p><p><code>driver.forward()</code></p><ul><li>刷新</li></ul><p><code>driver.refresh()</code></p><h2 id="webelement常用方法">Webelement常用方法</h2><ul><li>点击和输入</li></ul><p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">driver</span><span class="hljs-selector-class">.find_element_by_id</span>(<span class="hljs-string">&quot;kw&quot;</span>)<span class="hljs-selector-class">.clear</span>() # 清除文本       <span class="hljs-selector-tag">driver</span><span class="hljs-selector-class">.find_element_by_id</span>(<span class="hljs-string">&quot;kw&quot;</span>)<span class="hljs-selector-class">.send_keys</span>(<span class="hljs-string">&quot;selenium&quot;</span>) # 模拟按键输入  <span class="hljs-selector-tag">driver</span><span class="hljs-selector-class">.find_element_by_id</span>(<span class="hljs-string">&quot;su&quot;</span>)<span class="hljs-selector-class">.click</span>() # 点击元素<br></code></pre></td></tr></table></figure></p><ul><li>提交</li></ul><p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">search_text = driver<span class="hljs-selector-class">.find_element_by_id</span>(<span class="hljs-string">&#x27;kw&#x27;</span>) search_text<span class="hljs-selector-class">.send_keys</span>(<span class="hljs-string">&#x27;selenium&#x27;</span>) search_text<span class="hljs-selector-class">.submit</span>()<br></code></pre></td></tr></table></figure></p><ul><li>其它</li></ul><p><strong>size</strong>：返回元素的尺寸</p><p><strong>text</strong>：返回元素的文本</p><p><strong>get_attribute(name)</strong>：获得属性值</p><p><strong>id_displayed()</strong>：设置该元素是否用户可见</p><h2 id="鼠标操作">鼠标操作</h2><p>在 WebDriver 中， 将这些关于鼠标操作的方法封装在 ActionChains类提供。</p><p>ActionChains 类提供了鼠标操作的常用方法：</p><ul><li>perform():执行所有ActionChains中存储的行为</li><li>context_click():右击</li><li>double_click():双击</li><li>drag_and_drop():拖动</li><li>move_to_element():鼠标悬停</li></ul><p>例如： <figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br># 引入 ActionChains 类<br><span class="hljs-keyword">from</span> selenium.webdriver.common.action_chains <span class="hljs-keyword">import</span> ActionChains<br><br>driver = webdriver.Edge()<br>driver.<span class="hljs-keyword">get</span>(&quot;https://www.baidu.cn&quot;)<br><br># 定位到要悬停的元素<br>above = driver.find_element_by_link_text(&quot;设置&quot;)<br># 对定位到的元素执行鼠标悬停操作<br>ActionChains(driver).move_to_element(above).<span class="hljs-keyword">perform</span>()<br></code></pre></td></tr></table></figure></p><h2 id="键盘事件">键盘事件</h2><p>以下为常用的键盘操作：</p><ul><li>send_keys(Keys.BACK_SPACE) 删除键</li><li>send_keys(Keys.SPACE) 空格键</li><li>send_keys(Keys.TAB) 制表键</li><li>send_keys(Keys.ESCAPE) 回退键</li><li>send_keys(Keys.ENTER) 回车键</li><li>send_keys(Keys.CONTROL,'a') 全选</li><li>send_keys(Keys.CONTROL,'c') 复制</li><li>send_keys(Keys.CONTROL,'x') 剪切</li><li>send_keys(Keys.CONTROL,'v') 粘贴</li><li>send_keys(Keys.F1) 键盘 F1</li></ul><h2 id="获取断言信息">获取断言信息</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">title</span> = driver.title <span class="hljs-comment"># 打印当前页面title</span><br><span class="hljs-attr">now_url</span> = driver.current_url <span class="hljs-comment"># 打印当前页面URL</span><br><span class="hljs-attr">user</span> = driver.find_element_by_class_name(<span class="hljs-string">&#x27;nums&#x27;</span>).text <span class="hljs-comment"># # 获取结果数目</span><br></code></pre></td></tr></table></figure><h2 id="等待页面加载完成">等待页面加载完成</h2><ul><li>显示等待</li></ul><p>显式等待使WebdDriver等待某个条件成立时继续执行，否则在达到最大时长时抛出超时异常（TimeoutException）。</p><p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus"> from selenium import webdriver<br>from selenium<span class="hljs-selector-class">.webdriver</span><span class="hljs-selector-class">.common</span><span class="hljs-selector-class">.by</span> import By<br>from selenium<span class="hljs-selector-class">.webdriver</span><span class="hljs-selector-class">.support</span><span class="hljs-selector-class">.ui</span> import WebDriverWait<br>from selenium<span class="hljs-selector-class">.webdriver</span><span class="hljs-selector-class">.support</span> import expected_conditions as EC<br>driver = webdriver<span class="hljs-selector-class">.Edge</span>()<br>driver<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&quot;http://www.baidu.com&quot;</span>)<br>element = WebDriverWait(driver, <span class="hljs-number">5</span>, <span class="hljs-number">0.5</span>)<span class="hljs-selector-class">.until</span>(<br>                      EC<span class="hljs-selector-class">.presence_of_element_located</span>((By<span class="hljs-selector-class">.ID</span>, <span class="hljs-string">&quot;kw&quot;</span>))<br>                      )<br>element<span class="hljs-selector-class">.send_keys</span>(<span class="hljs-string">&#x27;selenium&#x27;</span>)<br>driver<span class="hljs-selector-class">.quit</span>()<br></code></pre></td></tr></table></figure> WebDriverWait类是由WebDirver提供的等待方法。在设置时间内，默认每隔一段时间检测一次当前页面元素是否存在，如果超过设置时间检测不到则抛出异常。具体格式如下：</p><p><code>WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None)</code></p><ul><li><p>driver ：浏览器驱动。</p></li><li><p>timeout ：最长超时时间，默认以秒为单位。</p></li><li><p>poll_frequency ：检测的间隔（步长）时间，默认为0.5S。</p></li><li><p>ignored_exceptions：超时后的异常信息，默认情况下抛NoSuchElementException异常。</p></li><li><p>WebDriverWait()一般由until()或until_not()方法配合使用，下面是until()和until_not()方法的说明。</p></li><li><p>until(method, message=‘’)调用该方法提供的驱动程序作为一个参数，直到返回值为True。</p></li><li><p>until_not(method, message=‘’)调用该方法提供的驱动程序作为一个参数，直到返回值为False。</p></li><li><p>在本例中，通过as关键字将expected_conditions重命名为EC，并调用presence_of_element_located()方法判断元素是否存在。</p></li><li><p>隐式等待</p></li></ul><p>如果某些元素不是立即可用的，隐式等待是告诉WebDriver去等待一定的时间后去查找元素。默认等待时间是0秒，一旦设置该值，隐式等待是设置该WebDriver的实例的生命周期。</p><p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sqf"> <span class="hljs-keyword">from</span> selenium import webdriver<br><span class="hljs-built_in">driver</span> = webdriver.Edge()    <br><span class="hljs-built_in">driver</span>.implicitly_wait(<span class="hljs-number">10</span>) <span class="hljs-meta"># seconds    </span><br><span class="hljs-built_in">driver</span>.get(<span class="hljs-string">&quot;http://somedomain/url_that_delays_loading&quot;</span>)    <br>myDynamicElement = <span class="hljs-built_in">driver</span>.find_element_by_id(<span class="hljs-string">&quot;myDynamicElement&quot;</span>) <br></code></pre></td></tr></table></figure></p><h2 id="在不同的窗口和框架之间移动">在不同的窗口和框架之间移动</h2><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">driver.<span class="hljs-keyword">switch</span><span class="hljs-number">_</span>to<span class="hljs-number">_</span>window(<span class="hljs-string">&quot;windowName&quot;</span>)<br>driver.<span class="hljs-keyword">switch</span><span class="hljs-number">_</span>to<span class="hljs-number">_f</span>rame(<span class="hljs-string">&quot;frameName&quot;</span>)<br></code></pre></td></tr></table></figure><p>以直接取表单的id或name属性。如果iframe没有可用的id和name属性，则可以通过下面的方式进行定位:<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">#先通过xpth定位到iframe<br>xf = driver.find<span class="hljs-constructor">_element_by_xpath(&#x27;<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-operator">*</span>[@<span class="hljs-params">id</span>=<span class="hljs-string">&quot;x-URS-iframe&quot;</span>]&#x27;)</span><br><br>#再将定位对象传给switch<span class="hljs-constructor">_to_frame()</span>方法<br>driver.switch<span class="hljs-constructor">_to_frame(<span class="hljs-params">xf</span>)</span><br></code></pre></td></tr></table></figure> 一旦我们完成了frame中的工作，我们可以这样返回父frame:<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">driver.<span class="hljs-keyword">switch</span><span class="hljs-number">_</span>to<span class="hljs-number">_</span><span class="hljs-keyword">default</span><span class="hljs-number">_</span>content()<br></code></pre></td></tr></table></figure></p><h2 id="警告框处理">警告框处理</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">alert</span> = driver.switch_to_alert()<br></code></pre></td></tr></table></figure><ul><li><p>text：返回 alert/confirm/prompt 中的文字信息。</p></li><li><p>accept()：接受现有警告框。</p></li><li><p>dismiss()：解散现有警告框。</p></li><li><p>send_keys(keysToSend)：发送文本至警告框。keysToSend：将文本发送至警告框。</p></li></ul><h2 id="下拉框选择">下拉框选择</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.support.<span class="hljs-keyword">select</span> <span class="hljs-keyword">import</span> <span class="hljs-keyword">Select</span><br><span class="hljs-keyword">from</span> <span class="hljs-type">time</span> <span class="hljs-keyword">import</span> sleep<br><br>driver = webdriver.Chrome()<br>driver.implicitly_wait(<span class="hljs-number">10</span>)<br>driver.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span>)<br>sel = driver.find_element_by_xpath(&quot;//select[@id=&#x27;nr&#x27;]&quot;)<br><span class="hljs-keyword">Select</span>(sel).select_by_value(<span class="hljs-string">&#x27;50&#x27;</span>)  # 显示<span class="hljs-number">50</span>条<br></code></pre></td></tr></table></figure><h2 id="文件上传">文件上传</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">driver.find<span class="hljs-constructor">_element_by_name(<span class="hljs-string">&quot;file&quot;</span>)</span>.send<span class="hljs-constructor">_keys(&#x27;D:\\<span class="hljs-params">upload_file</span>.<span class="hljs-params">txt</span>&#x27;)</span>  # 定位上传按钮，添加本地文件<br></code></pre></td></tr></table></figure><h2 id="cookies操作">Cookies操作</h2><p>WebDriver操作cookie的方法：</p><ul><li>get_cookies()： 获得所有cookie信息。</li><li>get_cookie(name)： 返回字典的key为“name”的cookie信息。</li><li>add_cookie(cookie_dict) ：添加cookie。“cookie_dict”指字典对象，必须有name 和value 值。</li><li>delete_cookie(name,optionsString)：删除cookie信息。“name”是要删除的cookie的名称，“optionsString”是该cookie的选项，目前支持的选项包括“路径”，“域”。</li><li>delete_all_cookies()： 删除所有cookie信息</li></ul><h2 id="调用javascript代码">调用JavaScript代码</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs makefile">js=<span class="hljs-string">&quot;window.scrollTo(100,450);&quot;</span><br>driver.execute_script(js) <span class="hljs-comment"># 通过javascript设置浏览器窗口的滚动条位置</span><br></code></pre></td></tr></table></figure><h2 id="窗口截图">窗口截图</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">driver.get_screenshot_as_file(<span class="hljs-string">&quot;D:\\baidu_img.jpg&quot;</span>) <span class="hljs-meta"># 截取当前窗口，并指定截图图片的保存位置</span><br></code></pre></td></tr></table></figure><h2 id="关闭浏览器">关闭浏览器</h2><ul><li>close() 关闭单个标签</li><li>quit() 关闭所有标签</li></ul><h2 id="直接用cookie登录方法">直接用cookie登录方法</h2><p>https://www.jianshu.com/p/773c58406bdb</p><h2 id="原文链接">原文链接</h2><p>https://zhuanlan.zhihu.com/p/111859925</p><p>https://selenium-python-zh.readthedocs.io/en/latest/navigating.html</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>selenium</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>端点函数值为零求导不要停</title>
    <link href="/2021/05/24/%E7%AB%AF%E7%82%B9%E5%87%BD%E6%95%B0%E5%80%BC%E4%B8%BA%E9%9B%B6%EF%BC%8C%E6%B1%82%E5%AF%BC%E4%B8%8D%E8%A6%81%E5%81%9C-1/"/>
    <url>/2021/05/24/%E7%AB%AF%E7%82%B9%E5%87%BD%E6%95%B0%E5%80%BC%E4%B8%BA%E9%9B%B6%EF%BC%8C%E6%B1%82%E5%AF%BC%E4%B8%8D%E8%A6%81%E5%81%9C-1/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p><spanclass="label label-danger">庆祝剑群周题100期导数100-1</span>已知函数<spanclass="math inline">\(f(x)=(2+x+ax^2)\ln(1+x)-2x\)</span></p><p>（1）若<span class="math inline">\(a=0\)</span>，证明：当<spanclass="math inline">\(-1&lt;x&lt;0\)</span>时，<spanclass="math inline">\(f(x)&lt;0\)</span>；当<spanclass="math inline">\(x&gt;0\)</span>时，<spanclass="math inline">\(f(x)&gt;0\)</span></p><p>（2）若<span class="math inline">\(x=0\)</span>是<spanclass="math inline">\(f(x)\)</span>的极大值点，求<spanclass="math inline">\(a\)</span>的值</p>          </div><div class="note note-primary">            <p>（1）证明：<spanclass="math inline">\(f(x)=(2+x)\ln(1+x)-2x\)</span>，令<spanclass="math inline">\(g(x)=\ln(1+x)-\dfrac{2x}{2+x}\)</span></p><p>则<spanclass="math inline">\(g&#39;(x)=\dfrac{x^2}{(x+1)(x+2)}\ge0\)</span>，于是<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((-1,+\infty)\)</span>单增，又<spanclass="math inline">\(g(0)=0\)</span>，</p><p>则当<span class="math inline">\(-1&lt;x&lt;0\)</span>时，<spanclass="math inline">\(f(x)=(2+x)g(x)&lt;0\)</span>；当<spanclass="math inline">\(x&gt;0\)</span>时，<spanclass="math inline">\(f(x)=(2+x)g(x)&gt;0\)</span></p><p>（2）<spanclass="math inline">\(f&#39;(x)=(2ax+1)\ln(x+1)+\dfrac{ax^2-x}{x+1},f&#39;(0)=0\)</span></p><p><spanclass="math inline">\(f&#39;&#39;(x)=2a\ln(x+1)+\dfrac{3ax^2+(4a+1)x}{(x+1)^2},f&#39;&#39;(0)=0\)</span></p><p><spanclass="math inline">\(f&#39;&#39;&#39;(x)=\dfrac{2ax^2+(6a-1)x+6a+1}{(x+1)^3},f&#39;&#39;&#39;(0)=6a+1\)</span></p><p>情形一：<span class="math inline">\(a\ge0\)</span>时</p><p><span class="math inline">\(\forall x\ge0\)</span>，<spanclass="math inline">\(f&#39;&#39;(x)\ge0\)</span>，则<spanclass="math inline">\(f&#39;(x)\)</span>在<spanclass="math inline">\([0,+\infty)\)</span>单增，于是<spanclass="math inline">\(f&#39;(x)\ge0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\([0,+\infty)\)</span>单增，则<spanclass="math inline">\(x=0\)</span>不是极大值点</p><p>情形二：<span class="math inline">\(a&lt;0\)</span>时</p><p>记<spanclass="math inline">\(h(x)=2ax^2+(6a-1)x+6a+1\)</span>，对称轴<spanclass="math inline">\(x=-\dfrac{3}{2}+\dfrac{1}{4a}&lt;-1\)</span>，分以下四种i情况讨论：</p><p>①若<span class="math inline">\(h(0)=6a+1=0\)</span>，即<spanclass="math inline">\(a=-\dfrac{1}{6}\)</span>时，<spanclass="math inline">\(x\in(-1,0)\)</span>时，<spanclass="math inline">\(h(x)&gt;0\)</span>，即<spanclass="math inline">\(f&#39;&#39;&#39;(x)&gt;0\)</span>，则<spanclass="math inline">\(f&#39;&#39;(x)\)</span>单增，<spanclass="math inline">\(f&#39;&#39;(x)&lt;0\)</span>，于是 <spanclass="math inline">\(f&#39;(x)\)</span>单减，<spanclass="math inline">\(f&#39;(x)&gt;0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-1,0)\)</span>单增；<spanclass="math inline">\(x\in(0,+\infty)\)</span>时，<spanclass="math inline">\(h(x)&lt;0\)</span>，即<spanclass="math inline">\(f&#39;&#39;&#39;(x)&lt;0\)</span>，同理可得<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>单减，于是<spanclass="math inline">\(x=0\)</span>是<spanclass="math inline">\(f(x)\)</span>的极大值点</p><p>②若<span class="math inline">\(h(0)=6a+1&gt;0\)</span>，即<spanclass="math inline">\(-\dfrac{1}{6}&lt;a&lt;0\)</span>时，<spanclass="math inline">\(\exists x_0\in(0,+\infty)\)</span>使得<spanclass="math inline">\(h(x_0)=0\)</span>，则<spanclass="math inline">\(x\in(0,x_0)\)</span>时，<spanclass="math inline">\(h(x)&gt;0\)</span>，即<spanclass="math inline">\(f&#39;&#39;&#39;(x)&gt;0\)</span>，于是<spanclass="math inline">\(f&#39;&#39;(x)\)</span>单增，则<spanclass="math inline">\(f&#39;&#39;(x)&gt;0\)</span>，于是<spanclass="math inline">\(f&#39;(x)\)</span>单增，则<spanclass="math inline">\(f&#39;(x)&gt;0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,x_0)\)</span>单增，则<spanclass="math inline">\(x=0\)</span>不是极大值点</p><p>③若<span class="math inline">\(h(0)=6a+1&lt;0\)</span>且<spanclass="math inline">\(h(-1)=2a+2&gt;0\)</span>，即<spanclass="math inline">\(-1&lt;a&lt;-\dfrac{1}{6}\)</span>时，<spanclass="math inline">\(\exists x_1\in(-1,0)\)</span>使得<spanclass="math inline">\(h(x_1)=0\)</span>，则<spanclass="math inline">\(x\in(x_1,0)\)</span>时，<spanclass="math inline">\(h(x)&lt;0\)</span>，即<spanclass="math inline">\(f&#39;&#39;&#39;(x)&lt;0\)</span>，与②同理可得<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((x_1,0)\)</span>单减，则<spanclass="math inline">\(x=0\)</span>不是极大值点</p><p>④若<span class="math inline">\(h(-1)=2a+2\le0\)</span>，即<spanclass="math inline">\(a\le-1\)</span>时，<spanclass="math inline">\(x\in(-1,0)\)</span>时，<spanclass="math inline">\(h(x)&lt;0\)</span>，即<spanclass="math inline">\(f&#39;&#39;&#39;(x)&lt;0\)</span>，同③可得<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-1,0)\)</span>单减，则<spanclass="math inline">\(x=0\)</span>不是极大值点</p><p>综上，<span class="math inline">\(a=-\dfrac{1}{6}\)</span></p><p align="right"><code>pl</code></p>          </div><div class="note note-info">            <p><spanclass="label label-danger">庆祝剑群周题100期导数100-2</span>已知函数<spanclass="math inline">\(f(x)=\ln x+ax^2+(2a+1)x\)</span></p><p>（1）讨论<spanclass="math inline">\(f(x)\)</span>的单调性；（2）当<spanclass="math inline">\(a&lt;0\)</span>时，证明：<spanclass="math inline">\(f(x)\le-\dfrac{3}{4a}-2\)</span></p>          </div><div class="note note-primary">            <p>（1）解：<spanclass="math inline">\(f&#39;(x)=\dfrac{2ax^2+(2a+1)x+1}{x},x&gt;0\)</span></p><p>当<span class="math inline">\(a\ge0\)</span>时，<spanclass="math inline">\(f&#39;(x)&gt;0\)</span>，则<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,+\infty)\)</span>单增；</p><p>当<span class="math inline">\(a&lt;0\)</span>时，<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,-\dfrac{1}{2a})\)</span>单增，<spanclass="math inline">\((-\dfrac{1}{2a},+\infty)\)</span>单减</p><p>（2）由（1）知<spanclass="math inline">\(f(x)_{\max}=f(-\dfrac{1}{2a})=\ln(-\dfrac{1}{2a})-\dfrac{1}{4a}-1\)</span></p><p>则<spanclass="math inline">\(\ln(-\dfrac{1}{2a})-\dfrac{1}{4a}-1\le-\dfrac{3}{4a}-2\)</span>等价于<spanclass="math inline">\(\ln(-\dfrac{1}{2a})\le-\dfrac{1}{2a}-1\)</span>，易证<spanclass="math inline">\(\ln x\le x-1\)</span>，略</p><p align="right"><code>pl</code></p>          </div><div class="note note-info">            <p><spanclass="label label-danger">庆祝剑群周题100期导数100-3</span>记<spanclass="math inline">\(f&#39;(x),g&#39;(x)\)</span>分别是函数<spanclass="math inline">\(f(x),g(x)\)</span>的导函数.若存在<spanclass="math inline">\(x_0\in\mathbb{R}\)</span>，满足<spanclass="math inline">\(f(x_0)=g(x_0)\)</span>且<spanclass="math inline">\(f&#39;(x_0)=g&#39;(x_0)\)</span>，则称<spanclass="math inline">\(x_0\)</span>为函数<spanclass="math inline">\(f(x)\)</span>与<spanclass="math inline">\(g(x)\)</span>的一个“<spanclass="math inline">\(S\)</span>点”</p><p>（1）证明：函数<span class="math inline">\(f(x)=x\)</span>与<spanclass="math inline">\(g(x)=x^2+2x-2\)</span>不存在“<spanclass="math inline">\(S\)</span>点”；</p><p>（2）若函数<span class="math inline">\(f(x)=ax^2-1\)</span>与<spanclass="math inline">\(g(x)=\ln x\)</span>存在“<spanclass="math inline">\(S\)</span>点”，求实数<spanclass="math inline">\(a\)</span>的值；</p><p>（3）已知函数<span class="math inline">\(f(x)=-x^2+a\)</span>，<spanclass="math inline">\(g(x)=\dfrac{be^x}{x}\)</span>，对任意<spanclass="math inline">\(a&gt;0\)</span>，判断是否存在<spanclass="math inline">\(b&gt;0\)</span>，使函数<spanclass="math inline">\(f(x)\)</span>与<spanclass="math inline">\(g(x)\)</span>在区间<spanclass="math inline">\((0,+\infty)\)</span>内存在“<spanclass="math inline">\(S\)</span>点”，并说明理由</p>          </div><div class="note note-primary">            <p>（1）证明：<span class="math inline">\(\begin{cases}x^2+2x-2=x\\2x+2=1 \end{cases}\)</span>方程组无解，即不存在“<spanclass="math inline">\(S\)</span>点”</p><p>（2）解：<span class="math inline">\(\begin{cases}ax^2-1=\ln x\\2ax=\dfrac{1}{x} \end{cases}\)</span>，解得<spanclass="math inline">\(\begin{cases}a=\dfrac{e}{2}\\x=\dfrac{\sqrt{e}}{e} \end{cases}\)</span></p><p>（3）解：考虑<spanclass="math inline">\(\begin{cases}-x^2+a=\dfrac{be^x}{x} \quad①\\-2x=\dfrac{be^x(x-1)}{x^2}\quad②  \end{cases}\)</span>若有解，由②知<spanclass="math inline">\(x\in(0,1)\)</span>，消去<spanclass="math inline">\(b\)</span>化简得<spanclass="math inline">\(h(x)=x^3-3x^2-ax+a=0\)</span>，</p><p>对任意<span class="math inline">\(a&gt;0\)</span>，<spanclass="math inline">\(h(0)=a&gt;0,h(1)=-2&lt;0\)</span>，于是<spanclass="math inline">\(h(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>一定存在零点<spanclass="math inline">\(x_0\)</span></p><p>即对任意<span class="math inline">\(a&gt;0\)</span>，存在<spanclass="math inline">\(b=\dfrac{2x_0^3}{e^{x_0}(1-x_0)}\)</span>满足条件</p><p align="right"><code>pl</code></p>          </div>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>导数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导数</tag>
      
      <tag>高考题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Admin后台管理使用记录</title>
    <link href="/2021/05/23/Hexo-Admin%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/05/23/Hexo-Admin%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="插件设计初衷">插件设计初衷</h2><p>该插件最初设计为本地编辑器-您在本地运行hexo，使用<code>hexo-admin</code> 撰写帖子，然后使用<code>hexo generate</code> 或<code>hexo deploy</code>将生成的静态HTML文件发送到github页面或其他静态服务器。</p><p>但是，只要您使用非静态托管服务（例如Heroku，DigitalOcean等），就可以在实时博客上运行hexo-admin。<strong>静态托管服务（例如Github页面和Surge.sh）不支持运行hexo-admin从您的实时站点。</strong>如果您是通过实时博客使用Hexoadmin，则一定要设置密码（请参见下文），否则任何人都可以编辑您的内容。</p><h2 id="安装插件">安装插件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install --save hexo-admin<br>hexo server -d<br>open http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">4000</span><span class="hljs-regexp">/admin/</span><br></code></pre></td></tr></table></figure><h2 id="插件设置">插件设置</h2><p>以下1，2步针对实时服务器上使用Hexoadmin，需要设置密码保护，<span class="label label-warning">本地用户可跳过</span></p><p>1.登录后台，点击 <code>Settings</code> --<code>Setup authentification here</code>，输入用户名，登录密码和一个叫做 <code>Secret</code>的项，用来加密cookies的，越长越好，设置好以后会在下方生成配置信息</p><p>2.站贴以上配置信息到hexo的 <code>_config.yml</code> ，例如：<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">admin</span>:<br>  <span class="hljs-attribute">username</span>: myfavoritename<br>  <span class="hljs-attribute">password_hash</span>: be<span class="hljs-number">121740</span>bf<span class="hljs-number">988</span>b<span class="hljs-number">2225</span>a<span class="hljs-number">313</span>fa<span class="hljs-number">1</span>f<span class="hljs-number">107</span>ca<span class="hljs-number">1</span><br>  <span class="hljs-attribute">secret</span>: a secret something<br><br></code></pre></td></tr></table></figure></p><p>3.设置插件中的 <code>Deploy</code> 功能：<span class="label label-info">设置的好处点下鼠标就部署了</span></p><p>①添加下列信息到 <code>_config.yml</code> <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">admin:<br>  <span class="hljs-keyword">deploy</span>Command: &#x27;<span class="hljs-string">./deploy.sh</span><br></code></pre></td></tr></table></figure>②在hexo文件夹下创建文件 <code>deploy.sh</code> ，修改权限<span class="label label-danger">chmod +x deploy.sh</span>，然后写入如下内容： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br>hexo g -d<br><span class="hljs-comment"># 如果安装了hexo backup插件</span><br><span class="hljs-comment"># hexo bakcup</span><br></code></pre></td></tr></table></figure></p><h2 id="小贴士">小贴士</h2><p>在vps端运行时，可以使用 <code>nohup</code>命令在后台运行，关闭终端以后不会杀进程 <figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">nohup hexo server &gt; <span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure> 其中<code>&gt; /dev/null</code> 将 <code>nohup</code>的日志输出到linux的黑洞，<code>2&gt;&amp;1</code>将标准错误信息重定向到标准输出，那么也进了黑洞，也就是说不想让<code>nohup</code> 输出任何信息。最后一个 <code>&amp;</code>表示在后台运行，不会占用当前的终端显示。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试是否hexo backup</title>
    <link href="/2021/05/22/%E6%B5%8B%E8%AF%95%E6%98%AF%E5%90%A6hexo-backup/"/>
    <url>/2021/05/22/%E6%B5%8B%E8%AF%95%E6%98%AF%E5%90%A6hexo-backup/</url>
    
    <content type="html"><![CDATA[<p>测试</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>放缩处理端点函数值取极限的情况</title>
    <link href="/2021/05/22/%E6%94%BE%E7%BC%A9%E5%A4%84%E7%90%86%E7%AB%AF%E7%82%B9%E5%87%BD%E6%95%B0%E5%80%BC%E5%8F%96%E6%9E%81%E9%99%90%E7%9A%84%E6%83%85%E5%86%B5/"/>
    <url>/2021/05/22/%E6%94%BE%E7%BC%A9%E5%A4%84%E7%90%86%E7%AB%AF%E7%82%B9%E5%87%BD%E6%95%B0%E5%80%BC%E5%8F%96%E6%9E%81%E9%99%90%E7%9A%84%E6%83%85%E5%86%B5/</url>
    
    <content type="html"><![CDATA[<h2id="放缩处理端点函数值取极限的情况">放缩处理端点函数值取极限的情况</h2><div class="note note-info">            <p>证明：<span class="math inline">\(x\ln x&lt;e^x-x^2-1\)</span></p>          </div><div class="note note-primary">            <p>证：即证<span class="math inline">\(f(x)=\dfrac{x\lnx+x^2+1}{e^x}&lt;1\)</span></p><p><span class="math inline">\(f&#39;(x)=(\ln x+1+2x-x\lnx-x^2-1)e^{-x}=[(1-x)\ln x-(1-x)^2]e^{-x}=(1-x)(\lnx+x-1)e^{-x}\)</span></p><p>则<span class="math inline">\(x\in(0,1)\)</span>时，<spanclass="math inline">\(f&#39;(x)&lt;0\)</span>，<spanclass="math inline">\(f(x)\)</span>单减；<spanclass="math inline">\(x\in[1,+\infty)\)</span>时，<spanclass="math inline">\(f&#39;(x)&lt;0\)</span>，<spanclass="math inline">\(f(x)\)</span>单减</p><p>则<span class="math inline">\(x\in[1,+\infty)\)</span>时，<spanclass="math inline">\(f(x)\le f(1)=\dfrac{2}{e}&lt;1\)</span></p><p><span class="math inline">\(x\in(0,1)\)</span>时，由于<spanclass="math inline">\(x\ln x&lt;0\)</span>，则<spanclass="math inline">\(f(x)&lt;\dfrac{x^2+1}{e^x}=g(x)\)</span>，<spanclass="math inline">\(g&#39;(x)=-(x-1)^2e^{-x}&lt;0\)</span>，于是<spanclass="math inline">\(g(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>单减，<spanclass="math inline">\(g(x)&lt;g(0)=1\)</span>，则<spanclass="math inline">\(f(x)&lt;1\)</span></p><p>综上<span class="math inline">\(f(x)&lt;1\)</span>成立</p>          </div><div class="note note-danger">            <p>评：</p><ol type="1"><li><p>野猪说：“对数单身狗，指数找基友”</p></li><li><p><span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,+\infty)\)</span>单减，尴尬的是中学阶段不能用极限说明<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\(x=0\)</span>的极限值为0</p></li><li><p>由于<span class="math inline">\(f(x)\)</span>的上确界是在<spanclass="math inline">\(x=0\)</span>取到的，而<spanclass="math inline">\(x\ln x\)</span>的极限值也为0，并且刚好<spanclass="math inline">\(x\in(0,1)\)</span>时<spanclass="math inline">\(x\ln x&lt;0\)</span>，那么将<spanclass="math inline">\(f(x)\)</span>去掉<span class="math inline">\(x\lnx\)</span>放大成<span class="math inline">\(g(x)\)</span>后，<spanclass="math inline">\(g(x)\)</span>上界是不变的，只需要保证<spanclass="math inline">\(g(x)\)</span>单调递减就可以了。</p></li></ol>          </div>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>导数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导数</tag>
      
      <tag>放缩</tag>
      
      <tag>单身狗与基友</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题脚注、标签、多图的语法</title>
    <link href="/2021/05/20/Fluid%E4%B8%BB%E9%A2%98%E8%84%9A%E6%B3%A8%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%A4%9A%E5%9B%BE%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    <url>/2021/05/20/Fluid%E4%B8%BB%E9%A2%98%E8%84%9A%E6%B3%A8%E3%80%81%E6%A0%87%E7%AD%BE%E3%80%81%E5%A4%9A%E5%9B%BE%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="脚注">脚注</h2><p>主题内置了脚注语法支持，可以在文章末尾自动生成带有锚点的脚注，该功能在<strong>主题配置</strong>中默认开启：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">footnote:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">header:</span> <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>脚注语法如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一句话<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="参考资料1">[1]</span></a></sup><br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">这是对应的脚注</span><br></code></pre></td></tr></table></figure><p>显示效果：</p><div class="note note-primary">            <p>这句话带脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded" aria-label="参考资料1">[1]</span></a></sup></p><p>这句话也带脚注<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded" aria-label="参考资料2">[2]</span></a></sup></p>          </div><h2 id="标签">标签</h2><p>在 markdown 中加入如下的代码来使用便签：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% note success %&#125;<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可选标签<code>primary,secondary,success,danger,warning,info,light</code>显示效果：</p><div class="note note-primary">            <p>primary</p>          </div><div class="note note-secondary">            <p>secondary</p>          </div><div class="note note-success">            <p>success</p>          </div><div class="note note-danger">            <p>danger</p>          </div><div class="note note-warning">            <p>warning</p>          </div><div class="note note-info">            <p>info</p>          </div><div class="note note-light">            <p>light</p>          </div><h3 id="行内标签">行内标签</h3><p>在 markdown 中加入如下的代码来使用 Label：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;% <span class="hljs-selector-tag">label</span> primary <span class="hljs-keyword">@text</span> %&#125;<br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果展示：</p><span class="label label-primary">primary</span><span class="label label-secondary">secondary</span><span class="label label-success">success</span><span class="label label-danger">danger</span><span class="label label-warning">warning</span><span class="label label-info">info</span><span class="label label-light">light</span><h2 id="组图">组图</h2><p>如果想把多张图片按一定布局组合显示，你可以在 markdown中按如下格式：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less">&#123;% <span class="hljs-selector-tag">gi</span> <span class="hljs-selector-tag">total</span> <span class="hljs-selector-tag">n1-n2-</span>... %&#125;<br>  !<span class="hljs-selector-attr">[]</span>(url)<br>  !<span class="hljs-selector-attr">[]</span>(url)<br>  !<span class="hljs-selector-attr">[]</span>(url)<br>  !<span class="hljs-selector-attr">[]</span>(url)<br>  !<span class="hljs-selector-attr">[]</span>(url)<br>&#123;% <span class="hljs-selector-tag">endgi</span> %&#125;<br></code></pre></td></tr></table></figure><p>total：图片总数量，对应中间包含的图片 url 数量n1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于total，否则按默认样式</p><p>例如 <code>&#123;% gi 5 3-2 %&#125;</code> 代表共 5 张图，第一行 3张图，第二行 2 张图。</p><h2 id="参考">参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>参考资料1<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>参考资料2<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>椭圆上两点连线过定点问题的简化计算</title>
    <link href="/2021/05/20/%E6%A4%AD%E5%9C%86%E4%B8%8A%E4%B8%A4%E7%82%B9%E8%BF%9E%E7%BA%BF%E8%BF%87%E5%AE%9A%E7%82%B9%E9%97%AE%E9%A2%98%E7%9A%84%E7%AE%80%E5%8C%96%E8%AE%A1%E7%AE%97/"/>
    <url>/2021/05/20/%E6%A4%AD%E5%9C%86%E4%B8%8A%E4%B8%A4%E7%82%B9%E8%BF%9E%E7%BA%BF%E8%BF%87%E5%AE%9A%E7%82%B9%E9%97%AE%E9%A2%98%E7%9A%84%E7%AE%80%E5%8C%96%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h2id="椭圆上两点连线过定点问题的计算优化">椭圆上两点连线过定点问题的计算优化</h2><p><strong>题</strong></p><p>已知椭圆<spanclass="math inline">\(C:\dfrac{x^2}{a^2}+y^2=1(a&gt;1)\)</span>的左焦点为<spanclass="math inline">\(F\)</span>，直线<spanclass="math inline">\(y=kx(k&gt;0)\)</span>与<spanclass="math inline">\(C\)</span>交于<spanclass="math inline">\(A,B\)</span>两点，且<spanclass="math inline">\(\overrightarrow{FA}\cdot\overrightarrow{FB}=0\)</span>时，<spanclass="math inline">\(k=\dfrac{\sqrt3}{3}\)</span></p><p>（1）求<span class="math inline">\(a\)</span>的值；</p><p>（2）若线段<spanclass="math inline">\(AF,BF\)</span>的延长线分别交<spanclass="math inline">\(C\)</span>于<spanclass="math inline">\(D,E\)</span>两点，当<spanclass="math inline">\(k\)</span>变化时，直线<spanclass="math inline">\(DE\)</span>是否过定点？若是，求出该定点坐标</p><p><strong>解：</strong>（1）由<spanclass="math inline">\(\overrightarrow{FA}\cdot\overrightarrow{FB}=0\)</span>，即<spanclass="math inline">\((\overrightarrow{FO}+\overrightarrow{OA})\cdot(\overrightarrow{FO}+\overrightarrow{OB})=0\)</span>，化简得<spanclass="math inline">\(\overrightarrow{FO}^2=\overrightarrow{OA}^2\)</span>，则<spanclass="math inline">\(|\overrightarrow{FO}|=|\overrightarrow{OA}|=c\)</span>，于是<spanclass="math inline">\(A(\dfrac{\sqrt3}{2}c,\dfrac{1}{2}c)\)</span>代入椭圆方程得</p><p><spanclass="math inline">\(\begin{cases}\dfrac{\dfrac{3}{4}c^2}{a^2}+\dfrac{1}{4}c^2=1\\c^2=a^2-1 \end{cases}\)</span>，解得<spanclass="math inline">\(a=\sqrt3\)</span></p><p><img src="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-05-20_11-45-43.jpg" style="zoom:67%;" /></p><p>（2）设点<span class="math inline">\(A\)</span>的坐标为<spanclass="math inline">\((x_0,y_0)\)</span>，则直线<spanclass="math inline">\(AF\)</span>的方程为<spanclass="math inline">\(x=\dfrac{y}{y_0}(x_0+\sqrt2)-\sqrt2\)</span>，与椭圆联立得</p><p><spanclass="math inline">\([(\dfrac{x_0+\sqrt2}{y_0})^2+3]y^2+\)</span>酱油一次项<spanclass="math inline">\(-1=0\)</span>，将<spanclass="math inline">\(x_0^2+3y_0^2=3\)</span>代入化简得<spanclass="math inline">\(\dfrac{2\sqrt2x_0+5}{y_0^2}y^2+\)</span>酱油一次项<spanclass="math inline">\(-1=0\)</span>，于是</p><p><spanclass="math inline">\(y_0y_{D}=\dfrac{-y_0^2}{2\sqrt2x_0+5}\)</span>，则<spanclass="math inline">\(y_D=\dfrac{-y_0}{2\sqrt2x_0+5}\)</span>，代入直线方程解得<spanclass="math inline">\(D(\dfrac{-5x_0-6\sqrt2}{2\sqrt2x_0+5},\dfrac{-y_0}{2\sqrt2x_0+5})\)</span>，同理<spanclass="math inline">\(E(\dfrac{5x_0-6\sqrt2}{-2\sqrt2x_0+5},\dfrac{y_0}{-2\sqrt2x_0+5})\)</span></p><p>由对称性知直线<span class="math inline">\(DE\)</span>过的定点在<spanclass="math inline">\(x\)</span>轴上，设为<spanclass="math inline">\((t,0)\)</span>，于是</p><p><spanclass="math inline">\(\dfrac{\dfrac{-y_0}{2\sqrt2x_0+5}-0}{\dfrac{-5x_0-6\sqrt2}{2\sqrt2x_0+5}-t}=\dfrac{\dfrac{y_0}{-2\sqrt2x_0+5}-0}{\dfrac{5x_0-6\sqrt2}{-2\sqrt2x_0+5}-t}\)</span>，看似繁杂但很容易化简得<spanclass="math inline">\(t=-\dfrac{6\sqrt2}{5}\)</span>，于是直线<spanclass="math inline">\(DE\)</span>过定点<spanclass="math inline">\((-\dfrac{6\sqrt2}{5},0)\)</span></p><p><strong>评：</strong></p><ol type="1"><li><p>如果设直线<span class="math inline">\(AF\)</span>的方程为<spanclass="math inline">\(y=\dfrac{y_0}{x_0+\sqrt2}(x+\sqrt2)\)</span>的形式与椭圆联立时，所得到的关于<spanclass="math inline">\(x\)</span>的一元二次方程常数项并不是常数，计算量相应变大</p></li><li><p>求出<spanclass="math inline">\(D,E\)</span>两点的坐标以后，不要写直线<spanclass="math inline">\(DE\)</span>的方程，通过对称性确定定点所在的位置，然后利用三点共线求解</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>解析几何</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解析几何</tag>
      
      <tag>椭圆</tag>
      
      <tag>定点问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>deploy免输密码</title>
    <link href="/2021/05/19/deploy%E5%85%8D%E8%BE%93%E5%AF%86%E7%A0%81/"/>
    <url>/2021/05/19/deploy%E5%85%8D%E8%BE%93%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>按照网上的方法，将deploy的https协议改为git协议</p><p>修改hexo的 <code>_config.yml</code> <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br>  <span class="hljs-meta"># 下面这一行原来是https地址</span><br><span class="hljs-symbol">  repository:</span> git@github.com:andyppang/andyppang.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure></p><p>测试一下成功与否</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林再装zerotier1.6.3版本的坑</title>
    <link href="/2021/05/17/%E6%A2%85%E6%9E%97%E5%86%8D%E8%A3%85zerotier1-63%E7%89%88%E6%9C%AC%E7%9A%84%E5%9D%91/"/>
    <url>/2021/05/17/%E6%A2%85%E6%9E%97%E5%86%8D%E8%A3%85zerotier1-63%E7%89%88%E6%9C%AC%E7%9A%84%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>昨天不知为何，梅林路由器ac66u在定时重启以后就不正常了，cpu占用率两个都维持在100%，具体表现就是所有设备连不上wifi，网页登录后台管理地址异常慢，半年前也出现过一次类似的情况。</p><h2 id="经过">经过</h2><ol type="1"><li><p>拔掉U盘，重启设备，用电脑有线连接路由器，龟速登录上后台管理地址，然后在系统管理里面找到<code>format jffs on next boot</code>（大概叫这个名字吧）打勾，然后再重启路由器，这样就吧jffs分区进行了格式化，影响就是<code>软件中心</code> 需要重装，以及配置的<code>entware</code>环境需要重装，当然也包括通过entware安装的 <code>zerotier</code></p></li><li><p>格式化U盘，重新安装 <code>entware</code></p></li><li><p>下面开始安装 <code>zerotier</code> ，前方大坑：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">opkg update<br>opkg install zerotier<br>modprobe tun<br><span class="hljs-meta"># 如果在zerotier网页端建立了路由表的话，先删除，不然下面启动连接时会造成路由器死机</span><br>zerotier-one -d<br><span class="hljs-meta"># 这时出现了一个warning，没在意继续</span><br>zerotier-<span class="hljs-keyword">cli</span> join xxxxxx <span class="hljs-meta"># 注意在网页端开放接受连接</span><br>zerotier-<span class="hljs-keyword">cli</span> listnetworks<br></code></pre></td></tr></table></figure><p>ping一下获取到的ip没有问题，但是ping其它设备就是不通，反复重启、重装试了好多次都不行</p></li><li><p>开始认真看下那个<code>Warning:WARNING: ioctl() failed setting up Linux tap device(Set Mac)</code>，大意是说 <code>tun</code> 模块无法设置mac地址，最后终于找到这个<ahref="https://github.com/zerotier/ZeroTierOne/issues/1314#issuecomment-814862249">issue</a>，原来是<code>zerotier</code>包升级到了1.6.3，原来安装的是1.46版本没有问题，回退到1.4.6就可以了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">opkg</span> remove zerotier<br><span class="hljs-attribute">opkg</span> install http://bin.entware.net/armv<span class="hljs-number">7</span>sf-k<span class="hljs-number">2</span>.<span class="hljs-number">6</span>/archive/zerotier_<span class="hljs-number">1</span>.<span class="hljs-number">4</span>.<span class="hljs-number">6</span>-<span class="hljs-number">5</span>_armv<span class="hljs-number">7</span>-<span class="hljs-number">2</span>.<span class="hljs-number">6</span>.ipk<br></code></pre></td></tr></table></figure><p>自己也曾想过这个问题，但是苦苦找不到 <code>entware</code>的旧包的源，原来所有版本的都存放在这里<code>http://bin.entware.net/armv7sf-k2.6/archive</code> ，都在<code>archive</code> 归档文件夹下，受教啦！！</p></li><li><p>本来很欢快的重新走一下上面的3，不知道啥奇怪问题，加入网络网页端都不提示了，又是折腾好久，最后删除了<code>/opt/entware/var/lib/zerotier-one</code>整个文件夹，再重新安装，终于连上了，能够ping通其它设备了，然后又遇到一个奇怪的问题，每次ping完其它设备，<code>Ctrl+c</code>结束ping的时候，<code>zerotier-one</code>服务也停止了，不知为何，<code>ping xxx -c 4</code>貌似没有这个问题。</p></li><li><p>网页端建立路由表 <code>192.168.50.0/24 via 192.168.192.253</code>，意思就是通过分配到的ip地址 <code>192.168.192.253</code> 访问局域网网段<code>192.168.50.x</code></p></li><li><p>添加iptables，允许转发到192.168.50.0网段的流量通过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -A FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br></code></pre></td></tr></table></figure><p>然后远程连接到学校电脑，通过学校的zerotier网络ping测试家中的局域网设备能否到达。</p></li><li><p>测试没有问题后，设置开启路由器启动 <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> /jffs/scripts<br><span class="hljs-attribute">vi</span> post-mount<br><span class="hljs-comment">#在fi语句前添加下面三行命令</span><br><span class="hljs-attribute">modprobe</span> tun<br><span class="hljs-attribute">zerotier</span>-one -d<br><span class="hljs-attribute">iptables</span> -A FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br></code></pre></td></tr></table></figure>重启路由看设置是否成功，至此 <code>zerotier</code> 安装完毕</p></li><li><p>关于 <code>软件中心</code> 安装某不可描述的插件</p><p>路由型号：AC66U-B1 固件版本：380.70_0-X7.9 <ahref="https://github.com/hq450/fancyss_history_package/raw/master/fancyss_arm/shadowsocks_4.2.2.tar.gz">适用的插件</a></p><p>离线安装时，提示：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">检测到离线安装包：sxxxs_4.<span class="hljs-number">2.2</span><span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span> 含非法关键词！！！<br>根据法律规定，koolshare软件中心将不会安装此插件！！！<br>删除相关文件并退出...<br></code></pre></td></tr></table></figure><p>检测脚本在 <code>/koolshare/scripts/ks_tar_install.sh</code>文件中</p><p>找到这段并删除</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">detect_package()&#123;<br>        local TEST_WORD=<span class="hljs-string">&quot;$1&quot;</span><br>        local ILLEGAL_KEYWORDS=<span class="hljs-string">&quot;ss|乳酸菌饮料|s-s|违禁软件|v贰瑞|trojan|clash|wireguard|koolss|brook&quot;</span><br>        local KEY_MATCH=$(echo <span class="hljs-string">&quot;$&#123;TEST_WORD&#125;&quot;</span> | grep -Eo <span class="hljs-string">&quot;$ILLEGAL_KEYWORDS&quot;</span>)<br>        <br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;$KEY_MATCH&quot;</span> ]; then<br>                echo_date =======================================================<br>                echo_date <span class="hljs-string">&quot;检测到离线安装包：$&#123;soft_name&#125; 含非法关键词！！！&quot;</span><br>                echo_date <span class="hljs-string">&quot;根据法律规定，koolshare软件中心将不会安装此插件！！！&quot;</span><br>                echo_date <span class="hljs-string">&quot;删除相关文件并退出...&quot;</span><br>                echo_date =======================================================<br>                clean<br>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>&#125;                <br></code></pre></td></tr></table></figure></li></ol><h2 id="结局">结局</h2><p>折腾不易，且看能稳定运行多久吧，考虑到我这渣渣的记忆力，还是记录之以免再次踩坑</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zerotier</tag>
      
      <tag>merlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决docker所在var分区磁盘空间不足的问题</title>
    <link href="/2021/05/16/%E8%A7%A3%E5%86%B3docker%E6%89%80%E5%9C%A8var%E5%88%86%E5%8C%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/05/16/%E8%A7%A3%E5%86%B3docker%E6%89%80%E5%9C%A8var%E5%88%86%E5%8C%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="尴尬">尴尬</h2><p>今天在 <code>docker pull jupyter/datascience-notebook</code>的时候，遇到了尴尬的问题：系统提示磁盘空间不足。仔细一看，原来是docker所在的var分区当时自动分区的时候只分了1.7个G，现在下载这个玩意儿解压缩以后有几个G，好尬尬</p><h2 id="解决方案">解决方案</h2><p>首先尝试了给分区扩容，然后发现自己对linux纯命令行利用命令进行扩容一点都不知道，即使是在参看网上很多的教程以后，尝试进行操作也没有成功，干脆就放弃了这条路。就在一头莫展的时候发现了通过创建软连接的方式，将docker所在目录转移到其他空间充足的地方，比如我的home分区还剩十多个G</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">service stop docker<br>mkdir <span class="hljs-regexp">/home/</span>docker<br>mv <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker /</span>home/docker<br>ln -s <span class="hljs-regexp">/home/</span>docker <span class="hljs-regexp">/var/</span>lib/docker<br>service start docker<br></code></pre></td></tr></table></figure><p>docker 默认的目录是在 <code>/var/lib/docker</code>下，再次启动docker以后，docker还是只认这个目录，但是已经被我们软连接到home文件夹下了，再去pull以后，没有再报错了，并且发现<code>/home/docker</code>文件夹确实变大了，说明成功了。没想到通过软链接曲线救国，解决了空间不足的问题。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极值点偏移的思路消参的操作</title>
    <link href="/2021/05/14/%E6%9E%81%E5%80%BC%E7%82%B9%E5%81%8F%E7%A7%BB%E7%9A%84%E6%80%9D%E8%B7%AF%E6%B6%88%E5%8F%82%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <url>/2021/05/14/%E6%9E%81%E5%80%BC%E7%82%B9%E5%81%8F%E7%A7%BB%E7%9A%84%E6%80%9D%E8%B7%AF%E6%B6%88%E5%8F%82%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="题">题</h2><p>已知函数<spanclass="math inline">\(f(x)=axe^{2-x}-2(x-1)^2,a\in\mathbf{R}\)</span></p><p>（1）讨论<span class="math inline">\(f(x)\)</span>的单调性；</p><p>（2）当<spanclass="math inline">\(0&lt;a&lt;1\)</span>时，证明：<spanclass="math inline">\(f(x)\)</span>有两个零点<spanclass="math inline">\(x_1,x_2\)</span>，且<spanclass="math inline">\(x_1x_2&lt;1\)</span></p><h2 id="解">解</h2><p>解析：（1）<spanclass="math inline">\(f&#39;(x)=ae^{2-x}(1-x)-4(x-1)=(1-x)(ae^{2-x}+4)\)</span></p><p>当<span class="math inline">\(a\ge0\)</span>时，<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,1)\)</span>单增，在<spanclass="math inline">\((1,+\infty)\)</span>单减</p><p>当<span class="math inline">\(a&lt;0\)</span>时，令<spanclass="math inline">\(f&#39;(x)=0\)</span>得<spanclass="math inline">\(x_1=1\)</span>或<spanclass="math inline">\(x_2=2-\ln(-\dfrac{4}{a})\)</span></p><p>若<span class="math inline">\(a=-\dfrac{4}{e}\)</span>，则<spanclass="math inline">\(x_1=x_2\)</span>，<spanclass="math inline">\(f&#39;(x)\le0\)</span>，于是<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\(\mathbf{R}\)</span>上单减</p><p>若<span class="math inline">\(a&lt;-\dfrac{4}{e}\)</span>，则<spanclass="math inline">\(x_1&lt;x_2\)</span>，于是<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,1)\)</span>单减，<spanclass="math inline">\((1,x_2)\)</span>单增，<spanclass="math inline">\((x_2,+\infty)\)</span>单减</p><p>若<spanclass="math inline">\(-\dfrac{4}{e}&lt;a&lt;0\)</span>，则<spanclass="math inline">\(x_2&lt;x_1\)</span>，于是<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,x_2)\)</span>单减，<spanclass="math inline">\((x_2,1)\)</span>单增，<spanclass="math inline">\((1,+\infty)\)</span>单减</p><p>（2）<spanclass="math inline">\(0&lt;a&lt;1\)</span>时，由（1）知<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\((-\infty,1)\)</span>单增，在<spanclass="math inline">\((1,+\infty)\)</span>单减，<spanclass="math inline">\(f(0)=-2&lt;0\)</span>，<spanclass="math inline">\(f(1)=ae&gt;0\)</span>，<spanclass="math inline">\(f(2)=2a-2&lt;0\)</span></p><p>于是<span class="math inline">\(f(x)\)</span>在<spanclass="math inline">\((0,1)\)</span>和<spanclass="math inline">\((1,2)\)</span>内各有一个零点<spanclass="math inline">\(x_1,x_2\)</span>，由<spanclass="math inline">\(f(x_1)=0\)</span>得<spanclass="math inline">\(ax_1e^{2-x_1}=2(x_1-1)^2\)</span>，即<spanclass="math inline">\(a=\dfrac{2(x_1-1)^2}{x_1e^{2-x_1}}\)</span></p><p>欲证<span class="math inline">\(x_1x_2&lt;1\)</span>，即证<spanclass="math inline">\(x_2&lt;\dfrac{1}{x_1}\)</span>，由于<spanclass="math inline">\(x_2,\dfrac{1}{x_1}\in(1,+\infty)\)</span>，只需证<spanclass="math inline">\(0=f(x_2)&gt;f(\dfrac{1}{x_1})\)</span>，即证</p><p><spanclass="math inline">\(f(\dfrac{1}{x_1})=a\cdot\dfrac{1}{x_1}\cdote^{2-\dfrac{1}{x_1}}-2(\dfrac{1}{x_1}-1)^2&lt;0\)</span>，将<spanclass="math inline">\(a\)</span>代入化简后即证<spanclass="math inline">\(e^{x_1-\dfrac{1}{x_1}}&lt;1\)</span></p><p>由于<spanclass="math inline">\(0&lt;x_1&lt;1\)</span>，则上式显然成立，得证</p><h2 id="评">评</h2><ol type="1"><li>第（1）问解不等式<spanclass="math inline">\((1-x)(ae^{2-x}+4)&gt;0\)</span>时，由于<spanclass="math inline">\(y=ae^{2-x}+4(a&lt;0)\)</span>是个增函数，所以相当于解<spanclass="math inline">\((1-x)[x-(2-\ln(-\dfrac{4}{a}))]&gt;0\)</span>，可能有些同学绕不清楚</li><li>第（2）问在1的右侧找点小于0时，注意观察找到<spanclass="math inline">\(f(2)\)</span>，刚好可以利用题目条件<spanclass="math inline">\(a\)</span>的范围</li><li>如果采用传统的极值点偏移构造函数的思路，将会得到非常复杂的函数解析式，如果不消参处理，基本完蛋，切忌不写出解析式直接求导的操作，比如直接拿着<spanclass="math inline">\(f(x)-f(\dfrac{1}{x})\)</span>利用复合函数求导去了。</li></ol>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>导数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导数</tag>
      
      <tag>极值点偏移</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pandoc的使用记录</title>
    <link href="/2021/05/13/Pandoc%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/05/13/Pandoc%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="pandoc简介">Pandoc简介</h2><blockquote><p>Pandoc是使用Haskell语言编写的一款跨平台、自由开源及命令行界面的标记语言转换工具，可实现不同标记语言间的格式转换，堪称该领域中的“瑞士军刀”</p></blockquote><h2 id="windows10系统下的使用方法">Windows10系统下的使用方法</h2><ol type="1"><li><p>将pandoc安装目录加入系统环境变量的path中</p></li><li><p>在命令行操作pandoc进行格式转换</p></li></ol><h2 id="markdownlatex转docx">markdown/latex转docx</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">pandoc</span> <span class="hljs-literal">-</span><span class="hljs-comment">s</span> <span class="hljs-comment">source</span><span class="hljs-string">.</span><span class="hljs-comment">md</span> <span class="hljs-literal">-</span><span class="hljs-comment">o</span> <span class="hljs-comment">output</span><span class="hljs-string">.</span><span class="hljs-comment">docx</span><br><span class="hljs-comment">#</span> <span class="hljs-comment">如果有数学公式需要转换，加上</span>--<span class="hljs-comment">mathjax或者</span>--<span class="hljs-comment">katex或者</span>--<span class="hljs-comment">mathml参数</span><br><span class="hljs-comment">pandoc</span> <span class="hljs-literal">-</span><span class="hljs-comment">s</span> <span class="hljs-comment">maths</span><span class="hljs-string">.</span><span class="hljs-comment">md</span> <span class="hljs-literal">-</span><span class="hljs-comment">o</span> <span class="hljs-comment">outputmaths</span><span class="hljs-string">.</span><span class="hljs-comment">docx</span> --<span class="hljs-comment">mathjax</span> <br></code></pre></td></tr></table></figure><p>使用情况记录：转换出来的公式是用word中自带的公式编辑器显示的，绝大部分公式都能正常显示</p><p><strong>小贴士：</strong>利用typora编辑器，在安装好pandoc的情况下，可以一键实现转换，不需要命令行操作，并且转换后的格式比用命令行转换出来的好看。</p><p><strong>To do:</strong> <code>\dfrac&#123;&#125;&#123;&#125;</code>的行间分式转化出来，在word中变矮了，显示的格式是 <code>frac&#123;&#125;&#123;&#125;</code>类型</p><p>查阅大量文章之后发现word不支持 <code>\dfrac</code>，看来让行内公式显示看起来比较舒服的分数大小，不太容易实现了。</p><h2 id="md转html再转docx">md转html再转docx</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">pandoc</span> <span class="hljs-selector-tag">-s</span> <span class="hljs-selector-tag">maths</span><span class="hljs-selector-class">.md</span> <span class="hljs-selector-tag">--webtex</span> <span class="hljs-selector-tag">-t</span> <span class="hljs-selector-tag">html</span> | <span class="hljs-selector-tag">pandoc</span> <span class="hljs-selector-tag">-f</span> <span class="hljs-selector-tag">html</span> <span class="hljs-selector-tag">-o</span> <span class="hljs-selector-tag">output</span><span class="hljs-selector-class">.docx</span><br></code></pre></td></tr></table></figure><blockquote><p>解释说明： &gt; -s 表示待转换的文件 &gt; --webtex表示将数学公式加上<img>标签 &gt; -t to的简写 &gt; | 管道符 &gt; -ffrom的简写 &gt; -o output的简写 &gt;上述命令的作用就是将md文件以及其中的数学公式以图片形式转为html，然后再将html转成docx</p></blockquote><p>由于此时word中的公式全部都是图片显示了，可以有效解决分数变小的问题。</p><p>实际使用过程中的三个问题：</p><ol type="1"><li>运行命令报错，提示连接错误之类的，很可能是众所周知的问题，在命令行挂上代理即可：</li></ol><p>linux系统终端使用 <code>proxychains</code></p><p>win10命令行需要设置代理 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">http_proxy</span>=http://127.0.0.1:xxxx<br><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">https_proxy</span>=http://127.0.0.1:xxxx<br></code></pre></td></tr></table></figure> 2.处理图片的速度比较慢，在正确设置代理的情况下，完成一套数学试卷的转换大约用了8分钟左右，请耐心等待</p><ol start="3" type="1"><li>转换好打开发现，word中图片和文字参差不齐，只需要选中所有，右键选择<code>段落</code> ，找到 <code>对齐方式</code> 选择 <code>居中</code>即可，为了美观些，还可以将行距设置为1.5倍。</li></ol>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pandoc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Page绑定域名</title>
    <link href="/2021/04/29/Github-Page%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <url>/2021/04/29/Github-Page%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<p>轻松两步就可以完成Github Page域名绑定</p><h2 id="dns端的设置">DNS端的设置</h2><ul><li>增加一条 <code>CNAME</code> 记录，名称指向自己的<code>github page</code> 页 <code>username.github.io</code></li></ul><table><thead><tr><th style="text-align: center;">类型</th><th style="text-align: center;">名称</th><th style="text-align: center;">内容</th></tr></thead><tbody><tr><td style="text-align: center;">CNAME</td><td style="text-align: center;">www</td><td style="text-align: center;">username.github.io</td></tr></tbody></table><ul><li>增加一条 <code>A</code> 记录，指向 <code>185.199.108.153</code> 或<code>185.199.109.153</code> 或 <code>185.199.110.153</code> 或<code>185.199.111.153</code></li></ul><table><thead><tr><th style="text-align: center;">类型</th><th style="text-align: center;">名称</th><th style="text-align: center;">内容</th></tr></thead><tbody><tr><td style="text-align: center;">A</td><td style="text-align: center;">@</td><td style="text-align: center;">185.199.108.153</td></tr></tbody></table><h2 id="github-pages端设置">Github Pages端设置</h2><p><strong>（这样设置有坑，可以不看了，看下一步）</strong></p><p><code>settings</code> --&gt; <code>Pages</code> --&gt;<code>Custom domain</code> --&gt; <code>www.zeroandone.tk</code> --&gt;<code>save</code></p><p>如果你的DNS配置正确的话，检测通过，稍等片刻，这时可以通过<code>http://www.zeroandone.tk</code> 访问了</p><p>建议勾选下方的 <code>Enforce HTTPS</code> ，这样就可以通过<code>https://www.zeroandone.tk</code> 访问</p><p>说明：<code>zeroandone.tk</code> 会重定向到<code>www.zeroandone.tk</code></p><p>刚把这篇文章写完，去 <code>hexo g -d</code> 以后，突然访问<code>https://www.zeroandone.tk</code> 页面 <code>404</code>了，好奇怪！</p><p>没发这篇文章之前还访问好好的，搜索发现好多小伙伴也有类似的事情发生：<ahref="https://blog.csdn.net/Belingda/article/details/100635572">githubpage+hexo绑定域名后页面显示404</a>，原来是部署覆盖掉了CNAME文件，正确的处理方式看下一步</p><h2 id="hexo博客端设置">Hexo博客端设置</h2><p>在 <code>source</code> 文件夹下创建 <code>CNAME</code>文件（注意一定是大写）</p><p>文件的内容就一行 <code>www.zeroandone.tk</code>（换成你自己的域名）</p><p>这样部署上传的时候，就将该文件push到github仓库了</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github page</tag>
      
      <tag>绑定域名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给ipv4 only vps添加ipv6</title>
    <link href="/2021/04/28/%E7%BB%99ipv4-only-vps%E6%B7%BB%E5%8A%A0ipv6/"/>
    <url>/2021/04/28/%E7%BB%99ipv4-only-vps%E6%B7%BB%E5%8A%A0ipv6/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><p>在网站 <a href="https://www.tunnelbroker.net/">TunnelBroker</a>注册账号</p><h2 id="网页端设置">网页端设置</h2><p>1.登录后，点击左侧 <code>Creat Regular Tunnel</code></p><p>2.<code>Ipv4 Endpoint(your side)</code>填写Vps的ip地址，<code>Available Tunnel Servers</code>选择ipv6地址所在地区,然后点击下方 <code>Creat Tunnel</code></p><p>3.点击选项卡 <code>Example Configurations</code>，选择你的配置方式或系统类型，得到vps端需要配置的东西</p><h2 id="vps端设置">Vps端设置</h2><p>有如下两种方式，推荐采用方式二：</p><p>1.如果上一步你的选择是配置方式 <code>Linux-net-tools</code>，会得到一串命令示例如下： <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ifconfig</span> sit<span class="hljs-number">0</span> up<br><span class="hljs-attribute">ifconfig</span> sit<span class="hljs-number">0</span> inet<span class="hljs-number">6</span> tunnel ::<span class="hljs-number">66</span>.<span class="hljs-number">220</span>.xx.xx<br><span class="hljs-attribute">ifconfig</span> sit<span class="hljs-number">1</span> up<br><span class="hljs-attribute">ifconfig</span> sit<span class="hljs-number">1</span> inet<span class="hljs-number">6</span> add <span class="hljs-number">2001</span>:<span class="hljs-number">4</span>xx:x:<span class="hljs-number">137</span>::<span class="hljs-number">2</span>/<span class="hljs-number">64</span><br><span class="hljs-attribute">route</span> -A inet<span class="hljs-number">6</span> add ::/<span class="hljs-number">0</span> dev sit<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>将以上命令粘贴进vps的终端，运行即可</p><p>2.如果上一步的选择是系统类型比如 <code>Debian\Ubuntu</code>的话，会得到配置代码： <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">auto</span> he-ipv<span class="hljs-number">6</span><br><span class="hljs-attribute">iface</span> he-ipv<span class="hljs-number">6</span> inet<span class="hljs-number">6</span> v<span class="hljs-number">4</span>tunnel<br>        <span class="hljs-attribute">address</span> xxxx:<span class="hljs-number">4</span>xx:x:<span class="hljs-number">137</span>::<span class="hljs-number">2</span><br>        <span class="hljs-attribute">netmask</span> <span class="hljs-number">64</span><br>        <span class="hljs-attribute">endpoint</span> <span class="hljs-number">66</span>.<span class="hljs-number">220</span>.xx.xx<br>        <span class="hljs-attribute">local</span> xx.xx.xx.xx<br>        <span class="hljs-attribute">ttl</span> <span class="hljs-number">255</span><br>        <span class="hljs-attribute">gateway</span> <span class="hljs-number">2001</span>:<span class="hljs-number">470</span>:c:<span class="hljs-number">137</span>::<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure> 将以上代码粘贴进<code>/etc/network/interfaces</code></p><p><strong>特别提醒</strong>：如果你的vps是oracle的话，可能需要将上述代码中<code>local xx.xx.xx.xx</code>的ip地址修改为oracle的内网地址，一般是10开头的</p><p>然后 <code>ifup he-ipv6</code> 就可以了，如果没有 <code>ifup</code>命令就安装一下 <code>apt install ifupdown</code></p><p>然后测试我们的ipv6地址是否添加成功： <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ping6</span> ipv<span class="hljs-number">6</span>.google.com<br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vps</tag>
      
      <tag>ipv4</tag>
      
      <tag>ipv6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10计划任务不执行的解决办法</title>
    <link href="/2021/04/23/Win10%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%B8%8D%E6%89%A7%E8%A1%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/2021/04/23/Win10%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%B8%8D%E6%89%A7%E8%A1%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="使用计划任务的目的">使用计划任务的目的：</h2><p>仅仅是为了定时打开某个软件.exe，挂个机，刷刷分</p><h2 id="不执行的具体表现">不执行的具体表现</h2><p>如果您定好计划任务以后，发现有如下情形之一，可以考虑试试下面的办法</p><ul><li><p>操作员或管理员拒绝了您的请求</p></li><li><p>显示正在运行，但是有错误代码 <code>0x41301</code></p></li><li><p>选择 <code>只在用户登录时运行</code> 可以运行，但是一旦选择<code>不管用户是否登录都要运行</code> 就不行</p></li></ul><h2 id="尝试过的坑">尝试过的”坑“</h2><p>按照网上千篇一律的教程，要么分配用户权限，要么用<code>Administrator</code> 账户运行，可是我都没有成功</p><h2 id="解决办法">解决办法</h2><p>在网络上搜索了众多解决办法都无果之后，自己尝试将<code>运行任务时，请使用下列用户账户</code> 选择设置为<code>Administrators</code> 用户组</p><p>对，没错，不是 <code>用户</code> ，而是 <code>用户组</code> ，然后<code>只在用户登录时运行</code> 和 <code>不管用户是否登录都要运行</code>都变灰不可选择，然后定好时间，锁定计算机，等下打开一看，我的exe文件居然运行起来了。</p><p>为了进一步验证我前面按网上教程设置的步骤是否是必要条件，我就取消了前面所有的修改，只是简单的将<code>运行任务时，请使用下列用户账户</code> 选择设置为<code>Administrators</code> 用户组，发现也是可行的。</p><p>至于这到底是为什么，我也不清楚，误打误撞解决了问题，如果实在走投无路，不妨试试，好运。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>267009</tag>
      
      <tag>taskschd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关注G,F两点坐标如何求解</title>
    <link href="/2021/04/21/%E5%85%B3%E6%B3%A8G,F%E4%B8%A4%E7%82%B9%E5%9D%90%E6%A0%87/"/>
    <url>/2021/04/21/%E5%85%B3%E6%B3%A8G,F%E4%B8%A4%E7%82%B9%E5%9D%90%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="关注gf两点坐标如何求解">关注G,F两点坐标如何求解</h2><p>如图，在四棱锥<span class="math inline">\(P-ABCD\)</span>中，<spanclass="math inline">\(PA\bot\)</span>平面<spanclass="math inline">\(ABCD\)</span>，<span class="math inline">\(AD\botCD\)</span>，<span class="math inline">\(AD//BC\)</span>，<spanclass="math inline">\(PA=AD=CD=2,BC=3\)</span>，过点<spanclass="math inline">\(A\)</span>作截面<spanclass="math inline">\(AEFG\)</span></p><p>已知<span class="math inline">\(PG:PB=2:3\)</span>，<spanclass="math inline">\(E\)</span>为<spanclass="math inline">\(PD\)</span>的中点</p><p>（1）求证：<span class="math inline">\(AG//\)</span>平面<spanclass="math inline">\(PCD\)</span></p><p>（2）求<span class="math inline">\(AF\)</span>与平面<spanclass="math inline">\(PAB\)</span>所成角的正弦值</p><p><img src="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-04-10_14-13-07.jpg" alt="33" style="zoom:50%;" /></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
      <category>立体几何</category>
      
    </categories>
    
    
    <tags>
      
      <tag>立体几何</tag>
      
      <tag>坐标</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows10安装Ubuntu子系统以及折腾</title>
    <link href="/2021/04/20/Win10%E5%AE%89%E8%A3%85WSL2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%8A%98%E8%85%BE/"/>
    <url>/2021/04/20/Win10%E5%AE%89%E8%A3%85WSL2%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%8A%98%E8%85%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="安装篇">安装篇</h1><h2 id="步骤-1---启用适用于-linux-的-windows-子系统">步骤 1 - 启用适用于Linux 的 Windows 子系统</h2><p>需要先启用“适用于 Linux 的 Windows 子系统”可选功能，然后才能在Windows 上安装 Linux 分发。</p><p>以管理员身份打开 PowerShell 并运行：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">dism.exe <span class="hljs-string">/online</span> <span class="hljs-string">/enable-feature</span> <span class="hljs-string">/featurename</span><span class="hljs-function">:Microsoft-Windows-Subsystem-Linux</span> <span class="hljs-string">/all</span> <span class="hljs-string">/norestart</span><br></code></pre></td></tr></table></figure><h2 id="步骤-2---检查运行-wsl-2-的要求">步骤 2 - 检查运行 WSL 2的要求</h2><p>若要更新到 WSL 2，需要运行 Windows 10。</p><p>对于 x64 系统：版本 1903 或更高版本，采用 内部版本 18362或更高版本。</p><p>对于 ARM64 系统：版本 2004 或更高版本，采用 内部版本 19041或更高版本。</p><p>低于 18362 的版本不支持 WSL 2</p><h2 id="步骤-3---启用虚拟机功能">步骤 3 - 启用虚拟机功能</h2><p>安装 WSL 2 之前，必须启用“虚拟机平台”可选功能。计算机需要虚拟化功能才能使用此功能。</p><p>以管理员身份打开 PowerShell 并运行：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">dism.exe <span class="hljs-string">/online</span> <span class="hljs-string">/enable-feature</span> <span class="hljs-string">/featurename</span><span class="hljs-function">:VirtualMachinePlatform</span> <span class="hljs-string">/all</span> <span class="hljs-string">/norestart</span><br></code></pre></td></tr></table></figure><h2 id="步骤-4---下载-linux-内核更新包">步骤 4 - 下载 Linux内核更新包</h2><p><ahref="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi"title="适用于 x64 计算机的 WSL2 Linux 内核更新包">适用于 x64 计算机的WSL2 Linux 内核更新包</a></p><h2 id="步骤-5---将-wsl-2-设置为默认版本">步骤 5 - 将 WSL 2设置为默认版本</h2><p>打开 PowerShell，然后在安装新的 Linux 发行版时运行以下命令，将 WSL 2设置为默认版本：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">wsl --<span class="hljs-keyword">set</span>-<span class="hljs-keyword">default</span>-version <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="步骤-6---安装自己喜欢的-linux-版本">步骤 6 - 安装自己喜欢的Linux 版本</h2><p>在Microsoft Store搜索ubuntu，安装18.04</p><h1 id="折腾篇">折腾篇</h1><h2 id="设置用户名和密码">设置用户名和密码</h2><p>首次启动设置用户名和密码</p><h2 id="更换apt源为清华源">更换apt源为清华源</h2><p>编辑 <code>/etc/apt/sources.list</code> 删除所有内容，添加如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vim"># 默认注释了源码镜像以提高 apt <span class="hljs-keyword">update</span> 速度，如有需要可自行取消注释<br><span class="hljs-keyword">deb</span> http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal main restricted universe multiverse<br># <span class="hljs-keyword">deb</span>-src http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal main restricted universe multiverse<br><span class="hljs-keyword">deb</span> http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-updates main restricted universe multiverse<br># <span class="hljs-keyword">deb</span>-src http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-updates main restricted universe multiverse<br><span class="hljs-keyword">deb</span> http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-backports main restricted universe multiverse<br># <span class="hljs-keyword">deb</span>-src http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-backports main restricted universe multiverse<br><span class="hljs-keyword">deb</span> http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-security main restricted universe multiverse<br># <span class="hljs-keyword">deb</span>-src http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-security main restricted universe multiverse<br><br># 预发布软件源，不建议启用<br># <span class="hljs-keyword">deb</span> http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-proposed main restricted universe multiverse<br># <span class="hljs-keyword">deb</span>-src http<span class="hljs-variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="hljs-keyword">cn</span>/ubuntu/ focal-proposed main restricted universe multiverse<br></code></pre></td></tr></table></figure><h2id="安装指定版本的nodejs和最新版npm">安装指定版本的nodejs和最新版npm</h2><p>用命令安装</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vala">curl -sL https:<span class="hljs-comment">//deb.nodesource.com/setup_14.x  bash - </span><br><span class="hljs-meta"># 注意14代表版本号，可根据需要更换</span><br>apt-<span class="hljs-keyword">get</span> install -y nodejs<br>node -v<br><span class="hljs-meta"># v14.16.1</span><br>npm -v<br><span class="hljs-meta"># 6.14.12</span><br></code></pre></td></tr></table></figure><p>nodejs14.16.1自带npm版本为6.14.12，可以通过命令升级npm为最新版</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g <span class="hljs-built_in">npm</span><br><span class="hljs-built_in">npm</span> -v<br><span class="hljs-comment"># 7.10.0</span><br></code></pre></td></tr></table></figure><h2 id="设置git配置">设置git配置</h2><p>全局配置git用户名和邮箱，如果要push到github，则跟github用户名和邮箱保持一致</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-string">user</span>.<span class="hljs-string">name</span> <span class="hljs-string">&quot;xxxxx&quot;</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-string">user</span>.<span class="hljs-string">email</span> <span class="hljs-string">&quot;xxx@gmail.com&quot;</span><br><span class="hljs-comment"># 查看确认设置是否正确</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--list</span> <br><span class="hljs-comment"># user.name = xxxxx</span><br><span class="hljs-comment"># user.email = xxx@gmial.com</span><br></code></pre></td></tr></table></figure><h2 id="安装配置windows-terminal">安装配置Windows Terminal</h2><p>Windows Terminal是win推出的一款新的命令行工具，可以在应用商店里搜索并下载安装</p><h3 id="安装zsh">安装zsh</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 安装 zsh</span><br>sudo apt-<span class="hljs-keyword">get</span> install zsh<br><br><span class="hljs-meta"># 修改默认的 Shell 为 zsh</span><br>chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><h3 id="安装oh-my-zsh">安装oh-my-zsh</h3><p>oh-my-zsh用于快速配置zsh，进入官网或者Github可以了解其基本使用及其丰富的主题使用，安装只需要执行下面代码即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>如果遇到443错误，可能是dns污染造成的，分步执行以下代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/ohmyzsh/</span>ohmyzsh<span class="hljs-regexp">/master/</span>tools/install.sh<br>sh ./install.sh<br></code></pre></td></tr></table></figure><p>安装 <code>zsh-syntax-higlighting</code> 语法高亮插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-syntax-highlighting.git<br><br><span class="hljs-comment"># 移动到 plugins 文件夹中</span><br>mv -p zsh-syntax-highlighting <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins<br><br><span class="hljs-comment"># 配置环境变量</span><br>cd ~<br>vim .zshrc<br><br><span class="hljs-comment">#在 plugins 一列中添加 zsh-syntax-highlighting，如下</span><br>plugins=(<br>         git<br>         zsh-syntax-highlighting<br>         )<br><br><span class="hljs-comment"># 在文件末尾添加</span><br>source <span class="hljs-variable">$ZSH_CUSTOM</span><span class="hljs-regexp">/plugins/</span>zsh-syntax-highlighting/zsh-syntax-highlighting.zsh<br><br><span class="hljs-comment"># 配置生效</span><br>source ~/.zshrc<br></code></pre></td></tr></table></figure><p>安装 <code>zsh-autosuggestions</code> 语法历史记录插件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions.git<br><br><span class="hljs-comment"># 移动到 plugins 文件夹中</span><br>mv -p zsh-autosuggestions <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins<br><br><span class="hljs-comment"># 配置环境变量</span><br>cd ~<br>vim .zshrc<br><br><span class="hljs-comment">#在 plugins 一列中添加 zsh-autosuggestions，如下</span><br>plugins=(<br>         git<br>         zsh-syntax-highlighting<br>         zsh-autosuggestions<br>         )<br><br><span class="hljs-comment"># 在文件末尾添加</span><br>source <span class="hljs-variable">$ZSH_CUSTOM</span><span class="hljs-regexp">/plugins/</span>zsh-autosuggestions/zsh-autosuggestions.zsh<br><br><span class="hljs-comment"># 配置生效</span><br>source ~/.zshrc<br></code></pre></td></tr></table></figure><h3 id="更改oh-my-zsh主题">更改oh-my-zsh主题</h3><p>安装Powerline字体以使用图标</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ sudo apt <span class="hljs-keyword">install</span> fonts-powerline<br></code></pre></td></tr></table></figure><p>将主题从'robbyrussell'改为'agnoster'为传奇的Oh-My-Zsh主题</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">vim ~<span class="hljs-string">/.zshrc</span><br>source ~<span class="hljs-string">/.zshrc</span><br></code></pre></td></tr></table></figure><p>如果看到有乱码出现的话，那就需要给windows安装powerline字体详见https://blog.csdn.net/qiphon3650/article/details/109165495安装完毕后（安装自己喜欢的几个字体就行了，没必要全装），配置WindowsTerminal字体为刚安装的字体</p><p>取消前面的用户名和主机名显示 方法一：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cd ~<span class="hljs-regexp">/.oh-my-zsh/</span>themes<br>vim agnoster.zsh-theme<br></code></pre></td></tr></table></figure><p>把其中的 <code>prompt_context</code> 注释掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#prompt_context</span><br><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure><p>这样，终端就不再显示前面长长的用户名和主机名了</p><p>方法二： 下面这个方法更好些： 修改 <code>vim ~/.zshrc</code>文件,在文件底部增加 隐藏用户名和主机名</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">prompt_context</span><span class="hljs-params">()</span></span> &#123;&#125;<br></code></pre></td></tr></table></figure><p>只保留用户名，隐藏主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-function"><span class="hljs-title">prompt_context</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$USER</span>&quot;</span> != <span class="hljs-string">&quot;<span class="hljs-variable">$DEFAULT_USER</span>&quot;</span>  -n <span class="hljs-string">&quot;<span class="hljs-variable">$SSH_CLIENT</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    prompt_segment black default <span class="hljs-string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)<span class="hljs-variable">$USER</span>&quot;</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br></code></pre></td></tr></table></figure><p>只保留主机名，隐藏用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-function"><span class="hljs-title">prompt_context</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$USER</span>&quot;</span> != <span class="hljs-string">&quot;<span class="hljs-variable">$DEFAULT_USER</span>&quot;</span>  -n <span class="hljs-string">&quot;<span class="hljs-variable">$SSH_CLIENT</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    prompt_segment black default <span class="hljs-string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)<span class="hljs-variable">$HOST</span>&quot;</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br></code></pre></td></tr></table></figure><p>修改后记得执行 <code>source ~/.zshrc</code></p><h3 id="安装autojump">安装autojump</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">apt install <span class="hljs-built_in">auto</span>jump<br>vim ~/.zshrc<br></code></pre></td></tr></table></figure><p>找到plugins，把autojump添加进去</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">plugins=(<br>         git<br>         zsh-syntax-highlighting<br>         zsh-<span class="hljs-built_in">auto</span>suggestions<br>         <span class="hljs-built_in">auto</span>jump<br>         )<br></code></pre></td></tr></table></figure><p>然后 <code>source .zshrc</code>autojump就开始记录你进入过的目录，以后直接 <code>j 目录名</code>就可以了，甚至是目录名的部分字母都可以，如果有多选，提供tab选择功能</p><h3 id="解决windows-terminal连接ssh不能输入中文标点">解决windowsterminal连接ssh不能输入中文标点</h3><p>详情见https://zhiqiang.org/it/windows-terminal-cannot-type-chinese-punctuations-in-ssh.html</p><h2id="安装shadowsocks并在客户端使用">安装shadowsocks并在客户端使用</h2><p><ahref="https://shadowsockshelp.github.io/Shadowsocks/linux.html#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%A2%E6%88%B7%E7%AB%AF">https://shadowsockshelp.github.io/Shadowsocks/linux.html#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%A2%E6%88%B7%E7%AB%AF</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">apt-get install python-pip<br>pip install git+https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/shadowsocks/</span>shadowsocks.git@master<br></code></pre></td></tr></table></figure><p>创建一个 /etc/shadowsocks.json 文件，格式如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;server&quot;</span>:<span class="hljs-string">&quot;服务器 IP 或是域名&quot;</span>,<br>    <span class="hljs-attr">&quot;server_port&quot;</span>:端口号,<br>    <span class="hljs-attr">&quot;local_address&quot;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>    <span class="hljs-attr">&quot;local_port&quot;</span>:<span class="hljs-number">1080</span>,<br>    <span class="hljs-attr">&quot;password&quot;</span>:<span class="hljs-string">&quot;密码&quot;</span>,<br>    <span class="hljs-attr">&quot;timeout&quot;</span>:<span class="hljs-number">300</span>,<br>    <span class="hljs-attr">&quot;method&quot;</span>:<span class="hljs-string">&quot;加密方式 (chacha20-ietf-poly1305 / aes-256-cfb)&quot;</span>,<br>    <span class="hljs-attr">&quot;fast_open&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><p>启动：Python 版客户端命令是 sslocal</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>sslocal -c <span class="hljs-regexp">/etc/</span>shadowsocks.json -d start<br></code></pre></td></tr></table></figure><p>终端内使用，需安裝 proxychains</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-builtin-name">get</span> install proxychains<br></code></pre></td></tr></table></figure><p>编辑 /etc/proxychains.conf 修改最后一行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">socks5</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure><p>接着我们就可以直接 用 proxychains + 命令的方式使用代理，例如</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">proxychains <span class="hljs-built_in">curl</span> xxxx<br>proxychains <span class="hljs-built_in">wget</span> xxxx<br>sudo proxychains apt<span class="hljs-literal">-get</span> xxxx<br></code></pre></td></tr></table></figure><p>关闭 Shadowsocks： 在终端内输入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lsof</span> –i:<span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure><p>kill 相应的 pid 即可</p><h3 id="sslocal启动失败的来看">sslocal启动失败的来看</h3><p>如果你的ss加密方式是chacha20协议的，并且看到报错</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">load</span> libsodium failed <span class="hljs-keyword">with</span> <span class="hljs-type">path</span> <span class="hljs-keyword">None</span><br></code></pre></td></tr></table></figure><p>那就需要安装一下libsodium了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>download.libsodium.org<span class="hljs-regexp">/libsodium/</span>releases/LATEST.tar.gz<br>tar xvf LATEST.tar.gz<br>cd libsodium-stable/<br>./configure<br>make<br>make install<br>ldconfig<br></code></pre></td></tr></table></figure><p>据说还有不用编译的安装方法，自行百度</p><h2 id="配置vim编辑器">配置Vim编辑器</h2><p>创建配置文件</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">vim ~<span class="hljs-string">/.vimrc</span><br></code></pre></td></tr></table></figure><p>将以下内容粘贴进去</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs julia"><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;vim</span>实用配置: https://www.xiebruce.top/<span class="hljs-number">594.</span><span class="hljs-string">html&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;&quot;&quot;&quot;&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">syntax on           &quot;</span>语法高亮<br><span class="hljs-string">&quot;退格键默认删除光标所在字符，但这样感觉怪怪的，所以我们可以设置它删除光标所在字符的前一个字符，看起来更符合直观的印象</span><br><span class="hljs-string">set backspace=2</span><br><span class="hljs-string">set number          &quot;</span>显示行号，可简写为：set nu，取消：set nonu<br>set cursorline      <span class="hljs-string">&quot;光标所在行显示一条下划线</span><br><span class="hljs-string">set hlsearch        &quot;</span>高亮显示查询出来的结果<br>set incsearch       <span class="hljs-string">&quot;搜索的时候逐字高亮匹配</span><br><span class="hljs-string">set ruler           &quot;</span>光标移动时，编辑器底部显示当前行号与列号<br>set nocompatible    <span class="hljs-string">&quot;不使用vi兼容模式</span><br><span class="hljs-string">set autoread        &quot;</span>文件改动时自动载入<br>set tabstop=<span class="hljs-number">4</span>       <span class="hljs-string">&quot;一个tab所占列数</span><br><span class="hljs-string">set softtabstop=4   &quot;</span>敲入tab键时实际占有的列数<br>set expandtab       <span class="hljs-string">&quot;设置用空格代替tab</span><br><span class="hljs-string">set shiftwidth=4    &quot;</span>底行模式下用:n,m&gt;或:n,m&lt;缩进时，缩进的列数<br>set t_Co=<span class="hljs-number">256</span>        <span class="hljs-string">&quot;terminal Color 支持256色(默认是8色)</span><br><span class="hljs-string">hi comment ctermfg=6 &quot;</span>设置注释颜色<br><br><span class="hljs-string">&quot;解决vim中文乱码问题</span><br><span class="hljs-string">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</span><br><span class="hljs-string">set termencoding=utf-8</span><br><span class="hljs-string">set encoding=utf-8</span><br><span class="hljs-string"></span><br><span class="hljs-string">set smartindent &quot;</span>智能缩进(好处是修改代码时会根据代码规则自动缩进，坏处是当用<span class="hljs-string">`:n,m&gt;`</span>对齐左侧的注释将不会被移动)<br><span class="hljs-string">&quot;set autoindent &quot;</span>自动缩进(这两个差不多，感觉在大括号自动配对时，用智能缩进好点)<br><br><span class="hljs-string">&quot;自动补全单/双引号、圆、中、大括号</span><br><span class="hljs-string">inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span><br><span class="hljs-string">inoremap &quot;</span> <span class="hljs-string">&quot;&quot;</span>&lt;ESC&gt;i<br>inoremap ( ()&lt;ESC&gt;i<br>inoremap [ []&lt;ESC&gt;i<br>inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O<br></code></pre></td></tr></table></figure><h2 id="windows访问linux子系统的文件">Windows访问Linux子系统的文件</h2><p>由于wsl2系统是完整的一个vhdx磁盘文件，所以不能直接访问，可以通过添加网络位置的方式访问:<code>\\wsl$\Ubuntu-18.04</code> 这一网络位置就代表了 WSL2内部文件的地址，根据不同的发行版后缀可能会有所不同，如果你不知道叫什么，可以在命令行内输入<code>wsl --list</code> 查看名称。</p><h2 id="参考文献">参考文献</h2><p>搜索了众多文章，由于完成此篇历时较久，未能一一记录下原文链接，侵权删。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>win10</tag>
      
      <tag>wsl2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microsoft To Do使用心得</title>
    <link href="/2021/04/19/Microsoft-To-Do%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <url>/2021/04/19/Microsoft-To-Do%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="加标签的方法">加标签的方法</h2><p><code>Microsoft To-Do</code>其实可以算是有标签的，在标题里加个空格，再打个英文#，后面接的东西会和#被整体标记为蓝色，点一下就自动进入搜索页面把所有带此标记的项都列出来了例如：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">测试带标签的标题 <span class="hljs-meta">#学习</span><br></code></pre></td></tr></table></figure><h2 id="与安卓手机的同步">与安卓手机的同步</h2><p>安卓手机上下载 <code>微软桌面</code>，登入账号即可实现与电脑端的同步，在手机的负一屏就可以看到各项任务。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Microsoft To Do</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微软免费主机Azure试用记录</title>
    <link href="/2021/04/12/%E5%BE%AE%E8%BD%AF%E5%85%8D%E8%B4%B9%E4%B8%BB%E6%9C%BAAzure%E8%AF%95%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/04/12/%E5%BE%AE%E8%BD%AF%E5%85%8D%E8%B4%B9%E4%B8%BB%E6%9C%BAAzure%E8%AF%95%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="官方说明">官方说明</h2><p>https://azure.microsoft.com/zh-cn/free/free-account-faq/</p><h2 id="与主机相关的免费服务">与主机相关的免费服务</h2><table><thead><tr><th>产品</th><th>免费时长</th></tr></thead><tbody><tr><td>通过将两个 64 GB (P6) SSD 存储合并得到的 128 GB 托管磁盘，外加 1 GB快照和 2 百万个 I/O 操作</td><td>12个月</td></tr><tr><td>15 GB 的出站数据传输带宽，无限免费入站数据传输</td><td>12个月</td></tr><tr><td>750 小时适用于 Microsoft Windows Server 的 Azure B1S常规用途虚拟机使用时间</td><td>12个月</td></tr><tr><td>750 小时适用于 Linux 的 Azure B1S 常规用途虚拟机使用时间</td><td>12个月</td></tr><tr><td>1,500 小时的动态公共 IP 地址，用于 B1S 虚拟机</td><td>12个月</td></tr><tr><td>5 GB 的出站数据传输带宽，无限免费入站数据传输</td><td>永久免费</td></tr></tbody></table><h2 id="免费试用注意事项">免费试用注意事项</h2><p>1.虚拟机必须选择B1S型号</p><p>2.最多可以建2个虚拟机：1个linux和1个windowsserver，但注意共用15G出站流量，超出部分会计费</p><p>3.建立虚拟机时默认磁盘是30G的（收费），修改磁盘大小需要先停止虚拟机，然后改为64GP6</p><p>4.ip地址必须选择动态ip，每次重启会变更ip，如若选择静态ip会按小时计费</p><h2 id="合理的使用方式">合理的使用方式</h2><p>每个月15G出站流量，绝对不要挂梯子来看视频跳板机：https://51.ruyo.net/14393.html上述文章评论里一个大佬给的iptables中转方案 <figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tcl"><span class="hljs-comment"># 直接在中转机上用iptable命令设置一下就nat 就好了</span><br>echo <span class="hljs-number">1</span> &gt; /<span class="hljs-keyword">proc</span>/sys/net/ipv4/ip_forward<br>iptables -t<span class="hljs-title"> nat</span> -A<span class="hljs-title"> PREROUTING</span> -p<span class="hljs-title"> tcp</span> -m<span class="hljs-title"> tcp</span> --dport 222 -j<span class="hljs-title"> DNAT</span> --to-destination<span class="hljs-title"> X.X.X.X:22</span><br><span class="hljs-title">iptables</span> -t<span class="hljs-title"> nat</span> -I<span class="hljs-title"> POSTROUTING</span> -p<span class="hljs-title"> tcp</span> --dport 22 -j<span class="hljs-title"> MASQUERADE</span><br><span class="hljs-title">#</span> 在连接X.X.X.X时，直接连接中转机端口222就行了，很纯粹的TCP中转<br></code></pre></td></tr></table></figure></p><h2 id="免费服务踩坑记">免费服务踩坑记</h2><p>https://www.taterli.com/7291/ 总之撸羊毛别被反撸</p><h2 id="取消订阅官方说明">取消订阅官方说明</h2><p>https://docs.microsoft.com/zh-cn/azure/cost-management-billing/manage/cancel-azure-subscription</p><h2 id="移除绑定的信用卡">移除绑定的信用卡</h2><p>http://andy51002000.blogspot.com/2019/09/azure.html</p><h2 id="后记">后记</h2><p>在上一个计费周期2021/4/17 -2021/5/16，费用为0，说明上述免费注意事项ok</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>禁止恶意ip连接服务器</title>
    <link href="/2021/04/08/%E7%A6%81%E6%AD%A2%E6%81%B6%E6%84%8FIP%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2021/04/08/%E7%A6%81%E6%AD%A2%E6%81%B6%E6%84%8FIP%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="实现原理">实现原理</h2><p>由于 <code>/var/log/auth.log</code>会记录所有用户的登录信息，通过提取 <code>Failed password</code>类型的连接ip，然后将其加入 <code>/etc/hosts.deny</code>文件，就可以禁止该ip再次连接。</p><h2 id="具体步骤">具体步骤</h2><p>1.首先确保安装了python</p><p>2.然后在 <code>/home</code> 目录下 <code>touch bannedip.py</code>，写入如下内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;/etc/hosts.deny&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    deny = f.read().split(<span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;/var/log/auth.log&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    log = f.read().split(<span class="hljs-string">&quot;\n&quot;</span>)<br><br>ipset = <span class="hljs-built_in">set</span>()<br><br><span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> log:<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Failed password&#x27;</span> <span class="hljs-keyword">in</span> each:<br>        ip = each.split(<span class="hljs-string">&#x27; from &#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27; port &#x27;</span>)[<span class="hljs-number">0</span>]<br>        writein = <span class="hljs-string">&#x27;ALL: &#x27;</span> + ip<br>        ipset.add(writein)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;/etc/hosts.deny&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> ipset:<br>        <span class="hljs-keyword">if</span> each <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> deny:<br>            <span class="hljs-built_in">print</span>(each)<br>            f.write(each + <span class="hljs-string">&#x27;\n&#x27;</span>)<br></code></pre></td></tr></table></figure><p>3.创建定时任务，每5分钟执行一次</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">crontab -e<br>*<span class="hljs-regexp">/5 * * * * python /</span>home/bannedip.py<br></code></pre></td></tr></table></figure><p>4.手动将自己的ip（段）加入白名单 <code>/etc/hosts.allow</code>，不然万一输错密码，把自己也关在外边就不好玩啦</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>ban ip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test-updatedtime</title>
    <link href="/2021/04/05/test-updatedtime/"/>
    <url>/2021/04/05/test-updatedtime/</url>
    
    <content type="html"><![CDATA[<blockquote><p>会按updated时间排序吗？</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>创建、部署、备份Hexo博客一条龙</title>
    <link href="/2021/04/05/%E5%88%9B%E5%BB%BA%E3%80%81%E9%83%A8%E7%BD%B2%E3%80%81%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E4%B8%80%E6%9D%A1%E9%BE%99/"/>
    <url>/2021/04/05/%E5%88%9B%E5%BB%BA%E3%80%81%E9%83%A8%E7%BD%B2%E3%80%81%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E4%B8%80%E6%9D%A1%E9%BE%99/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作">准备工作</h2><p>安装环境部署：</p><p>安装git： <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> git-core<br></code></pre></td></tr></table></figure> 安装node： <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl -fsSL http<span class="hljs-variable">s:</span>//<span class="hljs-keyword">deb</span>.nodesource.<span class="hljs-keyword">com</span>/setup_15.<span class="hljs-keyword">x</span> | bash -<br>apt-<span class="hljs-built_in">get</span> install -<span class="hljs-keyword">y</span> nodejs<br></code></pre></td></tr></table></figure></p><h2 id="安装hexo">安装hexo</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 安装命令</span><br>npm <span class="hljs-keyword">install </span>-g hexo-cli<br><span class="hljs-comment"># 初始化博客（会自动在当前文件夹创建blog文件夹）</span><br>hexo init <span class="hljs-keyword">blog</span><br><span class="hljs-keyword">cd </span><span class="hljs-keyword">blog</span><br><span class="hljs-keyword"># </span>根据package.<span class="hljs-keyword">json文件里面的内容安装各种需要的包，安装到node_modules文件夹</span><br><span class="hljs-keyword">npm </span><span class="hljs-keyword">install</span><br><span class="hljs-keyword"># </span>启动hexo服务器（注意运行此命令时应该在<span class="hljs-keyword">blog文件夹下）</span><br><span class="hljs-keyword">hexo </span>server<br></code></pre></td></tr></table></figure><p>如果无特殊需求，这时一个简单的hexo博客已经建好了</p><h2 id="安装next主题">安装next主题</h2><p>切换到blog文件夹运行下列命令 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/next-theme/</span>hexo-theme-<span class="hljs-keyword">next</span> themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure>修改网站_config.yml，启用主题 <figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">theme:</span> <span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure></p><h2 id="数学公式支持设置">数学公式支持设置</h2><p>卸载渲染包 <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> uninstall hexo-renderer-marked<br></code></pre></td></tr></table></figure> 安装pandoc作为新的渲染包 <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-renderer-pandoc<br></code></pre></td></tr></table></figure>linux系统安装pandoc包 <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> pandoc<br></code></pre></td></tr></table></figure>解决渲染错误问题（这个错误可能跟linux安装的pandoc包版本新旧有关）<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 将node_modules\hexo-renderer-pandoc\index.js中的</span><br><span class="hljs-keyword">var</span> args = [ <span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;markdown-smart&#x27;</span>+extensions, <span class="hljs-string">&#x27;-t&#x27;</span>, <span class="hljs-string">&#x27;html-smart&#x27;</span>, math]<br><span class="hljs-meta"># 改成</span><br><span class="hljs-keyword">var</span> args = [ <span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;markdown&#x27;</span>+extensions, <span class="hljs-string">&#x27;-t&#x27;</span>, <span class="hljs-string">&#x27;html&#x27;</span>, math]<br></code></pre></td></tr></table></figure>开启next主题的mathjax支持,修改themes/next/_config.yml中关于math的设置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Math Formulas Render Support</span><br><span class="hljs-attr">math:</span><br>  <span class="hljs-comment"># Default (true) will load mathjax / katex script on demand.</span><br>  <span class="hljs-comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span><br>  <span class="hljs-comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span><br>  <span class="hljs-attr">per_page:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span><br>  <span class="hljs-attr">mathjax:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># See: https://mhchem.github.io/MathJax-mhchem/</span><br>    <span class="hljs-attr">mhchem:</span> <span class="hljs-literal">false</span><br><br>  <span class="hljs-comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span><br>  <span class="hljs-attr">katex:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span><br>    <span class="hljs-attr">copy_tex:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></p><h2 id="博文格式范例">博文格式范例</h2><p>http://yearito.cn/posts/hexo-writing-skills.html</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tag:</span> <span class="hljs-string">标签</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">技术</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">数学</span><br><span class="hljs-attr">mathjax:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="关于next主题的配置">关于next主题的配置</h2><p>详见next主题帮助页</p><h2 id="备份与恢复">备份与恢复</h2><h3id="使用插件hexo-git-backup进行备份">使用插件hexo-git-backup进行备份</h3><p>1.插件安装： <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-git-<span class="hljs-keyword">backup </span>--save<br></code></pre></td></tr></table></figure>2.新建一个<strong>私有的github库</strong>：比如<code>git@github.com:xx/xx.git</code></p><p>3.插件设置：设置 <code>_config.yml</code> ，在最后添加如下内容<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">backup:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  theme:</span> next<br><span class="hljs-symbol">  message:</span> Back up hexoblog<br><span class="hljs-symbol">  repository:</span><br><span class="hljs-symbol">    origin:</span> git@github.com:xx/xx.git,master<br></code></pre></td></tr></table></figure> 其中 <code>repository</code> 项，网上的教程是填写<code>github: git@github.com:xx/xx.git,master</code>，但是备份时会提示错误说 <figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span> <span class="hljs-keyword">Start</span> backup: git<br>[backup <span class="hljs-number">0431</span>bed] Site updated: <span class="hljs-number">2020</span><span class="hljs-number">-02</span><span class="hljs-number">-29</span> <span class="hljs-number">21</span>:<span class="hljs-number">16</span>:<span class="hljs-number">51</span><br><span class="hljs-number">1</span> file changed, <span class="hljs-number">1</span> insertion(+), <span class="hljs-number">1</span> deletion(-)<br>fatal: <span class="hljs-string">&#x27;github&#x27;</span> does <span class="hljs-keyword">not</span> appear <span class="hljs-keyword">to</span> be a git repository<br>fatal: Could <span class="hljs-keyword">not</span> <span class="hljs-keyword">read</span> <span class="hljs-keyword">from</span> remote repository.<br>Please make sure you have the correct <span class="hljs-keyword">access</span> rights<br><span class="hljs-keyword">and</span> the repository <span class="hljs-keyword">exists</span>.<br><span class="hljs-keyword">INFO</span> Backup done: git<br></code></pre></td></tr></table></figure> 后来按这个<ahref="https://github.com/coneycode/hexo-git-backup/issues/40#issue-573488936"title="issue">issue</a>更改为 <code>origin</code> 就正常了</p><p>4.备份命令 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 二选一</span><br>hexo <span class="hljs-keyword">backup</span><br><span class="hljs-keyword">hexo </span><span class="hljs-keyword">b</span><br></code></pre></td></tr></table></figure>5.可选动作：执行第4步备份之前，可以将原先主机的ssh私钥一同备份，这样在新电脑上恢复的时候，可以先将私钥下载下来放在.ssh文件夹，才能进行ssh连接了</p><h3 id="恢复">恢复</h3><p>1.在新电脑上配置好nodejs，git</p><p>2.放置好用于建立和github连接的ssh私钥</p><p>3.执行下列命令： <figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 可选动作，我是为了配置数学公式渲染</span><br>apt install pandoc<br><span class="hljs-meta"># 安装hexo</span><br>npm install -g hexo-cli<br><span class="hljs-meta"># 在你想把hexoblog放置的文件夹内执行</span><br>git clone git@github.com:xx/xx.git<br><span class="hljs-meta"># 进入hexoblog文件夹，安装依赖包</span><br>npm install<br></code></pre></td></tr></table></figure>4.恢复数学公式渲染设置：由于我们对依赖包内的<code>hexo-renderer-pandoc</code>做的修改并没有备份，所以重新修改一下</p><p>5.<code>hexo server</code> 一下，测试未报错即可</p><p>6.如果有多台电脑需要同步，备份以后，在需要同步的电脑上<code>git pull</code> 一下，如果安装了新的hexo插件，记得还要<code>npm install</code> 一下，不然就有可能在 <code>hexo g</code>的时候出错，或者不报错但是出现莫名其妙的问题。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>月考错题集</title>
    <link href="/2021/03/21/%E6%9C%88%E8%80%83%E9%94%99%E9%A2%98/"/>
    <url>/2021/03/21/%E6%9C%88%E8%80%83%E9%94%99%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="高一上学期第一次月考">高一上学期第一次月考</h2><p>21.用清水洗一堆衣服上残留的污渍，用水越多，洗掉的污渍量也越多，但总还有污渍残留在衣服上.现作如下规定：用<spanclass="math inline">\(x\)</span>单位的水清洗1次后，衣服上残留的污渍与本次清洗前残留的污渍之比为函数<spanclass="math inline">\(f(x)=\dfrac{2}{2+x^2}\)</span>（1）（i）试解释<span class="math inline">\(f(0)\)</span>与<spanclass="math inline">\(f(1)\)</span>的实际意义； （ii）写出函数<spanclass="math inline">\(f(x)\)</span>应该满足的条件或具有的性质；（写出至少2条，不需要证明）（2）现有<spanclass="math inline">\(a(a&gt;0)\)</span>单位量的水，可以清洗一次，也可以把水平均分成2份后清洗两次，哪种方案清洗后衣服上残留的污渍比较少？请说明理由.</p><p>22.已知<span class="math inline">\(f(x)=x\cdot |x|\)</span>（1）若<span class="math inline">\(\existsx\in[1,+\infty)\)</span>，使<spanclass="math inline">\(f(x-2a)-a&lt;0\)</span>成立，求实数<spanclass="math inline">\(a\)</span>的取值范围. （2）若<spanclass="math inline">\(g(x)=x|x|+|mx-1|(m&gt;0)\)</span>，在<spanclass="math inline">\(x\in (-1,+\infty)\)</span>上有最小值，求实数<spanclass="math inline">\(m\)</span>的取值范围.</p><div style="page-break-after: always;"></div><h2 id="高一上学期期中考试">高一上学期期中考试</h2><p>12.已知函数<spanclass="math inline">\(f(x)=(\dfrac{1}{3})^x-\ln{x}\)</span>，若<spanclass="math inline">\(a&lt;b&lt;c\)</span>且满足<spanclass="math inline">\(f(a)f(b)f(c)&lt;0\)</span>，若实数<spanclass="math inline">\(d\)</span>是函数<spanclass="math inline">\(y=f(x)\)</span>的一个零点，那么下列结论中，有可能成立的是</p><p><span class="math inline">\(A.d&lt;a \qquad\qquad\)</span> <spanclass="math inline">\(B.d&gt;b \qquad\qquad\)</span> <spanclass="math inline">\(C.d&lt;c \qquad\qquad\)</span> <spanclass="math inline">\(D.d&gt;c\)</span></p><p>21.已知函数<span class="math inline">\(f(x)=2^x,g(x)=\log_2x\)</span>. （1）若<span class="math inline">\(x_0\)</span>是方程<spanclass="math inline">\(f(x)=\dfrac{3}{2}-x\)</span>的根，证明：<spanclass="math inline">\(2^{x_0}\)</span>是方程<spanclass="math inline">\(g(x)=\dfrac{3}{2}-x\)</span>的根；（2）设方程<spanclass="math inline">\(f(x-1)=\dfrac{5}{2}-x,g(x-1)=\dfrac{5}{2}-x\)</span>的根分别是<spanclass="math inline">\(x_1,x_2\)</span>，求<spanclass="math inline">\(x_1+x_2\)</span>的值.</p><p>22.已知<span class="math inline">\(f(x)=\log_a g(x)\)</span>，且<spanclass="math inline">\(f(x)\)</span>是定义在<spanclass="math inline">\(\mathbb{R}\)</span>上的奇函数，当<spanclass="math inline">\(x&gt;0\)</span>时，<spanclass="math inline">\(g(x)=ax^2-ax+1\)</span>. （1）若<spanclass="math inline">\(f(x)\)</span>在<spanclass="math inline">\([1,2]\)</span>上的最大值是2，求实数<spanclass="math inline">\(a\)</span>的值； （2）当<spanclass="math inline">\(a&gt;1\)</span>时，若对任意<spanclass="math inline">\(x_1\in[1,2]\)</span>，<spanclass="math inline">\(x_2\in (1,2]\)</span>，恒有<spanclass="math inline">\(\lambda[g(x_1)+g(-x_1)]\lef(x_2)+\dfrac{1}{f(x_2)}\)</span>，求<spanclass="math inline">\(\lambda\)</span>的取值范围.</p><div style="page-break-after: always;"></div><h2 id="高一第三次月考联考">高一第三次月考联考</h2><p>10.已知<spanclass="math inline">\(f(\sqrt{2x^2-1})=4x^2-3\)</span>，则下列结论错误的是（）</p><p><span class="math inline">\(A.f(1)=1\qquad\)</span> <spanclass="math inline">\(B.f(x)=2x^2-1\qquad\)</span> <spanclass="math inline">\(C.f(x)\)</span>是偶函数<spanclass="math inline">\(\qquad\)</span> <spanclass="math inline">\(D.f(x)\)</span>有唯一零点</p><p>12.给出下面四个结论，其中不正确的是（ ）</p><p><spanclass="math inline">\(A.\)</span>两次购买同一种物品，可以用两种不同的策略，第一种是不考虑物品价格的升降，每次购买这种物品所花的钱数一定；第二种是不考虑物品价格的升降，每次购买这种物品的数量一定，则若<spanclass="math inline">\(n\)</span>次（<spanclass="math inline">\(n\ge2\)</span>）购买同一物品，用第一种策略比较经济</p><p><span class="math inline">\(B.\)</span>若二次函数<spanclass="math inline">\(f(x)=24ax^2+4x-1(a\ne0)\)</span>在区间<spanclass="math inline">\((-1,1)\)</span>内恰有一个零点，则由零点存在定理知，实数<spanclass="math inline">\(a\)</span>的取值范围是<spanclass="math inline">\((-\dfrac{1}{8},0)\cup(0,\dfrac{5}{24})\)</span></p><p><span class="math inline">\(C.\)</span>已知函数<spanclass="math inline">\(f(x)=|\lg x|\)</span>，若<spanclass="math inline">\(0&lt;a&lt;b\)</span>，且<spanclass="math inline">\(f(a)=f(b)\)</span>，则<spanclass="math inline">\(3b+2a\)</span>的取值范围是<spanclass="math inline">\([2\sqrt6,+\infty)\)</span></p><p><span class="math inline">\(D.\)</span>设矩形<spanclass="math inline">\(ABCD (AB&gt;AD)\)</span>的周长为24，把<spanclass="math inline">\(\triangle{ABC}\)</span>沿<spanclass="math inline">\(AC\)</span>向<spanclass="math inline">\(\triangle{ADC}\)</span>折叠，<spanclass="math inline">\(AB\)</span>折过去后交<spanclass="math inline">\(DC\)</span>于点<spanclass="math inline">\(P\)</span>，设<spanclass="math inline">\(AB=x\)</span>，则<spanclass="math inline">\(\triangle{ADP}\)</span>的面积是关于<spanclass="math inline">\(x\)</span>的函数且最大值为<spanclass="math inline">\(108-70\sqrt{2}\)</span></p><p>21.新冠肺炎疫情发生后，政府为了支持企业复工复产，某地政府决定向当地企业发放补助款，其中对纳税额<spanclass="math inline">\(x\)</span>（万元）在<spanclass="math inline">\(x\in[4,8]\)</span>的小微企业做统一方案，方案要求同时具备下列两个条件：①补助款<spanclass="math inline">\(f(x)\)</span>（万元）随企业原纳税额<spanclass="math inline">\(x\)</span>（万元）的增加而增加；②补助款不低于原纳税额的<spanclass="math inline">\(50\%\)</span>.经测算，政府决定采用函数模型<spanclass="math inline">\(f(x)=\dfrac{x}{4}-\dfrac{m}{x}+4\)</span>（其中<spanclass="math inline">\(m\)</span>为参数）作为补助款发放方案.（1）当使用参数<spanclass="math inline">\(m=13\)</span>是否满足条件，并说明理由；（2）求同时满足条件①②的参数<spanclass="math inline">\(m\)</span>的取值范围.</p><p>22.已知函数<spanclass="math inline">\(f(x)=\dfrac{3^x-a}{3^x+1}(a\in\mathbb{R})\)</span>.（1）若函数<span class="math inline">\(f(x)\)</span>为奇函数，求<spanclass="math inline">\(a\)</span>的值，并求此时函数<spanclass="math inline">\(f(x)\)</span>的值域； （2）若存在<spanclass="math inline">\(x_1&lt;0&lt;x_2\)</span>,使<spanclass="math inline">\(f(x_1)+f(x_2)=0\)</span>，求实数<spanclass="math inline">\(a\)</span>的取值范围.</p><h2 id="高一下学期第一次月考试题">高一下学期第一次月考试题</h2><p>21.从秦朝统一全国币制到清朝末年，圆形方孔铜钱（简称“孔方兄”）是我国使用时间长达两千多年的货币，如图1，这是一枚清朝同治年间的铜钱，其边框是由大小不等的两同心圆围成的，内嵌正方形孔的中心与同心圆圆心重合，正方形外部，圆框内部刻有4个字“同治重宝”.某模具厂计划仿制这样的铜钱作为纪念品，其小圆内部图纸设计如图2所示，小圆直径1厘米，内嵌一个大正方形孔，四周是四个全等的小正方形（边长比孔的边长小），每个正方形有两个顶点在圆周上，另两个顶点在孔边上，四个小正方形内用于刻铜钱上的字.设<spanclass="math inline">\(\angleOAB=\theta\)</span>，五个正方形的面积和为<spanclass="math inline">\(S\)</span>.</p><p>（1）求面积<span class="math inline">\(S\)</span>关于<spanclass="math inline">\(\theta\)</span>的函数表达式，并求<spanclass="math inline">\(\tan\theta\)</span>的范围；</p><p>（2）求面积<spanclass="math inline">\(S\)</span>的最小值，并求出此时<spanclass="math inline">\(\tan\theta\)</span>的值.</p><p><imgsrc="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-06-01_16-42-33.jpg" /></p><h2 id="高一下学期第二次月考试题">高一下学期第二次月考试题</h2><p>9.若复数<span class="math inline">\(z\)</span>满足<spanclass="math inline">\((z+2)\mathbb{i}=3+4\mathbb{i}\)</span>（<spanclass="math inline">\(\mathbb{i}\)</span>为虚数单位），则下列结论正确的有（）</p><p><span class="math inline">\(A.z\)</span>的虚部为<spanclass="math inline">\(-3\mathbb{i}\qquad\)</span> <spanclass="math inline">\(B.|z|=\sqrt{13}\qquad\)</span> <spanclass="math inline">\(C.z\)</span>的共轭复数为<spanclass="math inline">\(2+3\mathbb{i}\qquad\)</span> <spanclass="math inline">\(D.z\)</span>是第三象限的点</p><p>11.在<span class="math inline">\(\triangle ABC\)</span>中，角<spanclass="math inline">\(A,B,C\)</span>的对边分别为<spanclass="math inline">\(a,b,c\)</span>，则下列结论中正确的是（ ）</p><p><span class="math inline">\(A.\)</span>在<spanclass="math inline">\(\triangle ABC\)</span>中，若<spanclass="math inline">\(A&gt;B\)</span>，则<spanclass="math inline">\(\sin A&gt;\sin B\)</span></p><p><span class="math inline">\(B.\)</span>若<spanclass="math inline">\(\sin 2A=\sin 2B\)</span>，则<spanclass="math inline">\(\triangle ABC\)</span>是等腰三角形</p><p><span class="math inline">\(C.\)</span>若<spanclass="math inline">\(a\cos B-b\cos A=c\)</span>，则<spanclass="math inline">\(\triangle ABC\)</span>是直角三角形</p><p><span class="math inline">\(D.\)</span>若<spanclass="math inline">\(a^2+b^2-c^2&gt;0\)</span>，则<spanclass="math inline">\(\triangle ABC\)</span>是锐角三角形</p><p>14.已知向量<spanclass="math inline">\(\overrightarrow{a}=(1,3),\overrightarrow{b}=(\sin\theta,\sin\theta-\cos\theta)\)</span>，若<spanclass="math inline">\(a//b\)</span>，则<spanclass="math inline">\(\tan2\theta=\)</span></p><p>16.<span class="math inline">\(\triangle ABC\)</span>的内角<spanclass="math inline">\(A,B,C\)</span>所对的边分别是<spanclass="math inline">\(a,b,c\)</span>，已知<spanclass="math inline">\(\dfrac{\cos C}{c}+\dfrac{\cosB}{b}=\dfrac{1}{a}\)</span>，则<spanclass="math inline">\(A\)</span>的取值范围是_______</p><p>22.已知函数<spanclass="math inline">\(f(x)=\dfrac{x^2-3x+4}{x},g(x)=|\log_2x|\)</span></p><p>（1）若关于<span class="math inline">\(x\)</span>的方程<spanclass="math inline">\(g(x)=n\)</span>有两个不等根<spanclass="math inline">\(\alpha,\beta(\alpha&lt;\beta)\)</span>，求<spanclass="math inline">\(\alpha\beta\)</span>的值；</p><p>（2）是否存在实数<spanclass="math inline">\(a\)</span>，使得对任意<spanclass="math inline">\(m\in[1,2]\)</span>，关于<spanclass="math inline">\(x\)</span>的方程<spanclass="math inline">\(4g^2(x)-4ag(x)+3a-1-f(m)=0\)</span>在区间<spanclass="math inline">\([\dfrac{1}{8},4]\)</span>上总有3个不等根<spanclass="math inline">\(x_1,x_2,x_3\)</span>，若存在，求出实数<spanclass="math inline">\(a\)</span>与<span class="math inline">\(x_1\cdotx_2\cdot x_3\)</span>的取值范围；若不存在，说明理由.</p><h2 id="高一下学期第三次月考试题">高一下学期第三次月考试题</h2><p>21.长沙市某棚户区改造建筑用地平面示意图如图所示，经规划调研确定，棚改规划建筑用地近似为圆面，该圆面的内接四边形<spanclass="math inline">\(ABCD\)</span>是原棚户建筑用地，测量可知边界<spanclass="math inline">\(AB=4\)</span>万米，<spanclass="math inline">\(BC=6\)</span>万米，<spanclass="math inline">\(AD=4\)</span>万米，<spanclass="math inline">\(CD=2\)</span>万米.</p><p>（1）请计算原棚户区建筑用地<spanclass="math inline">\(ABCD\)</span>的面积及线段<spanclass="math inline">\(AC\)</span>的长；</p><p>（2）因地理条件的限制，边界<spanclass="math inline">\(AD,CD\)</span>不能变更，而边界<spanclass="math inline">\(AB,BC\)</span>可以调整.为了提高棚户区改造建筑用地的利用率，请在弧线上设计一点<spanclass="math inline">\(P\)</span>，使得棚户区改造的建筑用地<spanclass="math inline">\(APCD\)</span>的面积最大，并求最大值.</p><p><img src="https://gitee.com/andypl/imagehost/raw/master/img/Snipaste_2021-06-01_21-56-17.jpg" style="zoom: 80%;" /></p><p>22.已知函数<spanclass="math inline">\(f(x)=\lg(\dfrac{2}{x-1}+a),a\in\mathbf{R}\)</span>.</p><p>（1）若函数<spanclass="math inline">\(f(x)\)</span>是奇函数，求实数<spanclass="math inline">\(a\)</span>的值；</p><p>（2）在（1）的条件下，判断函数<spanclass="math inline">\(y=f(x)\)</span>与函数<spanclass="math inline">\(y=\lg{2^x}\)</span>的图像公共点个数，并说明理由；</p><p>（3）当<span class="math inline">\(x\in[1,2)\)</span>时，函数<spanclass="math inline">\(y=f(2^x)\)</span>的图象始终在函数<spanclass="math inline">\(y=\lg(4-2^x)\)</span>的图象上方，求实数<spanclass="math inline">\(a\)</span>的取值范围.</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>月考错题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>乐播投屏PC版</title>
    <link href="/2020/12/16/%E4%B9%90%E6%92%AD%E6%8A%95%E5%B1%8FPC%E7%89%88/"/>
    <url>/2020/12/16/%E4%B9%90%E6%92%AD%E6%8A%95%E5%B1%8FPC%E7%89%88/</url>
    
    <content type="html"><![CDATA[<p>破解版下载：<ahref="https://www.lanzous.com/i78svyd">https://www.lanzous.com/i78svyd</a></p><p>目前下载到nas里面 打开提示升级，取消不升级</p><p>投屏方式有：整屏投影，选择应用程序投影，扩展屏投影</p><p>使用感觉很好！</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>乐播投屏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS测试脚本</title>
    <link href="/2020/12/15/Vps%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/"/>
    <url>/2020/12/15/Vps%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>脚本1 纯净，不安装任何东西。均为国内节点。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">wget -qO- <span class="hljs-keyword">bench.sh </span> <span class="hljs-keyword">bash</span><br></code></pre></td></tr></table></figure><p>脚本2 有国内节点，可看上行和下行。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -qO- https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/oooldking/</span>script<span class="hljs-regexp">/master/</span>superbench.sh  bash<br></code></pre></td></tr></table></figure><p>脚本3</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">(<span class="hljs-built_in">wget</span> <span class="hljs-literal">-qO</span>- wget.racing/nench.sh  bash; <span class="hljs-built_in">wget</span> <span class="hljs-literal">-qO</span>- wget.racing/nench.sh  bash) <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span>  <span class="hljs-built_in">tee</span> nench.log<br></code></pre></td></tr></table></figure><p>脚本4</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">curl -s bench<span class="hljs-selector-class">.wget</span><span class="hljs-selector-class">.racing</span>  bash<br></code></pre></td></tr></table></figure><p>脚本5 可比较真实的测试服务器带宽</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -s https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/masonr/y</span>et-another-bench-script<span class="hljs-regexp">/master/y</span>abs.sh  bash<br></code></pre></td></tr></table></figure><p>脚本6可测试是否支持Netflxi等（不一定准确）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fsL https:<span class="hljs-regexp">//i</span>lemonra.<span class="hljs-keyword">in</span>/LemonBenchIntl  bash -s fast<br></code></pre></td></tr></table></figure><p>脚本7 全能，测速、加速 DD系统等</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -N --no-check-certificate https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/veip007/</span>hj<span class="hljs-regexp">/master/</span>hj.sh &amp;&amp; chmod +x hj.sh &amp;&amp; bash hj.sh<br></code></pre></td></tr></table></figure><p>脚本8</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">(<span class="hljs-built_in">curl</span> <span class="hljs-literal">-s</span> wget.racing/nench.sh  bash) <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span>  <span class="hljs-built_in">tee</span> nench.log<br></code></pre></td></tr></table></figure><p>脚本9 服务器延迟监测</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">screen -S uping<br>wget -N --no-check-certificate https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/FunctionClub/u</span>Ping<span class="hljs-regexp">/master/u</span>ping.py<br>python uping.py<br></code></pre></td></tr></table></figure><p>脚本10 系统配置、国内速度等</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget -qO- --no-check-certificate https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/qd201211/</span>Linux-SpeedTest<span class="hljs-regexp">/master/</span>superbench.sh  bash<br></code></pre></td></tr></table></figure><p>脚本11 UnixBench跑分，测试主机性能运行10-30分钟后（根据CPU内核数量，运算时间不等）得出分数，越高越好。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">wget --<span class="hljs-keyword">no</span>-check-certificate http<span class="hljs-variable">s:</span>//zhujiwiki.<span class="hljs-keyword">com</span>/<span class="hljs-keyword">wp</span>-content/uploads/<span class="hljs-number">2018</span>/<span class="hljs-number">07</span>/unixbench.<span class="hljs-keyword">sh</span><br>chmod +<span class="hljs-keyword">x</span> unixbench.<span class="hljs-keyword">sh</span><br>./unixbench.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>脚本12、测试是否可以观看Netflix（奈飞） 访问：<ahref="https://netflix.com/title/80018499">https://netflix.com/title/80018499</a>脚本13 测试本地速度 speedtest go版本的一键安装脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">bash &lt;(curl -Lsk https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/BigMangos/</span>speedtest-go-script<span class="hljs-regexp">/master/i</span>nstall.sh)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS测试脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装p2pspider和live-torrent</title>
    <link href="/2020/12/15/Docker%E5%AE%89%E8%A3%85P2pSpider%E5%92%8Clive-torrent/"/>
    <url>/2020/12/15/Docker%E5%AE%89%E8%A3%85P2pSpider%E5%92%8Clive-torrent/</url>
    
    <content type="html"><![CDATA[<h2 id="安装docker和docker-compose">安装docker和docker-compose：</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">apt -y update<br>apt -y install curl<br>curl -sSL https:<span class="hljs-regexp">//g</span>et.docker.com/  sh<br>systemctl start docker<br>systemctl enable docker<br>curl -L https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/docker/</span>compose<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/1.27.4/</span>docker-compose-`uname -s`-`uname -m` -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><h2id="安装p2pspider搜刮torrent资源">安装p2pspider，搜刮torrent资源</h2><p>新建一个目录/新建一个docker-compose.yml文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/opt/</span>p2pspider-docker &amp;&amp; cd <span class="hljs-regexp">/opt/</span>p2pspider-docker &amp;&amp; nano docker-compose.yml<br></code></pre></td></tr></table></figure><p>写入如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.5&#x27;</span><br><br><span class="hljs-attr">services:</span><br>    <span class="hljs-attr">spider:</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">imlala/p2pspider:latest</span><br>        <span class="hljs-attr">container_name:</span> <span class="hljs-string">p2pspider</span><br>        <span class="hljs-attr">depends_on:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">mongodb-spider</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">redis-spider</span><br>        <span class="hljs-attr">environment:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">SITE_NAME=TorrentDatabase</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">USER_NAME=imlala</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">PASS_WORD=23333</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">SPIDER_MODE=1</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">MONGODB_HOST=mongodb://mongodb-spider</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">REDIS_HOST=redis-spider</span><br>        <span class="hljs-attr">ports:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8080:8080&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;6881:6881/udp&quot;</span><br>        <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br><br>    <span class="hljs-attr">mongodb-spider:</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">mongo</span><br>        <span class="hljs-attr">container_name:</span> <span class="hljs-string">mongodb-spider</span><br>        <span class="hljs-attr">volumes:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">./mongodb:/data/db</span><br>        <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br><br>    <span class="hljs-attr">redis-spider:</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">redis</span><br>        <span class="hljs-attr">container_name:</span> <span class="hljs-string">redis-spider</span><br>        <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><p>几个environment的使用方法：</p><p>1.SITE_NAME设置你的网站名字，可以任意填写。</p><p>2.USER_NAME/PASS_WORD设置你的账号和密码，如果你想公开给任何人访问这两个env可以不设置直接删除即可。</p><p>3.SPIDER_MODE可选配置1/2/3，1代表1H1G的配置，2代表2H2G的配置，3代表最大效率运行爬虫。不设置这个env表示最小配置（512M内存）</p><p>4.MONGODB_HOST/REDIS_HOST的主机名必须和docker-compose下面的服务名对应。</p><p>没问题up起来即可：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>备份还原很简单，直接打包/opt/p2pspider-docker目录，传到别的机器上解压up起来即可。</p><p>在512M内存的小鸡上运行，每天大概可以搜刮20w的torrent</p><h2id="安装live-torrent在线播放磁力连接">安装live-torrent，在线播放磁力连接</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> <span class="hljs-attribute">--restart</span>=always --name live-torrent -d -p 8080:8080 davenchy/live-torrent<br></code></pre></td></tr></table></figure><p>搜索live-torrent在线播放的缓存文件：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> <span class="hljs-regexp">/var/</span>lib/docker -<span class="hljs-keyword">size</span> +<span class="hljs-number">100</span>M<br></code></pre></td></tr></table></figure><p>然后就可以看到一堆缓存的文件，做个脚本定时删除即可</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>p2pspider</tag>
      
      <tag>live-torrent</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>https证书申请及安装</title>
    <link href="/2020/12/09/Https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
    <url>/2020/12/09/Https%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="使用acme.sh申请证书">使用acme.sh申请证书</h1><h2 id="准备工作">准备工作</h2><p>1.将域名解析到vps</p><p>2.vps安装nginx，注意找到nginx默认的网站文件夹，下面安装有用</p><h2 id="安装acme.sh">安装acme.sh</h2><p>详细见https://wsgzao.github.io/post/acme/ 我是采用以下方式安装的</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">acme.sh  --issue  -d mydomain.com -d www.mydomain.com  --webroot  <span class="hljs-regexp">/home/</span>wwwroot<span class="hljs-regexp">/mydomain.com/</span><br></code></pre></td></tr></table></figure><p>将mydomain.com改为自己的域名，把/home/wwwroot/mydomain.com/改为nginx默认的网站文件夹</p><h2id="对于二级域名申请证书省心好用使用前确保80端口没有占用">对于二级域名申请证书（省心好用，使用前确保80端口没有占用）</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span>  --<span class="hljs-comment">issue</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain</span><span class="hljs-string">.</span><span class="hljs-comment">com</span>   --<span class="hljs-comment">standalone</span><br></code></pre></td></tr></table></figure><h2 id="网站安装证书未成功">网站安装证书（未成功）</h2><h1 id="使用certbot安装证书">使用certbot安装证书</h1><h2id="配置nginx.conf中的server_name">配置nginx.conf中的server_name</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># For more information on configuration, see:</span><br><span class="hljs-comment">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="hljs-comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><br><span class="hljs-attribute">user</span> nginx;<br><span class="hljs-attribute">worker_processes</span> auto;<br><span class="hljs-attribute">error_log</span> /var/log/nginx/error.log;<br><span class="hljs-attribute">pid</span> /run/nginx.pid;<br><br><span class="hljs-comment"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span><br><span class="hljs-attribute">include</span> /usr/share/nginx/modules/<span class="hljs-regexp">*.conf</span>;<br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span> <span class="hljs-number">1024</span>;<br>&#125;<br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">log_format</span>  main  <span class="hljs-string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>                      <span class="hljs-string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>                      <span class="hljs-string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;<br><br>    <span class="hljs-attribute">access_log</span>  /var/log/nginx/access.log  main;<br><br>    <span class="hljs-attribute">sendfile</span>            <span class="hljs-literal">on</span>;<br>    <span class="hljs-attribute">tcp_nopush</span>          <span class="hljs-literal">on</span>;<br>    <span class="hljs-attribute">tcp_nodelay</span>         <span class="hljs-literal">on</span>;<br>    <span class="hljs-attribute">keepalive_timeout</span>   <span class="hljs-number">65</span>;<br>    <span class="hljs-attribute">types_hash_max_size</span> <span class="hljs-number">2048</span>;<br><br>    <span class="hljs-attribute">include</span>             /etc/nginx/mime.types;<br>    <span class="hljs-attribute">default_type</span>        application/octet-stream;<br><br>    <span class="hljs-comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span><br>    <span class="hljs-comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span><br>    <span class="hljs-comment"># for more information.</span><br>    <span class="hljs-attribute">include</span> /etc/nginx/conf.d/<span class="hljs-regexp">*.conf</span>;<br><br>    <span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">if</span> ($host = ilovemaths.tk) &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://$host$request_uri;<br>    &#125; <span class="hljs-comment"># managed by Certbot</span><br><br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">listen</span>       [::]:<span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">server_name</span>  ilovemaths.tk;<br>        <span class="hljs-attribute">root</span>         /usr/share/nginx/html;<br><br>        <span class="hljs-comment"># Load configuration files for the default server block.</span><br>        <span class="hljs-attribute">include</span> /etc/nginx/default.d/<span class="hljs-regexp">*.conf</span>;<br><br>        <span class="hljs-attribute">location</span> / &#123;<br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> /<span class="hljs-number">404</span>.html;<br>        <span class="hljs-attribute">location</span> = /<span class="hljs-number">404</span>.html &#123;<br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span> <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span> /50x.html;<br>        <span class="hljs-attribute">location</span> = /50x.html &#123;<br>        &#125;<br><br>&#125;<br><br><span class="hljs-comment"># Settings for a TLS enabled server.</span><br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">444</span> ssl http2 default_server;<br>        <span class="hljs-attribute">listen</span>       [::]:<span class="hljs-number">444</span> ssl http2 default_server;<br>        <span class="hljs-attribute">server_name</span>  ilovemaths.tk;<br>        <span class="hljs-attribute">root</span>         /usr/share/nginx/html;<br>    <span class="hljs-attribute">ssl_certificate</span> /etc/letsencrypt/live/ilovemaths.tk/fullchain.pem; <span class="hljs-comment"># managed by Certbot</span><br>    <span class="hljs-attribute">ssl_certificate_key</span> /etc/letsencrypt/live/ilovemaths.tk/privkey.pem; <span class="hljs-comment"># managed by Certbot</span><br>        <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">1m</span>;<br>        <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">10m</span>;<br>        <span class="hljs-attribute">ssl_ciphers</span> HIGH:!aNULL:!MD5;<br>        <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>        <span class="hljs-comment"># Load configuration files for the default server block.</span><br>        <span class="hljs-attribute">include</span> /etc/nginx/default.d/<span class="hljs-regexp">*.conf</span>;<br><br>        <span class="hljs-attribute">location</span> / &#123;<br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> /<span class="hljs-number">404</span>.html;<br>        <span class="hljs-attribute">location</span> = /<span class="hljs-number">404</span>.html &#123;<br>        &#125;<br><br>        <span class="hljs-attribute">error_page</span> <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span> /50x.html;<br>        <span class="hljs-attribute">location</span> = /50x.html &#123;<br>        &#125;<br><br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="安装certbot">安装certbot</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> python-certbot-nginx<br></code></pre></td></tr></table></figure><h2 id="申请证书">申请证书</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">certbot</span> --<span class="hljs-comment">nginx</span> --<span class="hljs-comment">agree</span><span class="hljs-literal">-</span><span class="hljs-comment">tos</span> --<span class="hljs-comment">no</span><span class="hljs-literal">-</span><span class="hljs-comment">eff</span><span class="hljs-literal">-</span><span class="hljs-comment">email</span> --<span class="hljs-comment">email</span> <span class="hljs-comment">xxxx@gmail</span><span class="hljs-string">.</span><span class="hljs-comment">com</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>https证书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iptables学习笔记</title>
    <link href="/2020/11/25/Iptables%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/11/25/Iptables%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="linux防火墙">Linux防火墙</h1><p>Linux系统防火墙功能是由内核实现的，从2.4版本之后的内核中，包过滤机制是netfilter，管理工具是iptables</p><h2 id="netfilter">netfilter</h2><p>位于系统内核中的包过滤防火墙功能体系，被称为Linux防火墙的“内核态”</p><h2 id="iptables">iptables</h2><p>位于/sbin/iptables，是用来管理防火墙的命令工具，被称为linux防火墙的“用户态”</p><h3 id="iptables的表与链介绍">iptables的表与链介绍</h3><p>链是防火墙规则或策略的集合，对于数据包进行过滤或处理，要把处理机制的不同，将各种规则放入不同的“链”中</p><h4 id="默认的5种链如下">默认的5种链如下：</h4><p>INPUT：处理入站的数据包</p><p>OUTPUT：处理出站的数据包</p><p>FORWARD：处理转发数据包</p><p>POSTROUTING：在进行路由选择后处理数据包</p><p>PREROUTING：在进行路由选择前处理数据包</p><p><strong>表是规则链的集合，具有某一类相似作用的规则，按不同的机制到不同的链之后，再被收入到不同的表中</strong></p><h4 id="默认的4个表如下">默认的4个表如下：</h4><p>raw表：确定是否对数据包进行状态跟踪</p><p>mangle表：为数据设置标记</p><p>nat表：修改数据包中的源、目IP或端口</p><p>filter表：过滤数据包或对数据包进行相关处理</p><h4 id="iptables的表与链的结构如下">iptables的表与链的结构如下</h4><p>raw表</p><p>mangle表</p><p>nat表</p><p>filter表</p><p>PREROUTING链</p><p>PREROUTING链</p><p>PREROUTING链</p><p>INPUT链</p><p>OUTPUT链</p><p>POSTROUTING链</p><p>POSTROUTING链</p><p>FORWARD链</p><p>INPUT链</p><p>OUTPUT链</p><p>OUTPUT链</p><p>OUTPUT链</p><p>FORWARD链</p><h3 id="iptables数据包过滤匹配介绍">Iptables数据包过滤匹配介绍</h3><h4 id="表与表之间的优先顺序">表与表之间的优先顺序</h4><p>raw---&gt; mangle--&gt;nat---&gt;filter</p><h4 id="链之间的匹配顺序">链之间的匹配顺序</h4><p>入站数据：PREROUTING--&gt;INPUT</p><p>出站数据：OUTPUT---&gt;POSTROUTING</p><p>转发数据：PRETOUTING--&gt;FORWARD---&gt;POSTROUTINGS</p><h4 id="链内的匹配顺序">链内的匹配顺序</h4><p>1、按顺序依次检查，找到匹配的规则就停止检查</p><p>2、找不到匹配的规则，则按默认的策略处理</p><h4 id="数据包匹配的流程如下">数据包匹配的流程如下</h4><p>入站数据首先经过raw,mangle,nat表的PREROUTING链规则，然后判断是否为发送给本机的数据，由此产生两条路线：</p><ul><li><p>若是，则经过mangle,filter表的INPUT链规则，然后到本机应用程序，然后如果需要流出，则经过raw,mangle,nat,filter表的OUTPUT链，然后经过mangle,nat表的POSTROUTING链流出</p></li><li><p>若否，则经过mangle,filter表的FORWARD链进行转发，然后经过mangle,nat表的POSTROUTING链出去</p></li></ul><h2 id="iptables管理与配置">iptables管理与配置</h2><h3 id="命令语法格式">命令语法格式</h3><p>iptables [-t 表名] 选项 [链名] [匹配条件] [-j 目标动作]</p><p>注：不指定表名时默认是filter表 不指定链名时默认是表内的所有链除设置链的默认策略，否则需要指定匹配条件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -t <span class="hljs-attribute">filter</span> -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> tcp -j ACCEPT<br>iptables -<span class="hljs-selector-tag">I</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> udp -j ACCEPT<br>iptables -<span class="hljs-selector-tag">I</span> <span class="hljs-selector-tag">INPUT</span> <span class="hljs-number">2</span> -<span class="hljs-selector-tag">p</span> icmp -j ACCEPT<br>iptables -<span class="hljs-selector-tag">P</span> <span class="hljs-selector-tag">INPUT</span> DROP #设置<span class="hljs-selector-tag">INPUT</span>链默认操作为DROP<br></code></pre></td></tr></table></figure><h3 id="选项">选项：</h3><p>-A 在末尾追加一条规则 -I 在开头插入一条规则 -D 删除一条规则 -R替换一条规则</p><h3 id="匹配条件">匹配条件</h3><h4 id="协议匹配">协议匹配</h4><p>-p 协议名</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">A</span> FORWARD -<span class="hljs-selector-tag">p</span> ! icmp -j ACCEPT<br>iptables -<span class="hljs-selector-tag">A</span> FORWARD -<span class="hljs-selector-tag">p</span> tcp -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="地址匹配">地址匹配</h4><p>-s 源地址 -d 目标地址 -i 匹配接口</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -A FORWARD -s <span class="hljs-number">10.0.0.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br><span class="hljs-attribute">iptables</span> -A INPUT -i eth<span class="hljs-number">0</span> -s <span class="hljs-number">100.0.0.100</span> -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="端口匹配">端口匹配</h4><p>- - sport 源端口 - - dport 目标端口</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">A</span> FORWARD -<span class="hljs-selector-tag">p</span> tcp --dport <span class="hljs-number">22</span> -j ACCEPT<br>iptables -<span class="hljs-selector-tag">A</span> OUTPUT -<span class="hljs-selector-tag">p</span> tcp --sport <span class="hljs-number">20</span>:<span class="hljs-number">80</span> -j ACCEPT<br></code></pre></td></tr></table></figure><h3 id="常见数据包的处理动作">常见数据包的处理动作</h3><p>ACCEPT：放行数据包 DROP：丢弃数据包 REJECT：拒绝数据包 SNAT - - to ip: 转译源地址 DNAT - - to ip : 转译目标地址 MASQUERADE :转译源地址为动态ip</p><h3 id="查看现有规则">查看现有规则</h3><p>-nvL</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">iptables -<span class="hljs-built_in">t</span> nat -nvL<br>iptables -<span class="hljs-built_in">t</span> filter -nvL<br></code></pre></td></tr></table></figure><h1 id="案例">案例</h1><p>iptables防火墙常用的策略：</p><p>1.拒绝进入防火墙的所有ICMP协议数据包</p><p>iptables -I INPUT -p icmp -j REJECT</p><p>2.允许防火墙转发除ICMP协议以外的所有数据包</p><p>iptables -A FORWARD -p ! icmp -j ACCEPT</p><p>说明：使用“！”可以将条件取反。</p><p>3.拒绝转发来自192.168.1.10主机的数据，允许转发来自192.168.0.0/24网段的数据</p><p>iptables -A FORWARD -s 192.168.1.11 -j REJECT</p><p>iptables -A FORWARD -s 192.168.0.0/24 -j ACCEPT</p><p>说明：注意要把拒绝的放在前面不然就不起作用了啊。</p><p>4.丢弃从外网接口（eth1）进入防火墙本机的源地址为私网地址的数据包</p><p>iptables -A INPUT -i eth1 -s 192.168.0.0/16 -j DROP</p><p>iptables -A INPUT -i eth1 -s 172.16.0.0/12 -j DROP</p><p>iptables -A INPUT -i eth1 -s 10.0.0.0/8 -j DROP</p><p>5.封堵网段（192.168.1.0/24），两小时后解封。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># iptables -I INPUT -s 10.20.30.0/24 -j DROP</span><br><br><span class="hljs-meta"># iptables -I FORWARD -s 10.20.30.0/24 -j DROP</span><br><br><span class="hljs-meta"># at now 2 hours at&gt; iptables -D INPUT 1 at&gt; iptables -D FORWARD 1</span><br></code></pre></td></tr></table></figure><p>说明：这个策略咱们借助crond计划任务来完成，就再好不过了。</p><p>[1]   Stopped     at now 2 hours</p><p>6.只允许管理员从202.13.0.0/16网段使用SSH远程登录防火墙主机。</p><p>iptables -A INPUT -p tcp --dport 22 -s 202.13.0.0/16 -j ACCEPT</p><p>iptables -A INPUT -p tcp --dport 22 -j DROP</p><p>说明：这个用法比较适合对设备进行远程管理时使用，比如位于分公司中的SQL服务器需要被总公司的管理员管理时。</p><p>7.允许本机开放从TCP端口20-1024提供的应用服务。</p><p>iptables -A INPUT -p tcp --dport 20:1024 -j ACCEPT</p><p>iptables -A OUTPUT -p tcp --sport 20:1024 -j ACCEPT</p><p>8.允许转发来自192.168.0.0/24局域网段的DNS解析请求数据包。</p><p>iptables -A FORWARD -s 192.168.0.0/24 -p udp --dport 53 -j ACCEPT</p><p>iptables -A FORWARD -d 192.168.0.0/24 -p udp --sport 53 -j ACCEPT</p><p>9.禁止其他主机ping防火墙主机，但是允许从防火墙上ping其他主机</p><p>iptables -I INPUT -p icmp --icmp-type Echo-Request -j DROP</p><p>iptables -I INPUT -p icmp --icmp-type Echo-Reply -j ACCEPT</p><p>iptables -I INPUT -p icmp --icmp-type destination-Unreachable -jACCEPT</p><p>10.禁止转发来自MAC地址为00：0C：29：27：55：3F的和主机的数据包</p><p>iptables -A FORWARD -m mac --mac-source 00:0c:29:27:55:3F -j DROP</p><p>说明：iptables中使用“-m 模块关键字”的形式调用显示匹配。咱们这里用“-mmac –mac-source”来表示数据包的源MAC地址。</p><p>11.允许防火墙本机对外开放TCP端口20、21、25、110以及被动模式FTP端口1250-1280</p><p>iptables -A INPUT -p tcp -m multiport --dport 20,21,25,110,1250:1280-j ACCEPT</p><p>说明：这里用“-m multiport –dport”来指定目的端口及范围</p><p>12.禁止转发源IP地址为192.168.1.20-192.168.1.99的TCP数据包。</p><p>iptables -A FORWARD -p tcp -m iprange --src-range192.168.1.20-192.168.1.99 -j DROP</p><p>说明：此处用“-m –iprange –src-range”指定IP范围。</p><p>13.禁止转发与正常TCP连接无关的非—syn请求数据包。</p><p>iptables -A FORWARD -m state --state NEW -p tcp ! --syn -j DROP</p><p>说明：“-mstate”表示数据包的连接状态，“NEW”表示与任何连接无关的，新的嘛！</p><p>14.拒绝访问防火墙的新数据包，但允许响应连接或与已有连接相关的数据包</p><p>iptables -A INPUT -p tcp -m state --state NEW -j DROP</p><p>iptables -A INPUT -p tcp -m state --state ESTABLISHED,RELATED -jACCEPT</p><p>说明：“ESTABLISHED”表示已经响应请求或者已经建立连接的数据包，“RELATED”表示与已建立的连接有相关性的，比如FTP数据连接等。</p><p>15.只开放本机的web服务（80）、FTP(20、21、20450-20480)，放行外部主机发住服务器其它端口的应答数据包，将其他入站数据包均予以丢弃处理。</p><p>iptables -I INPUT -p tcp -m multiport --dport 20,21,80 -j ACCEPT</p><p>iptables -I INPUT -p tcp --dport 20450:20480 -j ACCEPT</p><p>iptables -I INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT</p><p>iptables -P INPUT DROP</p><p>原文链接：<ahref="https://www.jianshu.com/p/ee4ee15d3658">https://www.jianshu.com/p/ee4ee15d3658</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iptables</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>远程控制N1电视盒子Rush固件</title>
    <link href="/2020/11/24/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6N1%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90Rush%E5%9B%BA%E4%BB%B6/"/>
    <url>/2020/11/24/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6N1%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90Rush%E5%9B%BA%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="从github上下载-androidvncserver">从github上下载androidvncserver</h2><p>https://github.com/appknox/androidvncserver/releases目前我使用的是0.03版本</p><h2 id="重新挂载system使其可以读写">重新挂载/system使其可以读写</h2><ul><li>ssh进入192.168.50.162,端口2223，用户root，密码rush</li><li>安卓系统为防止意外损坏系统文件，默认系统被只读保护；通过<code>mount -o remount,rw /system</code>，重新挂载/system就可以读写了</li></ul><h2 id="上传至盒子">上传至盒子</h2><p>通过当贝上传文件至 <code>/sdcard/dangbei-upload</code>，然后把<code>androidvncserver</code> 移动到目录：<code>/system/bin</code>，修改<code>androidvncserver</code> 权限，增加执行权限<code>chmod +x /system/bin/androidvncserver</code></p><h2 id="运行测试">运行测试</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/system/</span>bin/androidvncserver &amp;<br></code></pre></td></tr></table></figure><p>然后通过MobaXterm连接192.168.50.162:5901，看看是否能正常连接</p><h2 id="添加开机启动">添加开机启动</h2><p>在 <code>/system/bin/lazy-start.sh</code>中增加上面的运行命令，重启盒子，看能否正常启动<code>androidvncserver</code></p><h2 id="关于lazy-start.sh">关于lazy-start.sh</h2><p>如何用lazy-start.sh启动安卓应用 在脚本最后加上 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sleep</span> xxx     <span class="hljs-comment">#延时xxx秒等待系统进入桌面</span><br>am <span class="hljs-built_in">start</span> xxx     <span class="hljs-comment">#利用am命令启动应用</span><br></code></pre></td></tr></table></figure></p><p>如何使用am命令启动Android应用命令格式为：<code>adb shell am start -n package/launch_activity</code>示例： 打开设置App命令： <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">adb <span class="hljs-keyword">shell</span> <span class="hljs-keyword">am</span> start -n <span class="hljs-keyword">com</span>.android.settings/<span class="hljs-keyword">com</span>.android.settings.Settings<br></code></pre></td></tr></table></figure> 命令的关键在于获取<code>package</code> 和 <code>launch_activity</code>。有很多种方法，这里列举两种，更多的方法请参考“如何获取AndroidApp的package”一文（具体自己百度）。</p><h2 id="关于自动挂载nfs服务">关于自动挂载nfs服务</h2><p>系统重新挂载为可读写模式后 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>nfs_mounts.sh<br><span class="hljs-comment"># 添加或修改为如下内容</span><br>mkdir <span class="hljs-regexp">/mnt/</span>nfs<br>chgrp root <span class="hljs-regexp">/mnt/</span>nfs<br>chmod <span class="hljs-number">0644</span> <span class="hljs-regexp">/mnt/</span>nfs<br>busybox mount -o ro,noatime,nolock,hard,intr,rsize=<span class="hljs-number">32768</span>,wsize=<span class="hljs-number">32768</span>,vers=<span class="hljs-number">3</span> -t nfs <span class="hljs-number">192.168</span>.<span class="hljs-number">50.218</span>:<span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB <span class="hljs-regexp">/mnt/</span>nfs<br><br></code></pre></td></tr></table></figure>然后修改lazy-start.sh中的nfs-client部分的设置即可，可能需要给予<code>nfs_mounts.sh</code>执行权限：<code>chmod 777 nfs_mounts.sh</code></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>n1</tag>
      
      <tag>rush</tag>
      
      <tag>androidvncserver</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林路由器安装zerotier</title>
    <link href="/2020/11/17/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85zerotier%E7%A9%BF%E9%80%8F%E6%89%80%E6%9C%89%E8%AE%BE%E5%A4%87/"/>
    <url>/2020/11/17/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85zerotier%E7%A9%BF%E9%80%8F%E6%89%80%E6%9C%89%E8%AE%BE%E5%A4%87/</url>
    
    <content type="html"><![CDATA[<h2 id="准备工作重要">准备工作（重要）</h2><ul><li><p>如果zerotier后台建立了路由表的话，需要先删除，不然等下梅林连接的时候就会引起路由器死机</p></li><li><p>关闭梅林路由器防火墙，实测安装完zerotier后，不关防火墙ping结果最高1000ms，关闭后稳定在30ms，貌似传说的打洞成功</p></li></ul><h2 id="安装过程">安装过程</h2><ul><li><p>首先安装好entware环境</p></li><li><p>安装zerotier</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">opkg <span class="hljs-keyword">update</span><br>opkg install zerotier<br>modprobe tun<br>zerotier-<span class="hljs-keyword">one</span> -<span class="hljs-keyword">d</span><br>zerotier-<span class="hljs-keyword">cli</span> join xxxxx<br></code></pre></td></tr></table></figure></li><li><p>网页端同意加入，并建立路由表192.168.50.0/24 via192.168.192.1</p></li><li><p>添加iptables，允许转发到192.168.50.0网段的流量通过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -A FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br></code></pre></td></tr></table></figure></li><li><p>测试连接是否正常，包括从学校访问家中的局域网是否ping通</p></li><li><p>添加开机启动项</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> /jffs/scripts<br><span class="hljs-attribute">vi</span> post-mount<br><span class="hljs-comment"># 在fi语句前添加下面三行命令</span><br><span class="hljs-attribute">modprobe</span> tun<br><span class="hljs-attribute">zerotier</span>-one -d<br><span class="hljs-attribute">iptables</span> -A FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br></code></pre></td></tr></table></figure></li><li><p>重启路由器测试是否正常启动</p></li></ul><p>至此，从外边任何安装了zerotier的电脑，都可以随意访问到家中局域网的各个设备了。</p><h2 id="后记">后记</h2><h3 id="modprobe-tun命令的作用">modprobe tun命令的作用</h3><p>Tun/Tap是通过软件模拟的网络设备，提供与网络设备完全相同的功能。其中TAP模拟了以太网设备，即操作第二层数据包；TUN则模拟了网络层设备，即第三层数据包。Tun/Tap虚拟网络设备为用户空间程序提供了网络数据包的发送和接收能力。既可以当做点对点设备(TUN)，也可以当做以太网设备(TAP)。不仅Linux支持Tun/Tap虚拟网络设备，其他UNIX也是支持的，之间有少许差别。Tun/Tap驱动程序实现了虚拟网卡的功能，Tun表示虚拟的是点对点设备，Tap表示虚拟的是以太网设备，这两种设备针对网络包实行不同的封装。利用Tun/Tap驱动，可以将tcp/ip协议栈处理好的网络分包传给任何一个使用Tun/Tap驱动的进程，由进程重新处理后再发到物理链路中。</p><p>Linux 2.4内核之后代码默认编译tun、tap驱动，使用的时候只需要将模块加载即可(modprobetun，mknod /dev/net/tun c 10200)。运行tun、tap设备之后，会在内核空间添加一个杂项设备(miscdevice，类比字符设备、块设备等)/dev/net/tun，实质上是主设备号10的字符设备。从功能上看，tun设备驱动主要应该包括两个部分，一是虚拟网卡驱动，其实就是虚拟网卡中对skb进行封装解封装等操作；二是字符设备驱动，用于内核空间与用户空间的交互。</p><h3 id="iptables命令相关知识">iptables命令相关知识</h3><h3id="为啥在post-mount中添加开机启动项">为啥在post-mount中添加开机启动项</h3><p>/jffs/scripts目录:里面的脚本名固定不可以随便修改，但是可以加自己的内容。</p><p>脚本名</p><p>作用</p><p>wan-start</p><p>在wan网卡启动后调用</p><p>nat-start</p><p>在NAT配置后调用</p><p>post-mount</p><p>在挂载磁盘后调用</p><p>services-start</p><p>在系统服务启动后调用</p><p>services-stop</p><p>在系统服务器停止前调用</p><p>让我们看看post-mount的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> = <span class="hljs-string">&quot;/tmp/mnt/sda1&quot;</span> ] ; <span class="hljs-keyword">then</span><br>  ln -nsf <span class="hljs-variable">$1</span>/entware /tmp/opt<br>  modprobe tun<br>  zerotier-one -d<br>  iptables -A FORWARD -d 192.168.50.0/24 -j ACCEPT<br>  swapon /tmp/mnt/sda1/swapfile<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>由于我们的zerotier就是安装在U盘上的，所以放在这个脚本里面，只有U盘正确挂载后，才会执行这里的操作，再合适不过了！</p><h3 id="梅林启动项的问题">梅林启动项的问题</h3><ul><li><p>/jffs时路由器自带的可写目录，按照特定格式命名的脚本可以被系统启动时自动调用。</p></li><li><p>安装 entware后，产生了一个/jffs/service-start文件。</p><ul><li><p>该脚本调用/opt/etc/init.d/rc.unslung。</p></li><li><p>然后rc.unslung启动/opt/etc/init.d/目录下的所有脚本，使用*.*start参数进行调用。</p></li><li><p>脚本中运行的进程以服务方式驻留，是Linux早期版本的标准运行机制。</p></li></ul></li><li><p>自己的脚本放在/opt/etc/init.d/目录下</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
      <tag>zerotier</tag>
      
      <tag>merlin</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录newifi3重刷padavan以后的折腾</title>
    <link href="/2020/11/14/%E8%AE%B0%E5%BD%95Newifi3%E9%87%8D%E5%88%B7Padavan%E5%8F%8A%E5%90%8E%E7%BB%AD%E6%8A%98%E8%85%BE/"/>
    <url>/2020/11/14/%E8%AE%B0%E5%BD%95Newifi3%E9%87%8D%E5%88%B7Padavan%E5%8F%8A%E5%90%8E%E7%BB%AD%E6%8A%98%E8%85%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="刷机前的准备">刷机前的准备</h1><h2 id="备份可选">备份（可选）</h2><p>以为刷机以后所有的设置都会丢失，于是导出了设置和导出了内部存储设置，文件存放在nas中的newifi3文件夹，结果刷机以后才发现原来的基本配置都还在，比如后台登录地址，wifi设置，中继设置等</p><h2 id="下载刷机包">下载刷机包</h2><p>地址：<a href="https://t.me/s/pdcn1">https://t.me/s/pdcn1</a>刷机包：<ahref="https://opt.cn2qq.com/padavan/">https://opt.cn2qq.com/padavan/</a>下载专用包RT-N56UB1-newifi3D2-512M_3.4.3.9-099.trx</p><p>题外话：MT7621_7603_7612_512M_3.4.3.9-099.trx这个包名字的含义：MT7621芯片型号，7603wifi2g芯片，7612wifi5g芯片，512m内存大小，跟新路由3的配置一模一样，所以也可以用，但是我还是选择了专用包</p><h1 id="刷机">刷机</h1><ul><li><p>网线连接电脑和路由器的lan口</p></li><li><p>按住reset键不放，插上电源，等所有灯闪烁以后松开reset</p></li><li><p>电脑上进入192.168.1.1登录breed后台</p></li><li><p>选择新刷机包上传，完成</p></li><li><p>另外如果以后跟着这个系列一起升级的话，可以选择一键自动更新固件命令：<code>wget -q -O- https://opt.cn2qq.com/opt-script/up.sh &gt; /tmp/up.sh &amp;&amp; bash &lt; /tmp/up.sh &amp;</code></p></li></ul><h1 id="更新时间设置">更新时间设置</h1><p>系统管理——服务——crontab计划任务，添加命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">*/<span class="hljs-number">10</span> * * * * ntpd -n -<span class="hljs-selector-tag">q</span> -<span class="hljs-selector-tag">p</span> time1<span class="hljs-selector-class">.apple</span><span class="hljs-selector-class">.com</span><br></code></pre></td></tr></table></figure><h1 id="开启entware环境">开启entware环境</h1><ul><li><p>备份/opt/etc/tinc文件夹下的所有内容</p></li><li><p>删除/opt文件夹下的所有内容</p></li><li><p>高级设置——USB应用程序——其他设置——允许运行Optware，选择entware</p></li><li><p>重新启动路由器，会自动在opt文件夹下生成新的文件内容，opkgupdate验证entware环境是否开启成功</p></li></ul><h1 id="开启onmp">开启onmp</h1><p>扩展功能——搭建web环境——开关，启用 nginx+mysql+php环境，在log中可以看到安装进程</p><h1 id="安装zerotier">安装zerotier</h1><p>通过opkg安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">opkg <span class="hljs-keyword">install</span> zerotier<br></code></pre></td></tr></table></figure><p>启动zerotier</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">zerotier-one -d</span><br></code></pre></td></tr></table></figure><p>加入自己的zerotier网络,并在网页端同意加入</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">zerotier-<span class="hljs-keyword">cli</span> join xxxxx<br></code></pre></td></tr></table></figure><p>通过防火墙设置nat转发到本地局域网</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">iptables -<span class="hljs-keyword">A</span> FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br>iptables -t nat -<span class="hljs-keyword">A</span> POSTROUTING -j MASQUERADE<br></code></pre></td></tr></table></figure><p>在网页端添加路由表ManagedIP</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> via <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">192</span>.<span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><p>测试一下是否能访问局域网其他设备了，如果可以，就可以去添加路由器开启启动脚本高级设置——自定义设置——脚本——自定义脚本设置0（功能设置）中添加</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">zerotier-one -d<br>iptables -<span class="hljs-keyword">A</span> FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br>iptables -t nat -<span class="hljs-keyword">A</span> POSTROUTING -j MASQUERADE<br></code></pre></td></tr></table></figure><h1 id="安装tinc">安装tinc</h1><p>安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">opkg <span class="hljs-keyword">install</span> tinc<br></code></pre></td></tr></table></figure><p>将上面备份的tinc文件夹还原，将tinc-up,tinc-down两个文件给予执行权限</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">chmod +<span class="hljs-keyword">x</span> tinc-*<br></code></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">tincd -n cloud</span><br></code></pre></td></tr></table></figure><p>高级设置——自定义设置——脚本——自定义脚本设置0（功能设置）中添加<code>tincd -n cloud</code></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>newifi3</tag>
      
      <tag>padavan</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>全平台终端连接神器MobaXTerm</title>
    <link href="/2020/11/09/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%A5%9E%E5%99%A8MobaXTerm/"/>
    <url>/2020/11/09/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E7%A5%9E%E5%99%A8MobaXTerm/</url>
    
    <content type="html"><![CDATA[<p>必须安利一波，谁用谁知道好！</p><p><ahref="https://mobaxterm.mobatek.net/download-home-edition.html">https://mobaxterm.mobatek.net/download-home-edition.html</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MobaXTerm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>newifi3作无线中继</title>
    <link href="/2020/10/26/Newifi3%E5%88%B7%E6%9C%BA%E5%8F%8A%E4%BD%9C%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/"/>
    <url>/2020/10/26/Newifi3%E5%88%B7%E6%9C%BA%E5%8F%8A%E4%BD%9C%E6%97%A0%E7%BA%BF%E4%B8%AD%E7%BB%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="原版系统特点">原版系统特点</h2><p>后台登陆地址：192.168.99.1，设置好wifi密码原版买回来后，首先试用了原版系统，界面简单，但是其中的无线中继设置是傻瓜式的，只不过中继后的网络跟主路由的ip段不能相同，不能无缝漫游</p><h2 id="刷入不死系统breed">刷入不死系统breed</h2><ol type="1"><li>开启固件 SSH</li></ol><ol type="a"><li><p>开启路由器，进入管理界面 (假设路由器 IP 地址是192.168.99.1)</p></li><li><p>在浏览器中输入 <ahref="http://192.168.99.1/newifi/ifiwen_hss.html">http://192.168.99.1/newifi/ifiwen_hss.html</a>并进入</p></li><li><p>页面显示 success 即表明已开启 SSH</p></li></ol><ol start="2" type="1"><li><p>进入路由器 SSH 环境 ，使用 PuTTY/SecureCRT/ssh 均可</p></li><li><p>上传解锁文件到路由器</p></li></ol><ol type="a"><li><p>下载附件，解压得到 newifi-d2-jail-break.ko</p></li><li><p>用 WinSCP 等工具将其上传到路由器的 /tmp 目录</p></li><li><p>或者用 HFS 搭建本地 HTTP 服务器，并在 SSH 里用 wget命令下载</p></li><li><p>或者用 tftpd32/tftpd64 搭建本地 TFTP 服务器，并在 SSH 里用 tftp命令下载</p></li><li><p>用 U 盘当然也行</p></li></ol><ol start="4" type="1"><li>开始解锁</li></ol><ol type="a"><li><p>SSH 进入 /tmp 目录 cd /tmp</p></li><li><p>加载 newifi-d2-jail-break.ko insmodnewifi-d2-jail-break.ko</p></li><li><p>此时 SSH 会停止响应，因为 newifi-d2-jail-break.ko会冻结系统的其他功能，强制写入 Newifi D2 专用版 Breed 到 Flash</p></li><li><p>成功后路由器会自动重启，断电，然后按住复位健接通电源，看到灯闪2次以后，松开reset键，就可进入Breed，登录地址变成了192.168.1.1，以后每次进入breed都是这样进入</p></li></ol><h2 id="最终刷机选择了老毛子pandavan">最终刷机选择了老毛子Pandavan</h2><p>家里主路由地址192.168.1.2，开DHCP，地址池从192.168.1.100开始。</p><p>第一种中继模式：</p><ol type="1"><li><p>内部网络里设置路由地址为192.168.1.4；</p></li><li><p>内部网络里设置DHCP关闭；</p></li><li><p>无线网络2.4G里设置ssid和密码与主路由相同；</p></li><li><p>无线网络2.4G - 无线桥接里选AP-Client + AP，LANBridge，搜索并连接主路由；重启后，有线无线均可通过newifi3上网。</p></li></ol><p>第二种中继模式：</p><ol start="5" type="1"><li><p>关闭自动获取DNS，手动指定DNS为父路由；</p></li><li><p>关闭动态路由，手动指定路由为：IP：0.0.0.0；Netmask：0.0.0.0；Gateway：父路由地址；跃点留空；LAN模式</p></li><li><p>打开DHCP；</p></li><li><p>无线网络2.4G里设置ssid和密码与主路由不一样；</p></li><li><p>AP-Client + AP，WAN (Wireless ISP)，搜索并连接主路由；这时，newifi3成为二级路由，联网功能正常，路由自身也可以上网，ss+adbyby也正常工作；</p></li></ol><p>但是第二种中继模式无法实现两个覆盖范围无缝跳转。</p><h2 id="开启entware和安装tinc">开启entware和安装tinc</h2><p>开启entware <ahref="http://xmfhost.com/index.php/2020/03/23/%E8%80%81%E6%AF%9B%E5%AD%90-padavan-%E5%9B%BA%E4%BB%B6%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85-zerotier%E6%96%B9%E6%B3%95/">http://xmfhost.com/index.php/2020/03/23/%E8%80%81%E6%AF%9B%E5%AD%90-padavan-%E5%9B%BA%E4%BB%B6%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85-zerotier%E6%96%B9%E6%B3%95/</a></p><p>另外，在 padavan 下，启动 entware 环境后，也可以直接安装tinc（安装的版本是 1.1pre14）安装方法如下</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">opkg update<br>opkg <span class="hljs-keyword">install</span> tinc<br><br></code></pre></td></tr></table></figure><p>安装好以后，上传修改好的配置文件（配置文件位置在 /opt/etc下面），并修改部分文件的属性，然后再生成密码。只是产生密码的方式，需如下操作。<figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">tinc -n hello <span class="hljs-keyword">generate</span>-keys<br></code></pre></td></tr></table></figure> 启动、停止、重启、重新加载配置文件的方法如下：<figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">tinc -<span class="hljs-built_in">n</span> hello start <br>tinc -<span class="hljs-built_in">n</span> hello stop <br>tinc -<span class="hljs-built_in">n</span> hello restart <br>tinc -<span class="hljs-built_in">n</span> hello reload<br></code></pre></td></tr></table></figure> 加入 padavan的开机启动的方法为，放到“在路由器启动后执行”里，命令前要带上路径，好像一次不行，要运行两次才可以起来！我的方法是在前面运行一个ps 命令来代替，真奇怪！我的是纯净版padavan，是这样。也许你的没有这个问题。 <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">ps <span class="hljs-keyword">grep</span> tinc <span class="hljs-regexp">/opt/</span>sbin/tincd -n hello<br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>newifi3</tag>
      
      <tag>无线中继</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tinc建立vpn</title>
    <link href="/2020/10/21/Tinc%E5%BB%BA%E7%AB%8BVpn/"/>
    <url>/2020/10/21/Tinc%E5%BB%BA%E7%AB%8BVpn/</url>
    
    <content type="html"><![CDATA[<h1 id="服务端安装">服务端安装</h1><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">## 进入配置目录</span><br>cd /etc/tinc/<br><span class="hljs-meta">## 网络目录名可任意，但其他节点须与服务端节点相同</span><br>sudo mkdir cloud<br>cd cloud/<br><span class="hljs-meta">## 目录名固定，这里存放各个节点的配置文件</span><br>sudo mkdir hosts<br><span class="hljs-meta">## 开始配置cloud</span><br>sudo vim tinc.conf<br><span class="hljs-meta">## 极简配置如下，其他配置默认</span><br>Name = tencent<br>Interface = vpn<br><span class="hljs-meta">## 配置tencent节点，对应tinc.conf中的Name</span><br>sudo vim hosts/tencent<br><span class="hljs-meta">## 填写公网IP和vpn节点IP，这里我使用10.0.0.1</span><br>Address = 你的公网IP<br>Subnet = <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/<span class="hljs-number">32</span><br><span class="hljs-meta">## 生成密钥，-n 网络名</span><br>sudo tincd -n cloud -K<br><span class="hljs-meta">## 编写拨号脚本，注意与Subnet中的IP相同</span><br>sudo vim tinc-up<br><span class="hljs-meta">#!/bin/bash</span><br>ifconfig $INTERFACE <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span><br><span class="hljs-meta">## 编写断线脚本</span><br>sudo vim tinc-down<br><span class="hljs-meta">#!/bin/bash</span><br>ifconfig $INTERFACE down<br><span class="hljs-meta">## 赋予脚本执行权限</span><br>sudo chmod +x tinc-*<br></code></pre></td></tr></table></figure><ul><li><p>安装完毕以后，文件及文件夹的结构是这样的：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus">/etc/tinc—— nets.boot<br>       —— cloud——tinc.conf<br>             ——rsa_key.priv<br>             ——rsa_key.pub<br>             ——tinc-down<br>             ——tinc-up<br>             ——hosts——gcp<br>                    ——pc<br>                    ——school<br></code></pre></td></tr></table></figure></li></ul><h1 id="windows客户端安装">Windows客户端安装</h1><ul><li><p>首先下载Windows版的tinc。在安装过程三项可选，直接全选。然后指定安装目录。之后进入安装目录</p></li><li><p>新建网络目录，本例为cloud</p></li><li><p>进入cloud目录后，创建hosts目录</p></li><li><p>在cloud目录下新建文件tinc.conf，输入如下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Name</span> = pc<br><span class="hljs-attr">Interface</span> = vpn<br><span class="hljs-attr">ConnectTo</span> = tencent<br></code></pre></td></tr></table></figure></li><li><p>在hosts目录下新建文件pc，输入如下内容，将节点IP配置为10.0.0.2</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Subnet</span> = <span class="hljs-number">10.0.0.2</span>/<span class="hljs-number">32</span><br></code></pre></td></tr></table></figure></li><li><p>在安装目录下以管理员身份启动cmd，输入tincd -n cloud-K，生成密钥</p></li><li><p>待密钥生成完毕后，获取并保存服务端hosts文件夹下的tencent文件至pc文件处，将pc文件上传至服务端的hosts文件夹下。</p></li><li><p>在安装目录tap-win64下以管理员身份运行addtap.exe，安装网络适配器</p></li><li><p>接着去网络中心找到类似的TAP网络适配器，修改其名称为tinc.conf中的Interface值，本例为vpn，接着右键属性设置ipv4的地址，此地址应与hosts中pc的Subnet值相同，本例为10.0.0.2</p></li></ul><h1 id="linux客户端安装">Linux客户端安装</h1><p>使用apt installtinc即可。其配置与服务端的配置步骤相同。同样是确保用户具备sudo权限或是直接使用root。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">## 进入配置目录</span><br>cd /etc/tinc/<br><span class="hljs-meta">## 网络须与服务端节点相同</span><br>sudo mkdir cloud<br>cd cloud/<br><span class="hljs-meta">## 目录名固定，这里存放orangePi节点和服务端节点的主机文件</span><br>sudo mkdir hosts<br><span class="hljs-meta">## 开始配置cloud</span><br>sudo vim tinc.conf<br><span class="hljs-meta">## 极简配置如下，其他配置默认</span><br><span class="hljs-meta">## ConnectTo = 服务端节点名，本例为tencent</span><br>Name = orangePi<br>Interface = vpn<br>ConnectTo = tencent<br><span class="hljs-meta">## 配置orangePi节点，对应tinc.conf中的Name</span><br>sudo vim hosts/orangePi<br><span class="hljs-meta">## 填写orangePi节点vpn的IP，需唯一</span><br>Subnet = <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.10</span>/<span class="hljs-number">32</span><br><span class="hljs-meta">## 生成密钥，-n 网络名</span><br>sudo tincd -n cloud -K<br><span class="hljs-meta">## 编写拨号脚本，注意与Subnet的IP相同</span><br>sudo vim tinc-up<br><span class="hljs-meta">#!/bin/bash</span><br>ifconfig $INTERFACE <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.10</span> netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span><br><span class="hljs-meta">## 编写断线脚本</span><br>sudo vim tinc-down<br><span class="hljs-meta">#!/bin/bash</span><br>ifconfig $INTERFACE down<br><span class="hljs-meta">## 赋予脚本执行权限</span><br>sudo chmod +x tinc-*<br></code></pre></td></tr></table></figure><h1 id="padavan安装tinc">Padavan安装tinc</h1><p>首先要加载entware环境，然后opkg install tinc</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> /<span class="hljs-keyword">opt</span>/etc<br><span class="hljs-built_in">mkdir</span> tinc<br><span class="hljs-keyword">cd</span> tinc<br><span class="hljs-built_in">mkdir</span> cloud<br></code></pre></td></tr></table></figure><p>文件结构和linux下的相同，但是注意生成密匙的命令不同</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">tinc -n cloud <span class="hljs-keyword">generate</span>-keys<br></code></pre></td></tr></table></figure><h1 id="启动服务">启动服务</h1><ul><li><p>Linux下启动tinc 需要使用命令tincd -n 网络名，故本例的启动为</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">tincd -n cloud</span><br></code></pre></td></tr></table></figure></li><li><p>若是想首先开机启动则需要使用systemctl enable tinc@网络名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-builtin-name">enable</span> tinc@cloud<br></code></pre></td></tr></table></figure></li><li><p>Windows下需要在安装目录下以管理员身份运行cmd输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">tincd -n cloud</span><br></code></pre></td></tr></table></figure><p>如果成功会生成一个tinc.cloud的服务，服务默认是开机自动启动的</p></li><li><p>padavan启动较为特殊,启动、停止、重启、重新加载配置文件的方法如下：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">tinc -<span class="hljs-built_in">n</span> cloud start<br>tinc -<span class="hljs-built_in">n</span> cloud stop<br>tinc -<span class="hljs-built_in">n</span> cloud restart<br>tinc -<span class="hljs-built_in">n</span> cloud reload<br></code></pre></td></tr></table></figure><p>还要在路由器开机后执行的脚本中加入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>sbin/tincd -n hello<br></code></pre></td></tr></table></figure></li></ul><h1 id="配置工具一个脚本">配置工具：一个脚本</h1><p>可以看到很多的配置都是重复的，为了简化配置我编写了一个shell脚本可以帮助快速配置。使用简单而且Windows和Linux皆可用。按如下代码编写shell文件至指定目录，Windows为安装目录，Linux为/etc/tinc，然后执行脚本按照提示输入对应的信息即可，注意Windows需要管理员权限，Linux需要支持sudo或以root身份。以本文为例做个简单的示范：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>net_name=<span class="hljs-string">&quot;&quot;</span><br>node_name=<span class="hljs-string">&quot;&quot;</span><br>is_client=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-function"><span class="hljs-title">mk_dir</span></span>()&#123;<br>    <span class="hljs-keyword">while</span> [ -z <span class="hljs-variable">$&#123;net_name&#125;</span> ]<br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter the network name:&quot;</span> net_name<br>        net_name=<span class="hljs-variable">$net_namesed</span> <span class="hljs-string">&#x27;s/ //g&#x27;</span><br>    <span class="hljs-keyword">done</span><br>    mkdir <span class="hljs-variable">$net_name</span><br>    <span class="hljs-built_in">cd</span> <span class="hljs-variable">$net_name</span><br>    mkdir <span class="hljs-string">&#x27;hosts&#x27;</span><br>&#125;<br><span class="hljs-function"><span class="hljs-title">tinc_conf</span></span>()&#123;<br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter Interface Name:&quot;</span> interface<br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter local node name:&quot;</span> node_name<br>    conf_str=<span class="hljs-string">&quot;Interface = <span class="hljs-variable">$&#123;interface&#125;</span> \nName = <span class="hljs-variable">$&#123;node_name&#125;</span>&quot;</span><br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Is client node?(y/n):&quot;</span> is_client<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$is_client</span>&quot;</span> == <span class="hljs-string">&quot;y&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter server node name:&quot;</span> server_name<br>    conf_str=<span class="hljs-variable">$conf_str</span><span class="hljs-string">&quot;\nConnectTo = <span class="hljs-variable">$&#123;server_name&#125;</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-variable">$conf_str</span> &gt; <span class="hljs-string">&#x27;tinc.conf&#x27;</span><br>&#125;<br><span class="hljs-function"><span class="hljs-title">net_conf</span></span>()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$is_client</span>&quot;</span> == <span class="hljs-string">&quot;y&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter public IP address(can be empty):&quot;</span> pub_ip<br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">while</span> [ -z <span class="hljs-variable">$&#123;pub_ip&#125;</span> ]<br>    <span class="hljs-keyword">do</span><br>          <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter public IP address:&quot;</span> pub_ip<br>      pub_ip=<span class="hljs-variable">$pub_ipsed</span> <span class="hljs-string">&#x27;s/ //g&#x27;</span><br>        <span class="hljs-keyword">done</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;Enter local node ip:&quot;</span> local_ip<br>    net_str=<span class="hljs-string">&quot;Subnet = <span class="hljs-variable">$&#123;local_ip&#125;</span>/32&quot;</span><br>    pub_ip=<span class="hljs-variable">$pub_ipsed</span> <span class="hljs-string">&#x27;s/ //g&#x27;</span><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$pub_ip</span>&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>       net_str=<span class="hljs-variable">$net_str</span><span class="hljs-string">&quot;\nAddress = <span class="hljs-variable">$pub_ip</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">cd</span> hosts<br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-variable">$net_str</span> &gt; <span class="hljs-variable">$node_name</span><br>    <span class="hljs-built_in">cd</span> ..<br>    os=`uname`<br>    <span class="hljs-keyword">if</span> [ `uname` = <span class="hljs-string">&quot;Linux&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;#!/bin/bash\n&quot;</span><span class="hljs-string">&#x27;ifconfig $INTERFACE &#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$&#123;local_ip&#125;</span> netmask 255.255.255.0&quot;</span> &gt; <span class="hljs-string">&#x27;tinc-up&#x27;</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;#!/bin/bash\n&quot;</span><span class="hljs-string">&#x27;ifconfig $INTERFACE down&#x27;</span> &gt; <span class="hljs-string">&#x27;tinc-down&#x27;</span><br>    chmod +x tinc-*<br>    tincd -n <span class="hljs-variable">$net_name</span> -K<br>    <span class="hljs-keyword">else</span><br>        ./tincd -n <span class="hljs-variable">$net_name</span> -K<br>    <span class="hljs-keyword">fi</span><br>&#125;<br>mk_dir<br>tinc_conf<br>net_conf<br></code></pre></td></tr></table></figure><p>脚本执行效果如下：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment">## 输入网络名</span><br>Enter the network name:cloud<br><span class="hljs-comment">## 输入网口名</span><br>Enter Interface Name:vpn<br><span class="hljs-comment">## 输入本地节点名</span><br>Enter local <span class="hljs-keyword">node</span> name:<span class="hljs-title">pc</span><br><span class="hljs-comment">## 是否为客户端节点</span><br>Is client <span class="hljs-keyword">node</span><span class="hljs-title">?(y</span>/n):y<br><span class="hljs-comment">## 输入服务端节点名（上步填n则无此项）</span><br>Enter server <span class="hljs-keyword">node</span> name:<span class="hljs-title">tencent</span><br><span class="hljs-comment">## 输入公网IP（为y时此项必填，n可以直接回车）</span><br>Enter public IP address(can be empty):<br><span class="hljs-comment">## 输入本节点的IP</span><br>Enter local <span class="hljs-keyword">node</span> ip:<span class="hljs-title">10</span>.<span class="hljs-number">0.0</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>之后就会完成配置，注意这个脚本仅用于自动完成配置，不会启动服务，所以还需与服务端交换host文件和步骤5，Windows下仍要配置ip(部分条件下需要手动生成密钥)</p><h1 id="使用感受">使用感受</h1><p>1.中途遇到好多的坑，比如文件配置修改以后，需要重启tinc服务</p><p>2.晚高峰期间的速度基本可以接受</p><p>3.将两个vps同时作为服务端的文件配置，目前还没有搞定</p><h1 id="致敬原文作者">致敬原文作者</h1><p><ahref="https://wuzk.tk/2018/09/13/2018/20180913/">https://wuzk.tk/2018/09/13/2018/20180913/</a><ahref="https://chanix.github.io/TincCookbook/">https://chanix.github.io/TincCookbook/</a><ahref="http://www.lucktu.com/archives/763-3.html">http://www.lucktu.com/archives/763-3.html</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tinc</tag>
      
      <tag>vpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装完整ChromeOS</title>
    <link href="/2020/10/20/%E6%97%A7%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%AE%8C%E6%95%B4%E7%89%88ChromeOs%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/10/20/%E6%97%A7%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%AE%8C%E6%95%B4%E7%89%88ChromeOs%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="准备需要的文件与设备">准备需要的文件与设备</h1><p>这一步，是在准备需要的硬件与软件。</p><p>（1）16G以上的U盘，与一台老笔记本（台式机应该也可以）。U盘与电脑里的文件都会被删除，所以不要存储重要文件。</p><p>（2）下载Linux系统镜像文件</p><p>（3）下载镜像刷写工具 Rufus</p><p>（4）下载适合你的旧电脑的ChromeOS镜像</p><p>在这个网页上(cros-updates-serving.appspot.com)，有第三方汇总的ChromeOS系统镜像的下载地址：</p><p>不同机器需要下载不同镜像——</p><ul><li><p>1、<strong>Intel第1代到第3代的CPU，选择"samus"一栏的镜像</strong></p></li><li><p>我的ideapad是i3-2365，也就是第二代的cpu，后面的数字81，82，83代表ChromeOs系统的版本号</p></li><li><p>2、Intel第4代以后的CPU，选择"rammus"一栏的镜像</p></li><li><p>3、AMD的支持范围比较小，目前只有2016年"StoneyRidge"CPU芯片可以安装，选择"grunt"一栏的镜像。</p></li><li><p>4、每一栏后面的数字，就是对应版本的ChromeOS镜像下载地址。数字越大，系统越新。没有特别问题，建议选择高版本的系统。</p></li><li><p>5、某些特别新的设备，有可能不支持。具体兼容情况，请参考官方Chromebook使用了什么硬件。</p></li><li><p>比如，编辑测试的机器CPU为i5-3320M，网上搜索资料，判断属于Intel第3代CPU。所以点击"samus"一栏的“83”，下载了“chromeos_13020.87.0_samus_recovery_stable-channel_mp-v3.bin.zip”</p></li></ul><p>（5）下载ChromeOS安装、启动工具包“Brunch”在项目的release页面里(github.com/sebanc/brunch/releases)，下载最新版的安装、启动程序。</p><h1 id="制作启动盘">制作启动盘</h1><p>文件都准备好后，就可以烧录Linux镜像到U盘上面去了。运行Rufus，点击软件界面上的“选择”，打开linux的镜像文件。<strong>将分区类型设置为GPT。</strong>确认无误后，点击“开始”，刷写镜像。</p><p>刷写完成后，就可以打开U盘，将整个chromeos文件夹，一起复制到U盘根目录里面了。</p><h1 id="更改bios设置">更改BIOS设置</h1><p>在硬盘中安装ChromeOS，会格式化、删除所有文件。所以请一定注意检查老机器里面是否有重要资料。</p><p>首先，插入U盘，并打开安装ChromeOS的旧电脑电源。</p><p>进入BIOS后，修改启动方式为UEFI，并选择U盘启动。</p><p>保存BIOS设置并重启后，就可以进入U盘中的linux系统了。</p><h1 id="利用linux安装chromeos">利用linux，安装ChromeOS</h1><p>和Windows不一样，ChromeOS官方并没有放出通用安装程序，所以需要U盘上的Linux系统（这里是Ubuntu）辅助安装。</p><h2 id="安装需要的软件">安装需要的软件</h2><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">sudo apt <span class="hljs-meta">update</span> <span class="hljs-variable">&amp;&amp;</span> sudo apt install figlet pv cgpt<br></code></pre></td></tr></table></figure><h2 id="查询安装硬盘代号">查询安装硬盘代号</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo fdisk -l</span><br></code></pre></td></tr></table></figure><p>如果只有一块硬盘，硬盘代号一般是/dev/sda。但某些机器，可能是emmc或nvram固态硬盘，这种情况下代号可能不同。</p><h2 id="安装chromeos">安装ChromeOS</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo df -h</span><br></code></pre></td></tr></table></figure><p>屏幕提示U盘分区为“/cdrom”。于是切换到U盘chromeos文件夹的指令为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/cdrom/</span>chromeos<br></code></pre></td></tr></table></figure><p>最后一步，安装ChromeOS到硬盘：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> bash chromeos-install.sh -src chromeos_<span class="hljs-number">13020</span>.<span class="hljs-number">87</span>.<span class="hljs-number">0</span>_samus_recovery_stable-channel_mp-v<span class="hljs-number">3</span>.bin -dst /dev/sda<br></code></pre></td></tr></table></figure><p>注意根据实际的bin文件更改以上命令</p><h1 id="使用说明">使用说明</h1><p>由于需要连接google进行更新设置，账户登录等，需要有富强环境</p><h1 id="使用体验效果">使用体验效果</h1><p>由于旧电脑速度实在是太慢了，2g内存+2代cpu+机械硬盘，整体使用的效果就是卡顿，如果再开启ChromeOs中的linux系统的话，貌似更加卡顿，于是使用了一天以后，决定再刷回CloudReady的阉割版的ChromeOs了，虽然不能在play商店安装应用了，但是对于破旧电脑来说，流畅度大于一切！</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ChromeOs</tag>
      
      <tag>旧电脑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ZeroTierOne创建大局域网</title>
    <link href="/2020/10/15/ZeroTierOne%E5%88%9B%E5%BB%BA%E5%A4%A7%E5%B1%80%E5%9F%9F%E7%BD%91/"/>
    <url>/2020/10/15/ZeroTierOne%E5%88%9B%E5%BB%BA%E5%A4%A7%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<h1 id="zerotier原理">ZeroTier原理</h1><p>这个过程如下：</p><ul><li><p>A 想要将数据包发送到 B，但由于它没有直接路径，因此将其向上发送到R。</p></li><li><p>如果 R 有直接链接到 B，它会转发数据包给B。否则它会继续向上游发送数据包，直到达到行星根(planet)。行星根知道所有节点，所以如果B 在线，最终数据包将到达 B。</p></li><li><p>R 还向 A 发送一个名为会和的消息，包含有关它如何到达 B的提示。同时，将会和发给 B，通知 B 它如何到达 A。</p></li><li><p>A 和 B 获取它们的会合消息并尝试相互发送测试消息，可能会对 NAT或状态防火墙进行穿透。如果这样可以建立直接链路，则不再需要中继。</p></li><li><p>如果无法建立直接路径，则通信可以继续中继(速度慢)</p></li><li><p>ZeroTier 官方搭建了一个行星根服务器叫做地球Earth，行星根服务器唯一的且是免费的，它记录了所有的路径信息，一般情况下大家都直接用的这个。除此之外还有12个遍布全球的根服务器，这些是收费的服务。所以如果使用免费套餐，连接时的延迟可能会很高，另外由于Earth在国外，一些不确定因素可能会影响到使用。考虑到网络的不确定性，ZeroTier能自己创建根服务器月球Moons，这样就能在大局域网中得到更好的体验了。</p></li></ul><h1 id="安装">安装</h1><p>ZeroTier 是跨平台的，能安装在几乎任何平台</p><p>Windows、macOS、Linux、iOS、Android、QNAP、Synology、西数 MyCloudNAS，下载地址：<ahref="https://www.zerotier.com/download.shtml">https://www.zerotier.com/download.shtml</a></p><h2 id="在linux安装">在linux安装</h2><p>一键安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -s https:<span class="hljs-regexp">//i</span>nstall.zerotier.com  sudo bash<br></code></pre></td></tr></table></figure><p>加入网络</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo zerotier-cli <span class="hljs-keyword">join</span> <span class="hljs-symbol">&lt;network_id&gt;</span><br></code></pre></td></tr></table></figure><h2 id="在路由器安装">在路由器安装</h2><p>路由器推荐安装 Entware 后使用 <code>opkg install zerotier</code>命令安装， <code>vi /etc/config/zerotier</code>，找到以下两处进行修改：<code>config zerotier sample\_config option enabled 0</code>(这里把0替换成1，让选项生效) <code>list join ‘8056c2e21c000001’</code>(替换为自己的网络ID)，然后重启路由器</p><h1 id="路由器防火墙配置关键">路由器防火墙配置（关键）</h1><p>在防火墙-&gt;自定义规则页面，增加下面三条记录: <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -I FORWARD -i ztc<span class="hljs-number">3</span>qwyx<span class="hljs-number">5</span>l -j ACCEPT <br><span class="hljs-attribute">iptables</span> -I FORWARD -o ztc<span class="hljs-number">3</span>qwyx<span class="hljs-number">5</span>l -j ACCEPT <br><span class="hljs-attribute">iptables</span> -t nat -I POSTROUTING -o ztc<span class="hljs-number">3</span>qwyx<span class="hljs-number">5</span>l -j MASQUERADE <br></code></pre></td></tr></table></figure><code>ztc3qwyx5l</code>是路由器的ZeroTier虚拟接口的名称，在终端可以使用ifconfig命令查看，请自行替换。</p><p>设置完成后，点击重启防火墙。</p><p><strong>实测命令：</strong></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dns">iptables -<span class="hljs-keyword">A</span> FORWARD -d <span class="hljs-number">192.168.50.0</span>/<span class="hljs-number">24</span> -j ACCEPT<br>iptables -t nat -<span class="hljs-keyword">A</span> POSTROUTING -j MASQUERADE<br></code></pre></td></tr></table></figure><p><strong>然后就发现通过学校可以访问家里的192.168.50.0/24网段了</strong></p><h1id="在vps配置moon服务节点可选操作">在vps配置moon服务节点（可选操作）</h1><h2 id="安装-moon">安装 moon</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -s https:<span class="hljs-regexp">//i</span>nstall.zerotier.com/  sudo bash<br></code></pre></td></tr></table></figure><h2 id="生成moon配置文件">生成moon配置文件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/var/</span>lib/zerotier-one  <span class="hljs-comment">#安装好zerotier后,自动会安装到此目录</span><br><br>sudo zerotier-idtool initmoon identity.public &gt; moon.json         <span class="hljs-comment">#该命令将id文件转换为能用于配置的json</span><br></code></pre></td></tr></table></figure><h2 id="修改配置文件moon.json">修改配置文件moon.json</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;stableEndpoints&quot;</span>: [ <span class="hljs-string">&quot;23.23.23.23/9993&quot;</span> ] <span class="hljs-meta">#修改为vps的ip，端口9993</span><br></code></pre></td></tr></table></figure><p>该配置里面,有一个id字段,10个字符,如: ["id": "18fasd2319"],就是moon的id, 在客户端连接时,需要用到它.</p><h2 id="生成moon文件">生成moon文件</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo zerotier-idtool genmoon moon.<span class="hljs-keyword">json </span><br></code></pre></td></tr></table></figure><p>执行该命令后,会在在/var/lib/zerotier-one目录下生成一个类似00000018fasd2319.moon的文件..这个文件非常重要,所有的客户端要连接上moon都是依靠该文件关联的..</p><h2 id="使moon配置文件生效">使moon配置文件生效</h2><p>在/var/lib/zerotier-one目录下,新建一个 moons.d文件夹，并将刚生成的moon配置文件放到该文件夹下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mv</span> <span class="hljs-number">00000018</span>fasd<span class="hljs-number">2319</span>.moon moons.d/<br></code></pre></td></tr></table></figure><h2 id="重新启动moon服务器">重新启动moon服务器</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart zerotier-one</span><br></code></pre></td></tr></table></figure><h1id="客户端连接并使用服务器上的moon">客户端连接并使用服务器上的Moon</h1><h2 id="linux">linux</h2><p>直接在zerotier目录下,创建moons.d文件夹,并且将生成的00000018fasd2319.moon文件拷入,并重启服务即可.</p><h2 id="windows-10">Windows 10</h2><p>打开<code>C:\ProgramData\ZeroTier\One</code>文件夹，并且在其下建立<code>moons.d</code>文件夹,然后将moon服务器下生成的000xxxx.moon文件,拷贝到此文件夹内..再重启该服务即可..</p><h2 id="验证moon是否生效">验证moon是否生效</h2><p><strong>必须是管理员权限运行cmd</strong> 在开始上点右键，选择windowspowershell 管理员，打开窗口后再运行命令即可</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">zerotier-<span class="hljs-keyword">cli</span> listpeers<br></code></pre></td></tr></table></figure><p>若有类似地址,即可证明moon连接成功</p><p>200 listpeers 18fasd2319 23.23.23.23/9994;4242;4038 224 1.2.12MOON</p><p>验证时看不到本机</p><h1 id="其他方案">其他方案</h1><p>frps,nps,tinc,smartgate</p><h1 id="使用效果记录">使用效果记录</h1><p>经过一周的试用，发现用国外的vps建立的moons节点连接速度非常慢，效果并不理想，还不如不建立moon，直接用官方的就行了。下一步打算使用一下tinc</p><h1 id="参考教程">参考教程</h1><p>padavan安装zerotier: <ahref="https://www.right.com.cn/forum/thread-367080-1-1.html">https://www.right.com.cn/forum/thread-367080-1-1.html</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zerotier</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小钢炮添加虚拟内存</title>
    <link href="/2020/10/14/%E5%B0%8F%E9%92%A2%E7%82%AE%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <url>/2020/10/14/%E5%B0%8F%E9%92%A2%E7%82%AE%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</url>
    
    <content type="html"><![CDATA[<h2 id="创建虚拟文件">创建虚拟文件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">fallocate -l <span class="hljs-number">2048</span>M <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><h2 id="设置权限">设置权限</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chmod <span class="hljs-number">666</span> <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><h2 id="创建swap">创建swap</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkswap <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><h2 id="挂载swap">挂载swap</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">swapon <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><h2 id="以下步骤二选一">以下步骤二选一</h2><h3 id="添加开机启动命令">添加开机启动命令</h3><p>在System-Startup中添加上一步的挂载命令</p><h3 id="添加挂载服务">添加挂载服务</h3><p>在/etc/init.d/下建一个文件S+数字开头，比如S91swap，内容如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/sh</span><br>[ -f <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile ]  <span class="hljs-keyword">exit</span> <span class="hljs-number">0</span><br>swapon <span class="hljs-regexp">/media/</span>BC2D-<span class="hljs-number">34</span>FB<span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><p>并给予执行权限</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chmod</span> +x S<span class="hljs-number">91</span>swap<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小钢炮</tag>
      
      <tag>虚拟内存</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WIN10家庭版也能拥有组策略</title>
    <link href="/2020/10/12/Win10%E5%AE%B6%E5%BA%AD%E7%89%88%E4%B9%9F%E8%83%BD%E6%8B%A5%E6%9C%89%E7%BB%84%E7%AD%96%E7%95%A5/"/>
    <url>/2020/10/12/Win10%E5%AE%B6%E5%BA%AD%E7%89%88%E4%B9%9F%E8%83%BD%E6%8B%A5%E6%9C%89%E7%BB%84%E7%AD%96%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<p>Windows家庭版用户最大的心结，可能就是没有本地组策略编辑器（Win+R后输入gpedit.msc）了。在注册表中不好找的东西，在这里直接就图形化处理了，不可谓不方便。</p><p>今天小编就来帮大家了却心结，家庭版用户用上组策略编辑器不再是梦！</p><p>跟我来学黑科技先新建一个文本文档，把下面这些内容复制进去：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">@<span class="hljs-keyword">echo</span> off<br>pushd <span class="hljs-string">&quot;%~dp0&quot;</span><br>dir <span class="hljs-string">/b</span> C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*<span class="hljs-string">.mum</span> &gt;List.txt<br>dir <span class="hljs-string">/b</span> C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*<span class="hljs-string">.mum</span> &gt;&gt;List.txt<br>for <span class="hljs-string">/f</span> %%i in <span class="hljs-params">(&#x27;findstr /i . List.txt 2^&gt;nul&#x27;)</span> do dism <span class="hljs-string">/online</span> <span class="hljs-string">/norestart</span> <span class="hljs-string">/add-package</span>:<span class="hljs-string">&quot;C:\Windows\servicing\Packages\%%i&quot;</span><br>pause<br></code></pre></td></tr></table></figure><p>保存后将文件的后缀名从.txt改成.cmd 选择“以管理员身份运行”就行了</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>win10</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows上好用的软件</title>
    <link href="/2020/08/10/Win10%E4%B8%8A%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <url>/2020/08/10/Win10%E4%B8%8A%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="免费视频剪辑">免费视频剪辑</h2><p>Quickcut</p><h2 id="应用卸载">应用卸载</h2><p>GEEK UNINSTALLER</p><h2 id="系统清理软件">系统清理软件</h2><p>Glary Utilities 5</p><h2 id="截图工具">截图工具</h2><p>Snipaste</p><h2 id="窗口置顶工具">窗口置顶工具</h2><p>OneQuick</p><h2 id="解压缩软件">解压缩软件</h2><p>360zip国际版</p><h2 id="油猴脚本">油猴脚本</h2><p>Google Hit Hider</p><p>searchEngineJump</p><h2 id="网盘挂载工具">网盘挂载工具</h2><p>RaiDrive</p><p>rclone</p><h2 id="百度云不限速工具">百度云不限速工具</h2><p>雷鸟下载</p><h2 id="全能终端工具">全能终端工具</h2><p>MobaXterm</p><h2 id="投屏神器">投屏神器</h2><p>乐播投屏破解版</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>win10</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决win10字体发虚问题</title>
    <link href="/2020/08/07/%E8%A7%A3%E5%86%B3Win10%E5%AD%97%E4%BD%93%E5%8F%91%E8%99%9A%E9%97%AE%E9%A2%98/"/>
    <url>/2020/08/07/%E8%A7%A3%E5%86%B3Win10%E5%AD%97%E4%BD%93%E5%8F%91%E8%99%9A%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>方法一：缩放设置为自定义124%，利用bug解决问题</p><p>方法二：到wintools.info下载软件System Font Sizechanger，就可以更改各种框架下的字体大小</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>win10</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩耍JupyterNotebook</title>
    <link href="/2020/05/12/%E7%8E%A9%E8%80%8DJupyterNotebook/"/>
    <url>/2020/05/12/%E7%8E%A9%E8%80%8DJupyterNotebook/</url>
    
    <content type="html"><![CDATA[<h2 id="在docker中安装">在docker中安装</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 映射容器内jupyter的工作目录</span><br>mkdir <span class="hljs-regexp">/home/</span>jupyter<br><span class="hljs-comment"># 给jupyter写入文件夹的权限</span><br>chmod <span class="hljs-number">777</span> <span class="hljs-regexp">/home/</span>jupyter<br><span class="hljs-comment"># 映射端口和文件夹</span><br>docker run -d -v <span class="hljs-regexp">/home/</span>jupyter:<span class="hljs-regexp">/home/</span>jovyan<span class="hljs-regexp">/work --name=jupyter -p 13579:8888 jupyter/</span>base-notebook<br><br></code></pre></td></tr></table></figure><p>访问浏览器地址：127.0.0.1:13579，会进入jupyter页面，首次需要输入token。</p><p>获取token的方法是 <code>docker logs jupyter</code>,然后会看到token字样。</p><p>从jupyter 5开始，可以通过命令设置密码，jupyter notebookpassword，输入两次密码后，今后就默认启用密码登录jupyter了，不然每次都要输入token</p><h2 id="安装插件">安装插件</h2><p>进入容器命令行 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># 安装</span><br>pip <span class="hljs-keyword">install </span><span class="hljs-keyword">jupyter_contrib_nbextensions</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>配置<br><span class="hljs-keyword">jupyter </span>contrib nbextension <span class="hljs-keyword">install </span>--user --skip-running-check<br></code></pre></td></tr></table></figure> 然后可能要重新启动容器生效</p><h2 id="安装主题及设置文字">安装主题及设置文字</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># install jupyterthemes</span><br>pip <span class="hljs-keyword">install </span><span class="hljs-keyword">jupyterthemes</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>upgrade to latest version<br>pip <span class="hljs-keyword">install </span>--upgrade <span class="hljs-keyword">jupyterthemes</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword"># </span>查看可用主题<br><span class="hljs-keyword">jt </span>-l<br><br><span class="hljs-comment"># 查看jt帮助</span><br><span class="hljs-keyword">jt </span>--help<br><br><span class="hljs-comment"># 个性化设置示例</span><br><span class="hljs-keyword">jt </span>-t onedork -f roboto -fs <span class="hljs-number">14</span> -nfs <span class="hljs-number">14</span> -tfs <span class="hljs-number">14</span> -ofs <span class="hljs-number">11</span><br></code></pre></td></tr></table></figure><h2 id="常用快捷键">常用快捷键</h2><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>删除cell</td><td>dd</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="高大全的science版">高大全的science版</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run --rm -p <span class="hljs-number">8888</span>:<span class="hljs-number">8888</span> -e JUPYTER_ENABLE_LAB=yes -v <span class="hljs-string">&quot;$PWD&quot;</span>:/home/jovyan/work jupyter/datascience-notebook:<span class="hljs-number">9</span>b<span class="hljs-number">06</span>df<span class="hljs-number">75</span>e<span class="hljs-number">445</span><br></code></pre></td></tr></table></figure><p>镜像下载有6g的大小</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jupyternotebook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>盒子上的博客建立及搬迁过程</title>
    <link href="/2020/03/20/%E7%9B%92%E5%AD%90%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E5%8F%8A%E4%B8%A4%E6%AC%A1%E6%90%AC%E8%BF%81/"/>
    <url>/2020/03/20/%E7%9B%92%E5%AD%90%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E5%8F%8A%E4%B8%A4%E6%AC%A1%E6%90%AC%E8%BF%81/</url>
    
    <content type="html"><![CDATA[<h1 id="首次建立">首次建立</h1><p>直接在n1小钢炮系统里面建立了entware环境，利用onmp使得该博客正式建立</p><h1 id="搬迁到docker-wordpress">搬迁到docker wordpress</h1><h2 id="docker-wordpress建立过程">docker wordpress建立过程</h2><p>1.利用docker建立mariadb数据库（选择mariadb的原因是小钢炮架构是arm64）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-builtin-name">run</span> -itd --name some-mariadb -p 3308:3306 -e <span class="hljs-attribute">MYSQL_ROOT_PASSWORD</span>=123456 -d mariadb:tag<br></code></pre></td></tr></table></figure><p>name参数指定要启动的实例名称，MYSQL_ROOT_PASSWORD指定ROOT密码。tag参数是mariadb的版本号，我使用的是latest;由于3306已经被onmp的mysql占用，所以改端口为3308</p><p>然后通过portainer进入mariadb的主机：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">mysql</span> -u root -p <span class="hljs-comment">#连接数据库，输入密码</span><br>creat database wordpress; <br></code></pre></td></tr></table></figure><p>这样就为下一步安装wordpress做好了数据库准备</p><p>2.docker建立wordpress</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run --name some-wordpress -p <span class="hljs-number">8080</span>:<span class="hljs-number">80</span> -d wordpress:tag<br></code></pre></td></tr></table></figure><p>3.然后按正常的wordpress安装步骤进行，数据库地址那里填写192.168.50.218:3308</p><h2 id="搬迁">搬迁</h2><p>onmp里面建立的这个博客已经稳定服役了将近一年的时间，但是担心哪天小钢炮系统挂掉，另外也占用小钢炮系统空间<code>du -sh /opt/onmp</code>有500M，不便于小钢炮进一步的折腾，另外docker灵活的优势还是很明显，于是决定搬迁到docker里面来。</p><p>1.利用All-in-One WPMigration插件很方便的整体打包原站成为一个文件，大小只有40多M</p><p>2.在新站安装All-in-One WPMigration插件，安装的时候需要翻墙，不然总是失败，也有可能是wp-content文件夹没有写入权限，<code>chmod 777 wp-content</code></p><p>3.修改新站附件上传大小2M的限制： 在网站根目录的 .htaccess文件中添加如下代码：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">php_value</span> upload_max_filesize <span class="hljs-number">64</span>M<br><span class="hljs-attribute">php_value</span> post_max_size <span class="hljs-number">64</span>M<br><span class="hljs-attribute">php_value</span> max_execution_time <span class="hljs-number">300</span><br><span class="hljs-attribute">php_value</span> max_input_time <span class="hljs-number">300</span><br></code></pre></td></tr></table></figure><p>蛋疼的是docker wordpress系统连个编辑器vi,vim都没有，要么用<code>echo "追加内容" &gt;&gt; .htaccess</code> ，要么暴力<code>apt update&amp;apt install vim</code>，还是要翻墙安装，不然debian源连接不上</p><p>4.在新站中利用All-in-One WPMigration插件导入备份的文件即可（第3步不做的话上传不成功的），由于搬迁一般都会修改了ip地址或域名，所以导入成功后仔细看有一步是需要修改数据库的站点域名连接的（或叫做升级数据库）</p><p>至此折腾了一晚上，大功告成！</p><h2 id="清理释放entware占用的空间">清理释放entware占用的空间</h2><p>使用一段新博客后，考虑删除entware环境，删除前注意留意对原小钢炮系统做了哪些修改，首先还原回去。</p><p>10月5日删除了整个/opt文件夹</p><p>现在System空间就占用不到50%了</p><h2 id="再次搬迁">再次搬迁</h2><p>由于平时写作基本都是在typora中，利用markdown进行的，输入数学公式比较方便，机缘巧合看到了hexo可以将md文件直接渲染成静态网站，方便展示，于是萌生了将数学文章和平时折腾记录的文章搬迁到hexo的想法，顺便也在廖雪峰老师的网站学习了git的基本操作，于是就有了该githubpage的诞生。</p><p>每次折腾，收获满满。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小钢炮</tag>
      
      <tag>n1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在n1上安装docker及有用的镜像</title>
    <link href="/2020/03/19/n1%E5%AE%89%E8%A3%85docker%E5%8F%8A%E6%9C%89%E7%94%A8%E7%9A%84%E9%95%9C%E5%83%8F/"/>
    <url>/2020/03/19/n1%E5%AE%89%E8%A3%85docker%E5%8F%8A%E6%9C%89%E7%94%A8%E7%9A%84%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="本地n1建立openwrt系统">本地n1建立openwrt系统</h2><p>n1架构为aarch64，可以用docker里面的arm64版本的openwrt，比如有 <ahref="https://hub.docker.com/r/buddyfly/openwrt-aarch64">https://hub.docker.com/r/buddyfly/openwrt-aarch64</a></p><p><ahref="https://hub.docker.com/r/unifreq/openwrt-aarch64">https://hub.docker.com/r/unifreq/openwrt-aarch64</a></p><p>安装命令：<code>docker run --name op2 --restart always -d --network macvlan0 --mac-address 42:23:3C:4D:DB:EF --privileged buddyfly/openwrt-aarch64:latest /sbin/init</code></p><p>安装完毕后通过portainer进入主机，修改ip地址：<code>vi /etc/config/network</code>，然后就可以在浏览器中进入后台管理了，设置网络的时候主要添加网关地址比如192.168.50.1，广播地址192.168.50.255</p><h2 id="其它有用的docker项目">其它有用的docker项目</h2><p><ahref="https://hub.docker.com/u/teddysun/">https://hub.docker.com/u/teddysun/</a></p><p><ahref="https://hub.docker.com/u/oldiy">https://hub.docker.com/u/oldiy</a></p><p><ahref="https://hub.docker.com/r/mritd/shadowsocks">https://hub.docker.com/r/mritd/shadowsocks</a></p><p><ahref="https://hub.docker.com/r/trojangfw/trojan">https://hub.docker.com/r/trojangfw/trojan</a></p><p><ahref="https://hub.docker.com/r/teddysun/trojan">https://hub.docker.com/r/teddysun/trojan</a></p><p>一个远程服务器带浏览器和桌面系统</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -it -p <span class="hljs-number">5901</span>:<span class="hljs-number">5901</span> -p <span class="hljs-number">6901</span>:<span class="hljs-number">6901</span> -e <span class="hljs-string">&quot;VNC_PW=my-new-password&quot;</span> -e VNC_RESOLUTION=<span class="hljs-number">800</span>x<span class="hljs-number">600</span> consol/centos-xfce-vnc<br></code></pre></td></tr></table></figure><p>可道云</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">docker run -d -p <span class="hljs-number">88</span><span class="hljs-symbol">:</span><span class="hljs-number">80</span> --name kodexplorer -v <span class="hljs-string">&quot;$PWD&quot;</span><span class="hljs-symbol">:/var/www/html/data/User/admin/home</span> baiyuetribe/kodexplorer<br></code></pre></td></tr></table></figure><p>其中$PWD是文档存放的目录</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>n1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>N1电视盒子从Wepad固件刷入Rush固件</title>
    <link href="/2019/10/22/N1%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E4%BB%8EWepad%E5%9B%BA%E4%BB%B6%E5%88%B7%E5%85%A5Rush%E5%9B%BA%E4%BB%B6/"/>
    <url>/2019/10/22/N1%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E4%BB%8EWepad%E5%9B%BA%E4%BB%B6%E5%88%B7%E5%85%A5Rush%E5%9B%BA%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>使用了半年的wepad固件，感觉越来越臃肿，加上没有完全的root权限，于是想到更换为rush固件</p><h1 id="准备工作">准备工作</h1><p>到网盘下载刷机工具和rush固件（我的百度网盘有个文件夹“斐讯n1”），目前下载到了自己的nas里面</p><h1 id="刷机流程">刷机流程</h1><p>1.先将wepad固件恢复出厂设置，等待第二次重启以后马上断电！</p><p>2.打开usb burning tool，载入固件</p><p>3.通过usb双头线连接盒子和电脑，听到叮咚声表示盒子连接电脑正常（也可以通过设备管理器查看）</p><p>4.usb burning tool 显示连接正常，<strong>注意去掉勾选</strong>擦除flash和bootloader，然后点击开始</p><p>5.实际刷入的过程中，到1%就失败了，并且盒子和电脑的连接断开，这时直接拔掉盒子电源，然后重新插上电源，刷机工具又继续工作了，等待烧录成功即可！</p><p>注意：擦除flash和bootloader是变砖的时候勾选的！本次操作是在win10下进行的</p><h1 id="ssh连接">ssh连接</h1><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.50.162:2223</span><br>root rush<br></code></pre></td></tr></table></figure><h1 id="使用体验后记">使用体验(后记)</h1><p>今天是2020年10月12日，用了一年时间，内部存储空间5g全部占满，无法再安装任何软件，于是乎恢复出厂设置，重新安装各种软件。</p><h2 id="启动器">启动器</h2><p>atv launcher 天气插件:pure weather</p><h2 id="应用市场">应用市场</h2><p>当贝市场</p><h2 id="youtube">YouTube</h2><p>smart youtube</p><h2 id="直播软件">直播软件</h2><p>电视家无广告破解版</p><h2 id="点播软件">点播软件</h2><p>tv影院 下载地址https://wxf2088.xyz/839.html 银河奇异果无广告破解https://www.lanzoux.com/iZmbUfy0nzc</p><h2 id="投屏软件">投屏软件</h2><p>乐播投屏</p><h2 id="空间占用">空间占用</h2><p>以上软件装完以后，大概占用1.2g左右，可用空间3.8g</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>n1</tag>
      
      <tag>wepad</tag>
      
      <tag>rush</tag>
      
      <tag>电视盒子</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ddwrt路由器作无线桥接</title>
    <link href="/2019/07/14/Ddwrt%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%9C%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5/"/>
    <url>/2019/07/14/Ddwrt%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%9C%E6%97%A0%E7%BA%BF%E6%A1%A5%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="重要的事情说在前">重要的事情说在前：</h2><p>1.目前设置成功，但是总掉线，不稳定</p><p>2.用网线将一台电脑和副路由的一个lan口连接起来，只需设置副路由</p><h2 id="设置步骤">设置步骤</h2><p>连接好以后，进入副路由的管理界面</p><p>1.进入<strong>状态——无线</strong>：点击下面的“<strong>基站勘察</strong>”：找到主路由的wifi信号，加入进去，点继续</p><p>2.进入<strong>无线模式选择</strong>： <strong>clienetbridge（客户端桥接）</strong>，下面的<strong>无线网络模式</strong>、<strong>频道宽度</strong>、<strong>无线频道</strong>、<strong>无线网络名</strong>，都设置好和主路由一致，设置好后点击<strong>保存设置</strong>。</p><p>3.进入<strong>无线——无线安全</strong>：设置<strong>加密方式</strong>和<strong>密码</strong>同主路由，设置好后点击<strong>保存设置</strong>。</p><p>4.进入<strong>设置——基本设置</strong>：修改<strong>本地IP</strong>地址为同主路由同一网段但不同地址，例如主路由是192.168.50.1，那么副路由就可以设置为192.168.50.2，修改好后点击<strong>保存设置</strong>，再点击<strong>应用</strong>。路由器将重启。到这一步时，无线中继已经成功，<strong>但现在只能通过有线连接副路由</strong>（你会发现此时这台电脑已经可以上网了），为了实现无线连接副路由，继续如下操作。</p><p>5.通过<strong>新IP</strong>进入副路由设置界面，转到<strong>无线——基本设置</strong>，点击<strong>虚拟接口</strong>这里的<strong>添加</strong></p><p>6.点击后出现一个虚拟接口： <strong>无线模式</strong>：选访问点AP<strong>无线网络名（SSID）</strong>：如果要实现无线漫游，ssid名设置和主路由相同；也可以设置不同ssid，需要手动切换连接，设置好后点击<strong>保存设置</strong></p><p>7.进入<strong>无线安全</strong>：设置虚拟接口auth0.1的无线加密，如果要实现无线漫游，加密方式和密码需要同主路由一致，设置好后，点击<strong>保存设置</strong>，再点击<strong>应用</strong>。大功告成！</p><p>经过测试发现：自动漫游是成功了，但是连接副路由的手机或电脑上网非常不稳定，总是掉线。</p><p>原文地址：<ahref="https://www.chiphell.com/thread-1018824-1-1.html">https://www.chiphell.com/thread-1018824-1-1.html</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ddwrt</tag>
      
      <tag>路由器</tag>
      
      <tag>无线桥接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林路由器升级过程记录</title>
    <link href="/2019/07/06/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8D%87%E7%BA%A7%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <url>/2019/07/06/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8D%87%E7%BA%A7%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>今日把梅林固件从7.5升级到了7.9，简单记录一下过程：</p><h2 id="准备工作">准备工作</h2><p>1.到https://firmware.koolshare.cn/下载固件，找到自己路由器对应的版本</p><p>2.备份jffs的脚本</p><h2 id="开始升级">开始升级</h2><p>1.找到系统管理——固件升级——上传升级，等待3分钟左右，完成升级</p><p>2.（可选动作）为了稳定可以重置一下路由器，避免新旧版本冲突造成的一些莫名问题，如果重置，需要重新配置路由各项数据</p><h2 id="重置后需要配置的数据">重置后需要配置的数据</h2><p>1.上网账号，密码</p><p>2.wifi的设置：5g信道选择161，5g频率带宽选择为80Mhz（频率越大速率越快，但穿墙能力越弱）；专业设置中：信号间隔默认100改为50或80（可以解决wifi莫名总是断网问题），地区选择Australia（穿墙能力瞬间变强），设置完毕保存的时候会重启路由器</p><p>3.系统管理——系统设置中，开启ssh连接，开启jffs的两个选项，然后重启路由器生效</p><p>4.在软件中心中安装需要的各种东西，其中xx上网插件arm系列路由的下载地址为<ahref="https://github.com/hq450/fancyss_history_package/tree/master/fancyss_arm">https://github.com/hq450/fancyss_history_package/tree/master/fancyss_arm</a>最新4.1.9</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
      <tag>merlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林安装entware和开启虚拟内存的正确姿势</title>
    <link href="/2019/07/01/%E6%A2%85%E6%9E%97%E5%AE%89%E8%A3%85entware%E5%92%8C%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <url>/2019/07/01/%E6%A2%85%E6%9E%97%E5%AE%89%E8%A3%85entware%E5%92%8C%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="准备u盘">准备U盘</h2><ul><li><p>查找U盘，找到对应的设备名，例如/dev/sda1</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">df -h</span><br></code></pre></td></tr></table></figure></li><li><p>卸载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">umount <span class="hljs-regexp">/dev/</span>sda1<br></code></pre></td></tr></table></figure></li><li><p>格式化</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkfs</span>.ext<span class="hljs-number">4</span> /dev/sda<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>重新挂载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mount <span class="hljs-regexp">/dev/</span>sda1<span class="hljs-regexp">/ /</span>tmp<span class="hljs-regexp">/mnt/</span>sda1<br></code></pre></td></tr></table></figure></li></ul><h2 id="安装entware">安装entware</h2><p>一个命令搞定</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">entware-setup.sh<br></code></pre></td></tr></table></figure><p>注意的问题:</p><p>1.这个命令是梅林系统自带的，位于/usr/sbin下面</p><p>2.这个命令用cateof在梅林系统的/jffs/scripts/services-start中加入了开机启动项，如果是先安装虚拟内存的话，cateof命令会<strong>覆盖</strong>掉该文件的内容，导致事先设置好的虚拟内存开机启动没有了，如果想省事些，<strong>建议先安装entware，再安装虚拟内存</strong></p><h2 id="安装虚拟内存">安装虚拟内存</h2><p>教程见<a href="https://koolshare.cn/thread-42723-1-1.html"title="这里">这里</a></p><p>注意问题:</p><p>1.sdaswap脚本在/jffs/scripts/services-start中添加了2行代码：sleep 30&amp;&amp; swapon/tmp/mnt/sda1/swap/.swap，如果发现重启不能开机启动的话，检查这里是否缺失；如果没有缺失，那检查services-start是否开机自行启动，如果没有启动，在路由器后台界面的tools——script中添加natstart,/jffs/scripts/services-start</p><p>2.命令参数： 创建虚拟内存：/jffs/scripts/sdaswap start，虚拟内存大小的单位是kb 停用虚拟内存：/jffs/scripts/sdaswap stop虚拟内存用量：/jffs/scripts/sdaswap info注意“start，stop，info”的参数不可少.</p><h2 id="一些有用的知识">一些有用的知识</h2><p>1.扩展opt说明(工具箱操作) 内置存储分区 mtd8 挂载目录 /root ，/opt目录实际也在/root目录下(/root/opt) ，总可用空间80M原理是在U盘建立一个ext4格式文件，覆盖挂载到/opt目录，这样/root目录下(除了opt)原来的文件不变，/root/opt目录读写变成了读写U盘ext4文件，总可用空间变成了80+扩展文件大小可以实现安装一些大型的软件，可以理解为两个/opt目录，一个内置一个外置二选一切换，软件是独立的，共用etc配置&amp;启动目录可以把常用的装到内置存储的opt下，大型的软件装到扩展文件里，用的时候再进行切换，启用后开机自动挂载。</p><p>2.有些文件名以@结尾，表示这个文件夹带有链接属性，可以用命令<code>`ls -li`</code>查看</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>entware</tag>
      
      <tag>虚拟内存</tag>
      
      <tag>merlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林路由器安装entware踩过的坑</title>
    <link href="/2019/06/30/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85entware%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    <url>/2019/06/30/%E6%A2%85%E6%9E%97%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E8%A3%85entware%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h2 id="解决-wget-无法建立ssl问题">解决 wget 无法建立SSL问题</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -O -L <span class="hljs-regexp">/opt/</span>onmp.zip https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/xzhih/</span>ONMP<span class="hljs-regexp">/archive/m</span>aster.zip<br></code></pre></td></tr></table></figure><h2 id="创建2gb虚拟内存">创建2gb虚拟内存</h2><p>[梅林虚拟内存](<ahref="https://koolshare.cn/forum.php?mod=viewthread&amp;tid=42723&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D97">https://koolshare.cn/forum.php?mod=viewthread&amp;tid=42723&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D97</a>2gb=2097152kb "梅林虚拟内存")多么痛的领悟！！！mysqld无法启动就是因为虚拟内存设置不够，想增加内存可能会用到下面的东东</p><h2 id="相关知识">相关知识</h2><p>简单来讲就是swapoff和swapon命令，但是如果内存不足，比如出现</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">swapoff failed: Cannot <span class="hljs-built_in">allocate</span> memory<br></code></pre></td></tr></table></figure><p>提示，那么需要更进一步的操作去解决。</p><p>1，增加一个新的swap分区</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"> dd <span class="hljs-attribute">if</span>=/dev/zero  <span class="hljs-attribute">of</span>=/opt/swaptmp <span class="hljs-attribute">bs</span>=1M  <span class="hljs-attribute">count</span>=2097152 <br><br>mkswap swaptmp <br><br>swapon swaptmp <br></code></pre></td></tr></table></figure><p>2，查看swap，然后去掉原来的swap分区</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>swaps<br></code></pre></td></tr></table></figure><p>得到结果 /dev/sda3</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">swapoff <span class="hljs-regexp">/dev/</span>sda3<br></code></pre></td></tr></table></figure><p>原文：<ahref="https://blog.csdn.net/zhsh87/article/details/8954493">https://blog.csdn.net/zhsh87/article/details/8954493</a></p><h2 id="修改onmp.sh文件">修改onmp.sh文件</h2><p>由于脚本只建了512M的虚拟内存，启动mysql时可能会报错不够</p><p>将第1217行修改为 dd if=/dev/zero  of=/opt/swaptmp bs=1M count=2097152 原来是512m的虚拟内存，修改为2097152kb=2gb</p><h2 id="注意">注意：</h2><p>安装entware会更改覆盖梅林的services-start文件内容</p><p>造成的后果就是重启路由器后，虚拟内存不会自动加载</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
      <tag>entware</tag>
      
      <tag>虚拟内存</tag>
      
      <tag>merlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小钢炮安装entware环境及部署博客</title>
    <link href="/2019/06/27/%E5%B0%8F%E9%92%A2%E7%82%AE%E5%AE%89%E8%A3%85entware%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%83%A8%E7%BD%B2Wordpress%E5%8D%9A%E5%AE%A2/"/>
    <url>/2019/06/27/%E5%B0%8F%E9%92%A2%E7%82%AE%E5%AE%89%E8%A3%85entware%E7%8E%AF%E5%A2%83%E5%8F%8A%E9%83%A8%E7%BD%B2Wordpress%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是entware">什么是entware</h2><p>Entware是一个适用于嵌入式系统的软件包库，使用opkg包管理系统进行管理，现在在官方的源上已经有超过2000个软件包了，可以说是非常的丰富官方地址：<a href="https://entware.net/" title="Entware">Entware</a></p><h3 id="安装entware">安装entware</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">rm -rf /<span class="hljs-keyword">opt</span><br><span class="hljs-built_in">mkdir</span> /<span class="hljs-keyword">opt</span><br><span class="hljs-keyword">cd</span> /<span class="hljs-keyword">opt</span><br>wget -O - http://bin.entware.net/aarch64-k3.<span class="hljs-number">10</span>/installer/alternative.<span class="hljs-keyword">sh</span>  <span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>将自带opkg改名为opkg_bak暂时停用灯大固件更新可以改回来免重装系统更新软件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mv <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/opkg /u</span>sr<span class="hljs-regexp">/bin/</span>opkg_bak<br></code></pre></td></tr></table></figure><h3 id="配置entware环境变量">配置entware环境变量</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><p>直接在前面/usr/sbin:\这行下直接添加下面两行并保存退出（ESC+:wq+Enter）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>bin:\<br><span class="hljs-regexp">/opt/</span>sbin:\<br></code></pre></td></tr></table></figure><p>使配置生效</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><h3id="检查entware环境安装情况看是否报错">检查entware环境安装情况看是否报错</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">opkg update</span><br><span class="hljs-attribute">opkg list</span><br></code></pre></td></tr></table></figure><p>opkg isntall 软件名</p><h2 id="什么是onmp">什么是onmp</h2><p>ONMP: Opkg + Nginx + MySQL + PHP</p><p>这是一个用LinuxShell编写的脚本，可以为使用opkg包管理的路由器快速搭建Nginx/MySQL/PHP环境，并且内置了一些好用的网站程序一键免配置快速安装</p><p>ONMP内置了以下程序的一键安装：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs scss">(<span class="hljs-number">1</span>) phpMyAdmin（数据库管理工具）<br>(<span class="hljs-number">2</span>) WordPress（使用最广泛的CMS）<br>(<span class="hljs-number">3</span>) Owncloud（经典的私有云）<br>(<span class="hljs-number">4</span>) Nextcloud（Owncloud团队的新作，美观强大的个人云盘）<br>(<span class="hljs-number">5</span>) h5ai（优秀的文件目录）<br>(<span class="hljs-number">6</span>) Lychee（一个很好看，易于使用的Web相册）<br>(<span class="hljs-number">7</span>) Kodexplorer（可道云aka芒果云在线文档管理器）<br>(<span class="hljs-number">8</span>) Typecho (流畅的轻量级开源博客程序)<br>(<span class="hljs-number">9</span>) Z-Blog (体积小，速度快的PHP博客程序)<br>(<span class="hljs-number">10</span>) DzzOffice (开源办公平台)<br></code></pre></td></tr></table></figure><p>所有的软件包均通过 opkg 安装，一切配置均在脚本中可见，请放心使用官方地址：<ahref="https://github.com/xzhih/ONMP">https://github.com/xzhih/ONMP</a></p><h3 id="安装教程">安装教程</h3><ol type="1"><li><p>安装 Entware Entware-ng 是一个适用于嵌入式系统的软件包库，使用opkg 包管理系统进行管理，现在在官方的源上已经有超过 2000个软件包了，可以说是非常的丰富</p></li><li><p>安装onmp 一键命令，复制-&gt;粘贴-&gt;回车</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> sh <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;<span class="hljs-variable">$</span>(curl -kfsSl https://raw.githubusercontent.com/xzhih/ONMP/master/oneclick.sh)&quot;</span><br></code></pre></td></tr></table></figure><p>一长串的复制如果出错，可以按照以下给出的命令，一步步进行安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 进入 entware 挂载目录</span><br>cd /opt &amp;&amp; opkg install wget unzip <br><span class="hljs-comment"># 下载软件包</span><br>wget --no-check-certificate -O <span class="hljs-regexp">/opt/</span>onmp.zip https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/xzhih/</span>ONMP<span class="hljs-regexp">/archive/m</span>aster.zip <br><span class="hljs-comment"># 解压</span><br>unzip <span class="hljs-regexp">/opt/</span>onmp.zip <br>cd <span class="hljs-regexp">/opt/</span>ONMP-master <br><span class="hljs-comment"># 设置权限</span><br>chmod +x ./onmp.sh <br><span class="hljs-comment"># 运行</span><br>./onmp.sh <br></code></pre></td></tr></table></figure><p>接下来选择1即可安装</p></li></ol><h3 id="使用教程">使用教程</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">管理：onmp open<br>启动、停止、重启：onmp startstoprestart<br>查看网站列表：onmp list <br></code></pre></td></tr></table></figure><p>主要软件包的管理命令：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Nginx</span> 管理命令<br>onmp nginx startrestartstop<br><br>MySQL 管理命令<br>onmp mysql startrestartstop<br><br>PHP 管理命令<br>onmp php startrestartstop<br><br>Redis 管理命令<br>onmp redis startrestartstop<br></code></pre></td></tr></table></figure><h3 id="探针安装">探针安装</h3><p>正常情况下如果以上步骤都没有出错的话，会自动安装了探针，但是我的没有手动下载：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/opt/</span>wwwroot/default<br>wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/WuSiYu/</span>PHP-Probe<span class="hljs-regexp">/master/</span>tz.php<br></code></pre></td></tr></table></figure><p>进入http://localhost:81 即可查看</p><p>参考原文：<ahref="https://www.right.com.cn/forum/thread-343953-1-1.html">https://www.right.com.cn/forum/thread-343953-1-1.html</a><ahref="http://nanodm.net/post/nanodm-n1-20190411-changelog/">http://nanodm.net/post/nanodm-n1-20190411-changelog/</a><ahref="https://gitee.com/8ox86/phicomm-n1-issue/wikis/entware%20guide?sort_id=1368793">https://gitee.com/8ox86/phicomm-n1-issue/wikis/entware%20guide?sort_id=1368793</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小钢炮</tag>
      
      <tag>entware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>N1刷小钢炮教程汇总</title>
    <link href="/2019/06/24/N1%E5%88%B7%E5%B0%8F%E9%92%A2%E7%82%AE%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB/"/>
    <url>/2019/06/24/N1%E5%88%B7%E5%B0%8F%E9%92%A2%E7%82%AE%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p>下载地址：</p><p><ahref="http://files.80x86.io/router/rom/PHICOMM-N1/">http://files.80x86.io/router/rom/PHICOMM-N1/</a></p><p>最新的刷机文档：</p><p><ahref="http://files.80x86.io/router/rom/PHICOMM-N1/n1-fw-install-guide.txt">http://files.80x86.io/router/rom/PHICOMM-N1/n1-fw-install-guide.txt</a></p><p>新手和老手都要看，有更新。 降级教程：</p><p><ahref="https://gitee.com/8ox86/phicomm-n1-issue/blob/master/downgrade-n1.md">https://gitee.com/8ox86/phicomm-n1-issue/blob/master/downgrade-n1.md</a></p><p>论坛主贴： <ahref="https://www.right.com.cn/forum/thread-324404-1-1.html">https://www.right.com.cn/forum/thread-324404-1-1.html</a></p><p>【5月16日新增降级助手】N1刷电视盒子&amp;主旁路由&amp;小钢炮教程 <ahref="https://www.right.com.cn/forum/thread-539320-1-2.html">https://www.right.com.cn/forum/thread-539320-1-2.html</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小钢炮</tag>
      
      <tag>n1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给transmission,aria2添加tracker服务器</title>
    <link href="/2019/06/24/%E7%BB%99transmission%E5%92%8Caria2%E6%B7%BB%E5%8A%A0tracker%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2019/06/24/%E7%BB%99transmission%E5%92%8Caria2%E6%B7%BB%E5%8A%A0tracker%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h3id="给transmission添加tracker适用public-bittorrent">给Transmission添加tracker（适用publicBitTorrent）：</h3><p>1、电脑上安装Transmission Remote GUI，下载地址：<ahref="https://github.com/transmission-remote-gui/transgui/releases">https://github.com/transmission-remote-gui/transgui/releases</a></p><p>2、运行transgui，设置一下，填上盒子的IP、端口之类的，然后transgui就连上盒子上的Transmission了</p><p>3、选中你的任何一个种子，属性， 可以找到添加tracker的选项</p><p>4、哪里找tracker呢？网友维护的trackerslist: An updated list of publicBitTorrent trackers，地址：<ahref="https://github.com/ngosang/trackerslist">https://github.com/ngosang/trackerslist</a></p><p>我还没有找到全局tracker的设置在哪里：tracker维护好之后，以后加入的每个种子自动添加这些tracker</p><h3 id="给aria2添加">给Aria2添加</h3><p>一般在Aria2设置里面的Bittorrent设置</p><h3 id="注意事项">注意事项：</h3><p>多个地址之间用逗号隔开</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">udp:<span class="hljs-regexp">//</span>tracker.coppersurfer.tk:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.open-internet.nl:6969/</span>announce, udp:<span class="hljs-regexp">//</span>tracker.leechers-paradise.org:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.openbittorrent.com:80/</span>announce, udp:<span class="hljs-regexp">//</span>exodus.desync.com:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/9.rarbg.to:2710/</span>announce, udp:<span class="hljs-regexp">//</span><span class="hljs-number">9</span>.rarbg.me:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.internetwarriors.net:1337/</span>announce, [http:<span class="hljs-regexp">//</span>tracker.internetwarriors.net:<span class="hljs-number">1337</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.internetwarriors.net:1337/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.opentrackr.org:<span class="hljs-number">1337</span><span class="hljs-regexp">/announce, [http://tracker.opentrackr.org:1337/announce](http:/</span><span class="hljs-regexp">/tracker.opentrackr.org:1337/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.torrent.eu.org:<span class="hljs-number">451</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/thetracker.org:80/</span>announce, udp:<span class="hljs-regexp">//</span>bt.xxx-tracker.com:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.tiny-vps.com:6969/</span>announce, udp:<span class="hljs-regexp">//</span>tracker.cyberia.is:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/open.demonii.si:1337/</span>announce, [http:<span class="hljs-regexp">//</span>open.acgnxtracker.com:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/open.acgnxtracker.com:80/</span>announce), udp:<span class="hljs-regexp">//i</span>pv4.tracker.harry.lu:<span class="hljs-number">80</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/explodie.org:6969/</span>announce, [http:<span class="hljs-regexp">//</span>explodie.org:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/explodie.org:6969/</span>announce), udp:<span class="hljs-regexp">//</span>retracker.netbynet.ru:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.trackton.ga:7070/</span>announce, udp:<span class="hljs-regexp">//</span>tracker.supertracker.net:<span class="hljs-number">1337</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.iamhansen.xyz:2000/</span>announce, udp:<span class="hljs-regexp">//</span>tracker.filepit.to:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.filemail.com:6969/</span>announce, udp:<span class="hljs-regexp">//</span>torrentclub.tech:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/retracker.lanta-net.ru:2710/</span>announce, udp:<span class="hljs-regexp">//</span>retracker.baikal-telecom.net:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, [http://torrentclub.tech:6969/announce](http:/</span><span class="hljs-regexp">/torrentclub.tech:6969/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.novg.net:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, [http://tracker.novg.net:6969/announce](http:/</span><span class="hljs-regexp">/tracker.novg.net:6969/</span>announce), [http:<span class="hljs-regexp">//</span>opentracker.h4ck.me:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/opentracker.h4ck.me:6969/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.uw0.xyz:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.tvunderground.org.ru:3218/</span>announce, [https:<span class="hljs-regexp">//</span>tracker.fastdownload.xyz:<span class="hljs-number">443</span><span class="hljs-regexp">/announce](https:/</span><span class="hljs-regexp">/tracker.fastdownload.xyz:443/</span>announce), [https:<span class="hljs-regexp">//</span>t.quic.ws:<span class="hljs-number">443</span><span class="hljs-regexp">/announce](https:/</span><span class="hljs-regexp">/t.quic.ws:443/</span>announce), [http:<span class="hljs-regexp">//</span>tracker.tvunderground.org.ru:<span class="hljs-number">3218</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.tvunderground.org.ru:3218/</span>announce), [http:<span class="hljs-regexp">//</span>open.trackerlist.xyz:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/open.trackerlist.xyz:80/</span>announce), [http:<span class="hljs-regexp">//</span>open.acgtracker.com:<span class="hljs-number">1096</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/open.acgtracker.com:1096/</span>announce), [http:<span class="hljs-regexp">//g</span>wp2-v19.rinet.ru:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/gwp2-v19.rinet.ru:80/</span>announce), udp:<span class="hljs-regexp">//</span>zephir.monocul.us:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/tracker.kamigami.org:2710/</span>announce, udp:<span class="hljs-regexp">//</span>tracker.gbitt.info:<span class="hljs-number">80</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/retracker.maxnet.ua:80/</span>announce, udp:<span class="hljs-regexp">//</span>retracker.akado-ural.ru:<span class="hljs-number">80</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/carapax.net:6969/</span>announce, [https:<span class="hljs-regexp">//</span>tracker.gbitt.info:<span class="hljs-number">443</span><span class="hljs-regexp">/announce](https:/</span><span class="hljs-regexp">/tracker.gbitt.info:443/</span>announce), [http:<span class="hljs-regexp">//</span>vps02.net.orel.ru:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/vps02.net.orel.ru:80/</span>announce), [http:<span class="hljs-regexp">//</span>tracker.gbitt.info:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.gbitt.info:80/</span>announce), [http:<span class="hljs-regexp">//m</span>ail2.zelenaya.net:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/mail2.zelenaya.net:80/</span>announce), [http:<span class="hljs-regexp">//</span>carapax.net:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/carapax.net:6969/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.nyaa.uk:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, [http://tracker.moxing.party:6969/announce](http:/</span><span class="hljs-regexp">/tracker.moxing.party:6969/</span>announce), udp:<span class="hljs-regexp">//</span>tracker.moeking.me:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/retracker.sevstar.net:2710/</span>announce, udp:<span class="hljs-regexp">//</span>pubt.<span class="hljs-keyword">in</span>:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, udp:/</span><span class="hljs-regexp">/home.penza.com.ru:6969/</span>announce, udp:<span class="hljs-regexp">//</span>bt.dy20188.com:<span class="hljs-number">80</span><span class="hljs-regexp">/announce, [https://tracker.vectahosting.eu:2053/announce](https:/</span><span class="hljs-regexp">/tracker.vectahosting.eu:2053/</span>announce), [https:<span class="hljs-regexp">//</span>tracker.parrotsec.org:<span class="hljs-number">443</span><span class="hljs-regexp">/announce](https:/</span><span class="hljs-regexp">/tracker.parrotsec.org:443/</span>announce), [http:<span class="hljs-regexp">//</span>tracker.torrentyorg.pl:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.torrentyorg.pl:80/</span>announce), [http:<span class="hljs-regexp">//</span>tracker.bz:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.bz:80/</span>announce), [http:<span class="hljs-regexp">//</span>tracker.bt4g.com:<span class="hljs-number">2095</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker.bt4g.com:2095/</span>announce), [http:<span class="hljs-regexp">//</span>torrent.nwps.ws:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/torrent.nwps.ws:80/</span>announce), [http:<span class="hljs-regexp">//</span>t.nyaatracker.com:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/t.nyaatracker.com:80/</span>announce), [http:<span class="hljs-regexp">//</span>retracker.sevstar.net:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/retracker.sevstar.net:2710/</span>announce), udp:<span class="hljs-regexp">//</span>packages.crunchbangplusplus.org:<span class="hljs-number">6969</span><span class="hljs-regexp">/announce, [https://1337.abcvg.info:443/announce](https:/</span><span class="hljs-regexp">/1337.abcvg.info:443/</span>announce), [http:<span class="hljs-regexp">//</span>t.acg.rip:<span class="hljs-number">6699</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/t.acg.rip:6699/</span>announce), [http:<span class="hljs-regexp">//</span>share.camoe.cn:<span class="hljs-number">8080</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/share.camoe.cn:8080/</span>announce), [http:<span class="hljs-regexp">//</span>retracker.mgts.by:<span class="hljs-number">80</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/retracker.mgts.by:80/</span>announce), [http:<span class="hljs-regexp">//</span>bt-tracker.gamexp.ru:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/bt-tracker.gamexp.ru:2710/</span>announce), udp:<span class="hljs-regexp">//</span>tracker4.itzmx.com:<span class="hljs-number">2710</span><span class="hljs-regexp">/announce, [http://tracker4.itzmx.com:2710/announce](http:/</span><span class="hljs-regexp">/tracker4.itzmx.com:2710/</span>announce), [http:<span class="hljs-regexp">//</span>tracker3.itzmx.com:<span class="hljs-number">6961</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker3.itzmx.com:6961/</span>announce), [http:<span class="hljs-regexp">//</span>tracker2.itzmx.com:<span class="hljs-number">6961</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker2.itzmx.com:6961/</span>announce), [http:<span class="hljs-regexp">//</span>tracker1.itzmx.com:<span class="hljs-number">8080</span><span class="hljs-regexp">/announce](http:/</span><span class="hljs-regexp">/tracker1.itzmx.com:8080/</span>announce),<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>transmission</tag>
      
      <tag>aria2</tag>
      
      <tag>tracker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frp内网穿透</title>
    <link href="/2019/06/24/Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%95%99%E7%A8%8B/"/>
    <url>/2019/06/24/Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="两个问题">两个问题</h2><h3 id="frps和frpc有什么区别">1.frps和frpc有什么区别？</h3><p>s指的是server端，c指的是客户端</p><h3 id="需要什么东西">2.需要什么东西？</h3><p>一个vps 或者别人已经搭好的免费的frp服务，比如ddnsto.com</p><h2 id="如何利用vps自建frp服务">如何利用VPS自建frp服务</h2><h3 id="frps服务端搭建">1.frps服务端搭建</h3><p>首先到 frp 的 releases 页面下载最新版的对应 VPS 的处理器架构的压缩包<ahref="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a>如何知道 VPS 的处理器架构？在 VPS 上运行这个命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">arch<br></code></pre></td></tr></table></figure><p>如果输出x86_64则需要下载带linux_amd64的那个压缩包；如果输出的是其他的，则在文件列表中找 linux 的对应架构的压缩包以x86_64架构举例（目前大多数都应该是这个架构）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /root<br><br><span class="hljs-meta">#</span><span class="bash"> 下载</span><br>wget --no-check-certificate https://github.com/fatedier/frp/releases/download/v0.18.0/frp_0.18.0_linux_amd64.tar.gz<br><br><span class="hljs-meta">#</span><span class="bash"> 解压</span><br>tar -xzvf frp_0.18.0_linux_amd64.tar.gz<br><br><span class="hljs-meta">#</span><span class="bash"> 文件夹名改成 frp，不然目录太长了不方便</span><br>mv frp_0.18.0_linux_amd64 frp<br>cd frp<br><br><span class="hljs-meta">#</span><span class="bash"> 确保 frps 程序具有可执行权限</span><br>chmod +x frps<br></code></pre></td></tr></table></figure><p>然后试着运行一下frps,看看能否运行</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./frps</span> <span class="hljs-params">--help</span><br></code></pre></td></tr></table></figure><p>正常情况下会输出一串帮助信息，那么就说明你下载了正确架构的版本如果提示-bash: ./frps: cannot execute binary file: Exec formaterror就说明你下错版本了</p><h3 id="配置frps服务器">2.配置frps服务器</h3><p>参考以下配置说明来书写配置文件frps.ini，你可以先在电脑上打一份草稿此处只解释说明一些必要和常用的配置，如需研究完整配置说明请看目录下的frps_full.ini，以及参考<ahref="https://github.com/fatedier/frp/blob/master/README_zh.md"title="frp中文说明">frp中文说明</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 下面这句开头必须要有，表示配置的开始</span><br>[common]<br><br><span class="hljs-meta">#</span><span class="bash"> frp 服务端端口（必须）</span><br>bind_port = 7000<br><br><span class="hljs-meta">#</span><span class="bash"> frp 服务端密码（必须）</span><br>token = 12345678<br><br><span class="hljs-meta">#</span><span class="bash"> 认证超时时间，由于时间戳会被用于加密认证，防止报文劫持后被他人利用</span><br><span class="hljs-meta">#</span><span class="bash"> 因此服务端与客户端所在机器的时间差不能超过这个时间（秒）</span><br><span class="hljs-meta">#</span><span class="bash"> 默认为900秒，即15分钟，如果设置成0就不会对报文时间戳进行超时验证</span><br>authentication_timeout = 900<br><br><span class="hljs-meta">#</span><span class="bash"> 仪表盘端口，只有设置了才能使用仪表盘（即后台）</span><br>dashboard_port = 7500<br><br><span class="hljs-meta">#</span><span class="bash"> 仪表盘访问的用户名密码，如果不设置，则默认都是 admin</span><br>dashboard_user = admin<br>dashboard_pwd = admin<br><br><span class="hljs-meta">#</span><span class="bash"> 如果你想要用 frp 穿透访问内网中的网站（例如路由器设置页面）</span><br><span class="hljs-meta">#</span><span class="bash"> 则必须要设置以下两个监听端口，不设置则不会开启这项功能</span><br>vhost_http_port = 10080<br>vhost_https_port = 10443<br><br><span class="hljs-meta">#</span><span class="bash"> 此设置需要配合客户端设置，仅在穿透到内网中的 http 或 https 时有用（可选）</span><br><span class="hljs-meta">#</span><span class="bash"> 假设此项设置为 example.com，客户端配置 http 时将 subdomain 设置为 <span class="hljs-built_in">test</span>，</span><br><span class="hljs-meta">#</span><span class="bash"> 则你将 test.example.com 解析到服务端后，可以使用此域名来访问客户端对应的 http</span><br>subdomain_host = example.com<br></code></pre></td></tr></table></figure><p>然后把你的准备好的配置文件内容写入frps.ini</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;[common]<br>bind_port = 7000<br>token = 12345678<br>dashboard_port = 7500<br>dashboard_user = admin<br>dashboard_pwd = admin<br>vhost_http_port = 10080<br>vhost_https_port = 10443<br>subdomain_host = example.com&quot; &gt; frps.ini<br></code></pre></td></tr></table></figure><p>试着启动一下frps</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 使用 -c 参数指定配置文件</span><br>./frps -c frps.ini<br></code></pre></td></tr></table></figure><p>如果没有出现错误提示就说明配置没有问题，可以正常使用 接着按下Ctrl +C可以终止程序运行</p><h3 id="使-frps-在后台持续运行">3. 使 frps 在后台持续运行</h3><p>启动 直接使用前面的命令行来运行是不行的，因为在关掉 ssh窗口后程序frps就会停止运行，因此要使用nohup [command]&amp;这种操作来使其在后台运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup /root/frp/frps -c /root/frp/frps.ini &amp;<br></code></pre></td></tr></table></figure><p>并且程序的所有输出（日志）会被写入nohup.out文件中，你可以使用cat命令查看其内容</p><p>停止 想停止的话，结束frps即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkill frps<br></code></pre></td></tr></table></figure><p>重启 那就先停止再启动</p><p>加入开机自启 编辑/etc/rc.local文件，将启动那句命令加到exit0语句之前（如果有）</p><p>注意：debian9需要自行创建rc.local文件，详细看这https://sb.sb/blog/debian-9-rc-local/</p><h3 id="配置frpc客户端">4.配置frpc客户端</h3><p>在梅林固件中，安装“frpc穿透”software，里面的配置对照第3步中的frps.ini进行配置即可，注意ac66ub1必须用虚拟内存软件，必须用虚拟内存软件，必须用虚拟内存软件，重要的事情说三遍目前自己只是实现了udp的穿透形式：即 example.com:端口进行穿透，当然首先需要将域名解析到frps服务器的ip</p><h2 id="后记">后记</h2><p>这里只是记录自己目前实现的配置，感谢https://moe.best/tutorial/frp.html 这个教程</p><h2 id="更新于2021年5月4日">更新于2021年5月4日</h2><p>由于经过两年时间frp版本的更新，除了以上基本功能外，再记录两个有用的新特性：</p><h3 id="安全暴露内网服务">安全暴露内网服务</h3><p>对于某些服务来说如果直接暴露于公网上将会存在安全隐患。</p><p>使用 <code>stcp(secret tcp)</code>类型的代理可以避免让任何人都能访问到要穿透的服务，但是访问者也需要运行另外一个<code>frpc</code> 客户端。</p><p>1.<code>frps.ini</code> 内容如下： <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">[common]<br>bind_port = 7000<br></code></pre></td></tr></table></figure></p><p>2.在需要暴露到内网的机器上部署 <code>frpc</code> ，且配置如下：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json">[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br><br>[secret_ssh]<br>type = stcp<br># 只有 sk 一致的用户才能访问到此服务<br>sk = abcdefg<br>local_ip = 127.0.0.1<br>local_port = 22<br></code></pre></td></tr></table></figure></p><p>3.在想要访问内网服务的机器上也部署 <code>frpc</code> ，且配置如下：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json">[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br><br>[secret_ssh_visitor]<br>type = stcp<br># stcp 的访问者<br>role = visitor<br># 要访问的 stcp 代理的名字<br>server_name = secret_ssh<br>sk = abcdefg<br># 绑定本地端口用于访问 SSH 服务<br>bind_addr = 127.0.0.1<br>bind_port = 6000<br></code></pre></td></tr></table></figure></p><p>4.通过 <code>SSH</code> 访问内网机器，假设用户名为 <code>test</code>： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">ssh -p 6000 test@127.0.0.1<br></code></pre></td></tr></table></figure> 更多设置方式见<ahref="https://gofrp.org/docs/examples/">示例</a></p><h3 id="添加为系统服务">添加为系统服务</h3><p>目前最新版的frp是0.36.2，下载下来以后其中有一个 <code>systemd</code>文件夹，当中有文件 <code>frps.service</code> 和<code>frpc.service</code></p><p>查看 <code>frps.service</code> 的内容如下： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Shell">[Unit]<br>Description=Frp Server Service<br>After=network.target<br><br>[Service]<br>Type=simple<br>User=nobody<br>Restart=on-failure<br>RestartSec=5s<br>ExecStart=/usr/bin/frps -c /etc/frp/frps.ini<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure>因此我们可以如下操作将frps添加为系统服务： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta">#</span><span class="bash"> 在下载解压后的frp文件夹内执行</span><br>cp frps /usr/bin<br>mkdir /etc/frp<br>cp frps.ini /etc/frp<br><br><span class="hljs-meta">#</span><span class="bash">/etc/systemd/system或/lib/systemd/system是存放系统服务的文件夹</span><br>cp ./systemd/frps.service /etc/systemd/system<br><br><span class="hljs-meta">#</span><span class="bash">激活系统服务</span><br>systemctl enable frps.service <br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-built_in">enable</span>的作用就是创建了一个链接到/etc/systemd/system/multi-user.target文件夹</span><br><br><span class="hljs-meta">#</span><span class="bash">测试启动服务</span><br>systemctl start frps.service<br></code></pre></td></tr></table></figure>同理在客户端也可以将 <code>frpc</code> 设置为系统服务</p><p>参考文献：</p><ul><li><p><ahref="https://segmentfault.com/a/1190000014740871">如何编写一个SystemdService</a></p></li><li><p><ahref="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">Systemd入门教程：实战篇</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网穿透</tag>
      
      <tag>frp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
